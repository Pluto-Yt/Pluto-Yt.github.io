{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83d\udd25** \u6b22\u8fce\u6765\u5230\u5c0f\u6768\u540c\u5b66\u7684wiki ** -- \u60a8\u53ef\u4ee5\u901a\u8fc7 https://github.com/Pluto-Yt/cuit-tech-wiki \u52a0\u5165\u6211\u4eec\u7684Wiki\u8d44\u6599\u5e93. \u8054\u7cfb\u65b9\u5f0f Github: Yang-tech-wiki \ud83d\udcda \u5c0f\ud83d\udc37\u7406\u59d3\u540d: Myy \ud83d\udcda","title":"\u5173\u4e8e\u6211\u4eec"},{"location":"#wiki","text":"-- \u60a8\u53ef\u4ee5\u901a\u8fc7 https://github.com/Pluto-Yt/cuit-tech-wiki \u52a0\u5165\u6211\u4eec\u7684Wiki\u8d44\u6599\u5e93.","title":"\ud83d\udd25** \u6b22\u8fce\u6765\u5230\u5c0f\u6768\u540c\u5b66\u7684wiki **"},{"location":"#_1","text":"Github: Yang-tech-wiki \ud83d\udcda \u5c0f\ud83d\udc37\u7406\u59d3\u540d: Myy \ud83d\udcda","title":"\u8054\u7cfb\u65b9\u5f0f"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Flink/","text":"\u4eba\u7269\u7b80\u4ecb","title":"Flink"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Flink/#_1","text":"","title":"\u4eba\u7269\u7b80\u4ecb"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hadoop/","text":"Matlab\u52a8\u6001PID\u4eff\u771f\u53caPID\u77e5\u8bc6\u68b3\u7406-\u4e91\u793e\u533a-\u534e\u4e3a\u4e91 (huaweicloud.com) \u4f4d\u7f6e\u5f0fPID\u4e0e\u589e\u91cf\u5f0fPID\u533a\u522b\u6d45\u6790_Z\u5c0f\u65cb-CSDN\u535a\u5ba2_\u589e\u91cf\u5f0fpid \u300c\u671f\u671b\u503c\u662f\u4ec0\u4e48\uff0c\u4e0e\u63a7\u5236\u5668\u6ca1\u6709\u5173\u7cfb\u300d \uff0c\u800c\u662f\u4e0e\u7269\u7406\u5bf9\u8c61\u6709\u5173\u3002\u66f4\u76f4\u63a5\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u4f60\u4f7f\u7528\u4e86\u8fd9\u4e2a\u7269\u7406\u91cf\u505a\u53cd\u9988\u800c\uff0c\u671f\u671b\u503c\u9700\u8981\u4e0e\u53cd\u9988\u505a\u5dee\uff0c\u6240\u4ee5\u671f\u671b\u503c\u624d\u6709\u4e86\u7269\u7406\u610f\u4e49\u3002 \u300c\u671f\u671b\u503c\u662f\u4ec0\u4e48\u53d6\u51b3\u4e8e\u53cd\u9988\u503c\u662f\u4ec0\u4e48\u3002\u300d \u5e38\u7528PID\u7b97\u6cd5\uff1a \u2460PI\u7b97\u6cd5\uff1a \u7279\u70b9 \uff1a \u4ece\u65f6\u57df\u4e0a\u770b\uff0c\u53ea\u8981\u5b58\u5728\u504f\u5dee\uff0c\u79ef\u5206\u5c31\u4f1a\u4e0d\u505c\u5bf9\u504f\u5dee\u79ef\u7d2f\uff0c\u56e0\u6b64\u7a33\u6001\u65f6\u8bef\u5dee\u4e00\u5b9a\u4e3a\u96f6 \u4e0d\u8db3\uff1a\u6bd4\u4f8b\u4e0e\u79ef\u5206\u52a8\u4f5c\u90fd\u662f\u5bf9\u8fc7\u53bb\u63a7\u5236\u8bef\u5dee\u8fdb\u884c\u64cd\u4f5c\uff0c \u4e0d\u5bf9\u672a\u6765\u63a7\u5236\u8bef\u5dee\u8fdb\u884c\u9884\u6d4b\uff0c\u9650\u5236\u4e86\u63a7\u5236\u6027\u80fd\u3002 PI\u8c03\u8282\u5c06\u6bd4\u5217\u8c03\u8282\u7684\u5feb\u901f\u53cd\u5e94\u4e0e\u79ef\u5206\u8c03\u8282\u6d88\u9664\u9759\u5dee\u7684\u7279\u70b9\u7ed3\u5408\uff0c\u5b9e\u73b0\u597d\u7684\u8c03\u8282\u6548\u679c\u3002 PI\u8c03\u8282\u9002\u7528\u4e8e\u63a7\u5236\u901a\u9053\u6ede\u540e\u8f83\u5c0f\u3001\u8d1f\u8377\u53d8\u5316\u4e0d\u5927\u3001 \u5de5\u827a\u53c2\u6570\u4e0d\u5141\u8bb8\u6709\u9759\u5dee\u7684\u7cfb\u7edf\u3002 \u2461PD\u7b97\u6cd5\uff1a \u9002\u7528\u4e8e\u8235\u673a\u5feb\u901f\u54cd\u5e94 \u5bf9\u4e8e\u60ef\u6027\u8f83\u5927\u7684\u5bf9\u8c61\uff0c\u5e38\u5e38\u5e0c\u671b\u80fd\u52a0\u5feb\u63a7\u5236\u901f\u5ea6\uff0c \u6b64\u65f6\u53ef\u589e\u52a0\u5fae\u5206\u4f5c\u7528\u3002 \u7279\u70b9 \uff1a \u6bd4\u4f8b\u63a7\u5236\u5bf9\u4e8e\u60ef\u6027\u8f83\u5927\u5bf9\u8c61\uff0c\u63a7\u5236\u8fc7\u7a0b\u7f13\u6162\uff0c\u63a7\u5236\u54c1\u8d28\u4e0d\u4f73\u3002\u6bd4\u4f8b\u5fae\u5206\u63a7\u5236\u53ef\u63d0\u9ad8\u63a7\u5236\u901f\u5ea6\uff0c\u5bf9\u60ef\u6027\u8f83\u5927\u5bf9\u8c61\uff0c\u53ef\u6539\u5584\u63a7\u5236\u8d28\u91cf\uff0c\u51cf\u5c0f\u504f\u5dee\uff0c\u7f29\u77ed\u63a7\u5236\u65f6\u95f4\u3002 \u7406\u60f3\u5fae\u5206\u4f5c\u7528\u6301\u7eed\u65f6\u95f4\u592a\u77ed\uff0c \u6267\u884c\u5668\u6765\u4e0d\u53ca\u54cd\u5e94\u3002\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e00\u822c\u52a0\u4ee5\u60ef\u6027\u5ef6\u8fdf\uff0c\u79f0\u4e3a\u5b9e\u9645\u5fae\u5206\u3002 PD \u8c03\u8282\u4ee5\u6bd4\u4f8b\u8c03\u8282\u4e3a\u4e3b\uff0c\u5fae\u5206\u8c03\u8282\u4e3a\u8f85\uff0cPD\u8c03\u8282\u662f \u6709\u5dee\u8c03\u8282 \u3002 PD \u8c03\u8282\u5177\u6709\u63d0\u9ad8\u7cfb\u7edf\u7a33\u5b9a\u6027\u3001\u6291\u5236\u8fc7\u6e21\u8fc7\u7a0b\u6700\u5927\u52a8\u6001\u504f\u5dee\u7684\u4f5c\u7528\u3002 PD \u8c03\u8282\u6709\u5229\u4e8e\u63d0\u9ad8\u7cfb\u7edf\u54cd\u5e94\u901f\u5ea6\u3002 PD \u8c03\u8282\u6297\u5e72\u6270\u80fd\u529b\u5dee\uff0c\u4e00\u822c\u53ea\u80fd\u5e94\u7528\u4e8e\u88ab\u8c03\u53c2\u6570 \u53d8\u5316\u5e73\u7a33\u7684\u751f\u4ea7\u8fc7\u7a0b\u3002 \u5fae\u5206\u4f5c\u7528 \u592a\u5f3a \u65f6\uff0c\u5bb9\u6613\u9020\u6210\u7cfb\u7edf \u632f\u8361 \u3002 \u2462PID\u7b97\u6cd5\uff1a \u5c06\u6bd4\u4f8b\u3001\u79ef\u5206\u3001\u5fae\u5206\u4e09\u79cd\u8c03\u8282\u89c4\u5f8b\u7ed3\u5408\u5728\u4e00\u8d77\uff0c \u53ea\u8981\u4e09\u9879\u4f5c\u7528\u7684\u5f3a\u5ea6\u914d\u5408\u9002\u5f53\uff0c\u65e2\u80fd\u5feb\u901f\u8c03\u8282\uff0c\u53c8\u80fd\u6d88\u9664\u4f59\u5dee\uff0c\u53ef\u5f97\u5230\u6ee1\u610f\u7684\u63a7\u5236\u6548\u679c\u3002 \u7279\u70b9 \uff1a PID \u63a7\u5236\u4f5c\u7528\u4e2d\uff0c\u6bd4\u4f8b\u4f5c\u7528\u662f\u57fa\u7840\u63a7\u5236\uff1b\u5fae\u5206\u4f5c\u7528\u662f \u7528\u4e8e\u52a0\u5feb\u7cfb\u7edf\u63a7\u5236\u901f\u5ea6\uff1b\u79ef\u5206\u4f5c\u7528\u662f\u7528\u4e8e\u6d88\u9664\u9759\u5dee\u3002 \u53ea\u8981\u6bd4\u4f8b\u3001\u79ef\u5206\u3001\u5fae\u5206\u4e09\u79cd\u63a7\u5236\u89c4\u5f8b\u5f3a\u5ea6\u914d\u5408\u9002\u5f53\uff0c \u65e2\u80fd\u5feb\u901f\u8c03\u8282\uff0c\u53c8\u80fd\u6d88\u9664\u4f59\u5dee\uff0c\u53ef\u5f97\u5230\u6ee1\u610f\u63a7\u5236\u6548\u679c\u3002 Kp \u8f83\u5c0f\u65f6\uff0c\u7cfb\u7edf\u5bf9\u5fae\u5206\u548c\u79ef\u5206\u73af\u8282\u7684\u5f15\u5165\u8f83\u4e3a\u654f\u611f\uff0c\u79ef\u5206\u4f1a\u5f15\u8d77\u8d85\u8c03\uff0c\u5fae\u5206\u53ef\u80fd\u4f1a\u5f15\u8d77\u632f\u8361\uff0c\u800c\u632f\u8361\u5267\u70c8\u7684\u65f6\u5019\u8d85\u8c03\u4e5f\u4f1a\u589e\u52a0\u3002 Kp \u589e\u5927\u65f6\uff0c\u79ef\u5206\u73af\u8282\u7531\u4e8e\u6ede\u540e\u4ea7\u751f\u7684\u8d85\u8c03\u9010\u6e10\u51cf\u5c0f\uff0c\u6b64\u65f6\u5982\u679c\u60f3\u8981\u7ee7\u7eed\u51cf\u5c11\u8d85\u8c03\u53ef\u4ee5\u9002\u5f53\u5f15\u5165\u5fae\u5206\u73af\u8282\u3002\u7ee7\u7eed\u589e\u5927 Kp \u7cfb\u7edf\u53ef\u80fd\u4f1a\u4e0d\u592a\u7a33\u5b9a\uff0c\u56e0\u6b64\u5728\u589e\u52a0 Kp \u7684\u540c\u65f6\u5f15\u5165 Kd \u51cf\u5c0f\u8d85\u8c03\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5728 Kp \u4e0d\u662f\u5f88\u5927\u7684\u60c5\u51b5\u4e0b\u4e5f\u80fd\u53d6\u5f97\u8f83\u597d\u7684\u7a33\u6001\u7279\u6027\u548c\u52a8\u6001\u6027\u80fd\u3002 Kp \u8f83\u5c0f\u65f6\uff0c\u79ef\u5206\u73af\u8282\u4e0d\u5b9c\u8fc7\u5927\uff0cKp \u8f83\u5927\u65f6\u79ef\u5206\u73af\u8282\u4e5f\u4e0d\u5b9c\u8fc7\u5c0f\uff08\u5426\u5219\u8c03\u8282\u65f6\u95f4\u4f1a\u975e\u5e38\u5730\u957f\uff09\uff0c\u5f53\u4f7f\u7528\u5206\u6bb5PID \uff0c\u5728\u6070\u5f53\u7684\u6761\u4ef6\u4e0b\u5206\u79bb\u79ef\u5206\uff0c\u53ef\u4ee5\u53d6\u5f97\u66f4\u597d\u7684\u63a7\u5236\u6548\u679c\u3002\u539f\u56e0\u5728\u4e8e\u5728\u7a33\u6001\u8bef\u5dee\u5373\u5c06\u6ee1\u8db3\u8981\u6c42\u65f6\uff0c\u6d88\u9664\u4e86\u7cfb\u7edf\u7684\u6ede\u540e\u3002\u56e0\u6b64\u7cfb\u7edf\u8d85\u8c03\u4f1a\u660e\u663e\u51cf\u5c11\u3002 \u589e\u91cf\u5f0fPID\u7684\u4f18\u7f3a\u70b9\uff1a \u4f4d\u7f6e\u578bPID\u548c\u589e\u91cf\u578bPID\u7684\u6bd4\u8f83\uff1a \u4f4d\u7f6e\u5f0f\u9700\u5f15\u5165\u521d\u59cb\u9600\u4f4d\u503c\uff0c\u589e\u91cf\u5f0f\u4e0d\u9700\u8981 \u4f4d\u7f6e\u5f0f\u9700\u9632\u79ef\u5206\u9971\u548c\uff0c\u589e\u91cf\u5f0f\u4e0d\u4f1a\u4ea7\u751f \u79ef\u5206\u9971\u548c \u53ea\u6709\u5b58\u5728\u504f\u5dee\u65f6\uff0c\u589e\u91cf\u5f0f\u624d\u4f1a\u6709\u8f93\u51fa \u589e\u91cf\u5f0f\u5bb9\u6613\u5b9e\u73b0\u4ece\u624b\u52a8\u5230\u81ea\u52a8\u7684\u5207\u6362 \u4f4d\u7f6e\u5f0fPID\u63a7\u5236\u7684\u8f93\u51fa\u4e0e\u6574\u4e2a\u8fc7\u53bb\u7684\u72b6\u6001\u6709\u5173\uff0c\u7528\u5230\u4e86\u8bef\u5dee\u7684\u7d2f\u52a0\u503c;\u800c\u589e\u91cf\u5f0fPID\u7684\u8f93\u51fa\u53ea\u4e0e\u5f53\u524d\u62cd\u548c\u524d\u4e24\u62cd\u7684\u8bef\u5dee\u6709\u5173\uff0c\u56e0\u6b64\u4f4d\u7f6e\u5f0fPID\u63a7\u5236\u7684\u7d2f\u79ef\u8bef\u5dee\u76f8\u5bf9\u66f4\u5927; \u4f18\uff1a \u2460\u7b97\u5f0f\u4e2d\u4e0d\u9700\u8981\u7d2f\u52a0\u3002\u63a7\u5236\u589e\u91cf\u0394u(k)\u7684\u786e\u5b9a\u4ec5\u4e0e\u6700\u8fd13\u6b21\u7684\u91c7\u6837\u503c\u6709\u5173\uff0c\u5bb9\u6613\u901a\u8fc7\u52a0\u6743\u5904\u7406\u83b7\u5f97\u6bd4\u8f83\u597d\u7684\u63a7\u5236\u6548\u679c\uff1b \u2461\u8ba1\u7b97\u673a\u6bcf\u6b21\u53ea\u8f93\u51fa\u63a7\u5236\u589e\u91cf\uff0c\u5373\u5bf9\u5e94\u6267\u884c\u673a\u6784\u4f4d\u7f6e\u7684\u53d8\u5316\u91cf\uff0c\u6545\u673a\u5668\u53d1\u751f\u6545\u969c\u65f6\u5f71\u54cd\u8303\u56f4\u5c0f\u3001\u4e0d\u4f1a\u4e25\u91cd\u5f71\u54cd\u751f\u4ea7\u8fc7\u7a0b\uff1b \u2462\u624b\u52a8\u2014\u81ea\u52a8\u5207\u6362\u65f6\u51b2\u51fb\u5c0f\u3002\u5f53\u63a7\u5236\u4ece\u624b\u52a8\u5411\u81ea\u52a8\u5207\u6362\u65f6\uff0c\u53ef\u4ee5\u4f5c\u5230\u65e0\u6270\u52a8\u5207\u6362\u3002 \u7f3a\uff1a \u2460\u9700\u8981\u5bf9\u63a7\u5236\u91cf\u8fdb\u884c\u8bb0\u5fc6\u3002 \u2461\u5b58\u5728\u7a33\u6001\u8bef\u5dee PID\u4f18\u5316\u65b9\u6cd5\uff1a \u2460\u6297\u79ef\u5206\u9971\u548c\uff1a \u5982\u679c\u7cfb\u7edf\u603b\u662f\u5b58\u5728\u7edf\u4e00\u7684\u65b9\u5411\u504f\u5dee\uff0c\u5c31\u53ef\u80fd\u65e0\u9650\u7d2f\u52a0\u800c\u8fdb\u884c\u9971\u548c\uff0c\u6781\u5927\u5f71\u54cd\u7cfb\u7edf\u6027\u80fd \u6240\u8c13\u79ef\u5206\u9971\u548c\u5c31\u662f\u6307\u7cfb\u7edf\u5b58\u5728\u4e00\u4e2a\u65b9\u5411\u7684\u504f\u5dee\uff0cPID\u63a7\u5236\u5668\u7684\u8f93\u51fa\u7531\u4e8e\u79ef\u5206\u4f5c\u7528\u7684\u4e0d\u65ad\u7d2f\u52a0\u800c\u6269\u5927\uff0c\u4ece\u800c\u5bfc\u81f4\u63a7\u5236\u5668\u8f93\u51fa\u4e0d\u65ad\u589e\u5927\u8d85\u51fa\u6b63\u5e38\u8303\u56f4\u8fdb\u5165\u9971\u548c\u533a\u3002\u5f53\u7cfb\u7edf\u51fa\u73b0\u53cd\u54cd\u7684\u504f\u5dee\u65f6\uff0c\u9700\u8981\u9996\u5148\u4ece\u9971\u548c\u533a\u9000\u51fa\uff0c\u800c\u4e0d\u80fd\u5bf9\u53cd\u5411\u7684\u504f\u5dee\u8fdb\u884c\u5feb\u901f\u7684\u54cd\u5e94\u3002 \u4e3a\u4e86\u89e3\u51b3\u79ef\u5206\u9971\u548c\u7684\u95ee\u9898\uff0c\u4eba\u4eec\u5f15\u5165\u4e86\u6297\u79ef\u5206\u9971\u548c\u7684PID\u7b97\u6cd5\u3002\u6240\u8c13\u6297\u79ef\u5206\u9971\u548c\u7b97\u6cd5\uff0c\u5176\u601d\u8def\u662f\u5728\u8ba1\u7b97U(k)\u7684\u65f6\u5019\uff0c\u5148\u5224\u65ad\u4e0a\u4e00\u65f6\u523b\u7684\u63a7\u5236\u91cfU(k-1)\u662f\u5426\u5df2\u7ecf\u8d85\u51fa\u4e86\u9650\u5236\u8303\u56f4\u3002\u82e5U(k-1)>Umax\uff0c\u5219\u53ea\u7d2f\u52a0\u8d1f\u504f\u5dee\uff1b\u82e5U(k-1)<Umin\uff0c\u5219\u53ea\u7d2f\u52a0\u6b63\u504f\u5dee\u3002\u4ece\u800c\u907f\u514d\u63a7\u5236\u91cf\u957f\u65f6\u95f4\u505c\u7559\u5728\u9971\u548c\u533a\u3002 \u51e0\u79cd\u65b9\u6cd5\u6297\u9971\u548c\u79ef\u5206\uff1a \u79ef\u5206\u5206\u79bb\u6216\u8005\u79f0\u4e3a\u53bb\u79ef\u5206\u7b97\u6cd5\uff0c\u53d8\u901f\u79ef\u5206\uff08\u79ef\u5206\u9879\u548c\u8bef\u5dee\u76f8\u6620\u5c04\uff09\uff1b \u589e\u91cf\u5f0fPID\u5206\u6b65\u79ef\u5206\u4e0e\u53d8\u901f\u79ef\u5206\u7684\u878d\u5408\u5b9e\u73b0_control_zj\u7684\u535a\u5ba2-CSDN\u535a\u5ba2 \u5728\u9971\u548c\u7684\u65f6\u5019\u5c06\u79ef\u5206\u5668\u7684\u7d2f\u8ba1\u503c\u521d\u59cb\u5316\u5230\u4e00\u4e2a\u6bd4\u8f83\u7406\u60f3\u7684\u503c\uff1b \u82e5\u79ef\u5206\u9971\u548c\u56e0\u4e3a\u76ee\u6807\u503c\u7a81\u7136\u53d8\u5316\u800c\u4ea7\u751f\uff0c\u5c06\u76ee\u6807\u503c\u4ee5\u9002\u5f53\u659c\u7387\u7684\u659c\u5761\u53d8\u5316\u53ef\u907f\u514d\u6b64\u60c5\u5f62\uff1b \u5c06\u79ef\u5206\u7d2f\u8ba1\u91cf\u9650\u5236\u4e0a\u4e0b\u9650\uff0c\u907f\u514d\u79ef\u5206\u7d2f\u8ba1\u91cf\u8d85\u8fc7\u9650\u5236\u503c\uff1b \u5982\u679c PID\u8f93\u51fa \u5df2\u7ecf\u9971\u548c\uff0c\u91cd\u65b0\u8ba1\u7b97\u79ef\u5206\u7d2f\u8ba1\u91cf\uff0c\u4f7f\u8f93\u51fa\u6070\u597d\u4e3a\u5408\u7406\u7684\u8303\u56f4\uff1b PID\u7684TRICK(\u4e00)\u7b80\u8ff0\u4e94\u79cdPID\u79ef\u5206\u6297\u9971\u548c\uff08ANTI-Windup\uff09\u65b9\u6cd5 - \u77e5\u4e4e (zhihu.com) \u7cfb\u7edf\u5bf9\u4e8e\u79ef\u5206\u9879\u7684\u8981\u6c42\u662f\uff0c\u7cfb\u7edf\u504f\u5dee\u5927\u65f6\uff0c\u79ef\u5206\u4f5c\u7528\u5e94\u8be5\u51cf\u5f31\u751a\u81f3\u662f\u5168\u65e0\uff0c\u800c\u5728\u504f\u5dee\u5c0f\u65f6\uff0c\u5219\u5e94\u8be5\u52a0\u5f3a\u3002\u79ef\u5206\u7cfb\u6570\u53d6\u5927\u4e86\u4f1a\u4ea7\u751f\u8d85\u8c03\uff0c\u751a\u81f3\u79ef\u5206\u9971\u548c\uff0c\u53d6\u5c0f\u4e86\u53c8\u4e0d\u80fd\u77ed\u65f6\u95f4\u5185\u6d88\u9664\u9759\u5dee\u3002\u56e0\u6b64\uff0c\u6839\u636e\u7cfb\u7edf\u7684\u504f\u5dee\u5927\u5c0f\u6539\u53d8\u79ef\u5206\u901f\u5ea6\u662f\u6709\u5fc5\u8981\u7684\u3002 \u53d8\u79ef\u5206PID\u7684\u57fa\u672c\u601d\u60f3\u662f\u8bbe\u6cd5\u6539\u53d8\u79ef\u5206\u9879\u7684\u7d2f\u52a0\u901f\u5ea6\uff0c\u4f7f\u5176\u4e0e\u504f\u5dee\u5927\u5c0f\u76f8\u5bf9\u5e94\uff1a\u504f\u5dee\u8d8a\u5927\uff0c\u79ef\u5206\u8d8a\u6162; \u504f\u5dee\u8d8a\u5c0f\uff0c\u79ef\u5206\u8d8a\u5feb\u3002 \u2461\u4e0d\u5b8c\u5168\u5fae\u5206\uff1a \u4e0d\u5b8c\u5168\u5fae\u5206_\u767e\u5ea6\u767e\u79d1 (baidu.com) \u4e0d\u5b8c\u5168\u7684\u5fae\u5206\u5b83\u4f7f\u5f97\u5728\u504f\u5dee\u4f5c\u9636\u8dc3\u5f0f\u53d8\u5316\u65f6\u51fa\u73b0\u7684\u8f93\u51fa\u77ac\u65f6\u8df3\u53d8\u5f97\u5230\u4e00\u5b9a\u7a0b\u5ea6\u7684\u7f13\u548c\uff0c\u56e0\u800c\u5728\u5b9e\u9645\u7684 PID\u63a7\u5236 \u7b97\u6cd5\u4e2d\u5f97\u5230\u5e7f\u6cdb\u91c7\u7528\u3002\u5728PID \u63a7\u5236\u4e2d\uff0c\u5fae\u5206\u4fe1\u53f7\u7684\u5f15\u5165\u53ef\u4ee5\u6539\u5584\u7cfb\u7edf\u7684 \u52a8\u6001\u7279\u6027 \uff0c\u4f46\u4e5f\u6613\u5f15\u5165\u9ad8\u9891\u5e72\u6270\uff0c\u5728\u8bef\u5dee\u6270\u52a8\u7a81\u53d8\u7684\u65f6\u5019\u5c24\u5176\u663e\u51fa\u5fae\u5206\u9879\u7684\u4e0d\u8db3\u3002\u8981\u60f3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u5728\u63a7\u5236\u7b97\u6cd5\u4e2d\u52a0\u5165 \u4f4e\u901a\u6ee4\u6ce2\u5668 \u6807\u51c6\u5fae\u5206\u4f1a\u4ea7\u751f\u77ed\u65f6\u95f4\u8df3\u53d8\uff0c\u5b9e\u9645\u7cfb\u7edf\u4e0d\u80fd\u5b8c\u5168\u54cd\u5e94\uff0c\u6548\u679c\u4e0d\u597d\uff0c\u4f1a\u9707\u8361\u3002 \u2462\u5fae\u5206\u5148\u884c\uff1a \u67d0\u4e9b\u7ed9\u5b9a\u503c\u9891\u7e41\u4e14\u5927\u5e45\u53d8\u5316\u7684\u573a\u5408\uff0c\u5fae\u5206\u9879\u5e38\u5e38\u4f1a\u5f15\u8d77\u7cfb\u7edf\u7684\u632f\u8361\u3002\u4e3a\u4e86\u9002\u5e94\u8fd9\u79cd\u7ed9\u5b9a\u503c\u9891\u7e41\u53d8\u5316\u7684\u573a\u5408\uff0c\u4eba\u4eec\u8bbe\u8ba1\u4e86\u5fae\u5206\u5148\u884c\u7b97\u6cd5\u3002 \u7c7b\u4f3c\u4e8e\u4e0d\u5b8c\u5168\u5fae\u5206\uff08\u4e0d\u5b8c\u5168\u5fae\u5206\u662f\u901a\u8fc7\u524a\u5f31\u53d8\u5316\u91cf\u6765\u5c3d\u53ef\u80fd\u7684\u5b9e\u73b0\u5b8c\u5168\u54cd\u5e94\uff0c\u800c\u5fae\u5206\u5148\u884cPID\u63a7\u5236\u662f\u53ea\u5bf9\u8f93\u51fa\u91cf\u8fdb\u884c\u5fae\u5206\uff0c\u800c\u5bf9\u7ed9\u5b9a\u6307\u4ee4\u4e0d\u8d77\u5fae\u5206\u4f5c\u7528\uff09\uff0c\u5fae\u5206\u90e8\u5206\u53ea\u4e0e\u6d4b\u91cf\u503c\u6709\u5173\uff0c\u800c\u4e14\u4e0e\u8fde\u7eed\u7684\u51e0\u4e2a\u6d4b\u91cf\u503c\u90fd\u6709\u5173\u3002\u800c\u4e0e\u8bbe\u5b9a\u503c\u6ca1\u6709\u5173\u7cfb\uff0c\u8bbe\u5b9a\u503c\u7684\u9636\u8dc3\u53d8\u5316\u4e0d\u4f1a\u9020\u6210\u9ad8\u9891\u7684\u5e72\u6270\u3002 \u2463\u5e26\u6b7b\u533aPID\u63a7\u5236\uff1a \u5728\u504f\u5dee\u5c0f\u5230\u4e00\u70b9\u7a0b\u5ea6\u65f6PID\u4e0d\u8d77\u4f5c\u7528 PID\u63a7\u5236\u5668\u5f00\u53d1\u7b14\u8bb0\u4e4b\u516b\uff1a\u5e26\u6b7b\u533a\u7684PID\u63a7\u5236\u5668\u7684\u5b9e\u73b0_\u6728\u5357\u521b\u667a-CSDN\u535a\u5ba2 \u5728\u8ba1\u7b97\u673a\u63a7\u5236\u7cfb\u7edf\u4e2d\uff0c\u7531\u4e8e\u7cfb\u7edf\u7279\u6027\u548c\u8ba1\u7b97\u7cbe\u5ea6\u7b49\u95ee\u9898\uff0c\u81f4\u4f7f\u7cfb\u7edf\u504f\u5dee\u603b\u662f\u5b58\u5728\uff0c\u7cfb\u7edf\u603b\u662f\u9891\u7e41\u52a8\u4f5c\u4e0d\u80fd\u7a33\u5b9a\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f15\u5165\u5e26\u6b7b\u533a\u7684PID\u7b97\u6cd5\u3002 \u5e26\u6b7b\u533a\u7684PID\u63a7\u5236\u7b97\u6cd5\u5c31\u662f\u68c0\u6d4b\u504f\u5dee\u503c\uff0c\u82e5\u662f\u504f\u5dee\u503c\u8fbe\u5230\u4e00\u5b9a\u7a0b\u5ea6\uff0c\u5c31\u8fdb\u884c\u8c03\u8282\u3002\u82e5\u662f\u504f\u5dee\u503c\u8f83\u5c0f\uff0c\u5c31\u8ba4\u4e3a\u6ca1\u6709\u504f\u5dee\u3002\u7528\u516c\u5f0f\u8868\u793a\u5982\u4e0b\uff1a \u5176\u4e2d\u7684\u6b7b\u533a\u503c\u5f97\u9009\u62e9\u9700\u8981\u6839\u636e\u5177\u4f53\u5bf9\u8c61\u8ba4\u771f\u8003\u8651\uff0c\u56e0\u4e3a\u8be5\u503c\u592a\u5c0f\u5c31\u8d77\u4e0d\u5230\u4f5c\u7528\uff0c\u8be5\u503c\u9009\u53d6\u8fc7\u5927\u5219\u53ef\u80fd\u9020\u6210\u5927\u6ede\u540e\u3002 \u5e26\u6b7b\u533a\u7684PID\u7b97\u6cd5\uff0c\u5bf9\u65e0\u8bba\u4f4d\u7f6e\u578b\u8fd8\u662f\u589e\u91cf\u578b\u7684\u8868\u8fbe\u5f0f\u6ca1\u6709\u5f71\u54cd\uff0c\u4e0d\u8fc7\u5b83\u662f\u4e00\u4e2a\u975e\u7ebf\u6027\u7cfb\u7edf\u3002 \u9664\u4ee5\u4e0a\u63cf\u8ff0\u4e4b\u5916\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5728\u96f6\u70b9\u9644\u8fd1\u65f6\uff0c\u82e5\u504f\u5dee\u5f88\u5c0f\uff0c\u8fdb\u5165\u6b7b\u53bb\u540e\uff0c\u504f\u5dee\u7f6e0\u4f1a\u9020\u6210\u79ef\u5206\u6d88\u5931\uff0c\u5982\u662f\u7cfb\u7edf\u5b58\u5728\u9759\u5dee\u5c06\u4e0d\u80fd\u6d88\u9664\uff0c\u6240\u4ee5\u9700\u8981\u4eba\u4e3a\u5904\u7406\u8fd9\u4e00\u70b9\u3002 \u5f15\u5165\u6b7b\u533a\u7684\u4e3b\u8981\u76ee\u7684\u662f\u6d88\u9664\u7a33\u5b9a\u70b9\u9644\u8fd1\u7684\u6ce2\u52a8\uff0c\u7531\u4e8e\u6d4b\u91cf\u503c\u7684\u6d4b\u91cf\u7cbe\u5ea6\u548c\u5e72\u6270\u7684\u5f71\u54cd\uff0c\u5b9e\u9645\u7cfb\u7edf\u4e2d\u6d4b\u91cf\u503c\u4e0d\u4f1a\u771f\u6b63\u7a33\u5b9a\u5728\u67d0\u4e00\u4e2a\u5177\u4f53\u7684\u503c\uff0c\u800c\u4e0e\u8bbe\u5b9a\u503c\u4e4b\u95f4\u603b\u4f1a\u5b58\u5728\u504f\u5dee\uff0c\u800c\u8fd9\u4e00\u504f\u5dee\u5e76\u4e0d\u662f\u7cfb\u7edf\u771f\u5b9e\u63a7\u5236\u8fc7\u7a0b\u7684\u53cd\u5e94\uff0c\u6240\u4ee5\u5f15\u5165\u6b7b\u533a\u5c31\u80fd\u8f83\u597d\u7684\u6d88\u9664\u8fd9\u4e00\u70b9\u3002 \u5f53\u7136\uff0c\u6b7b\u533a\u7684\u5927\u5c0f\u5bf9\u7cfb\u7edf\u7684\u5f71\u54cd\u662f\u4e0d\u540c\u7684\u3002\u592a\u5c0f\u53ef\u80fd\u8fbe\u4e0d\u5230\u9884\u671f\u7684\u6548\u679c\uff0c\u800c\u592a\u5927\u5219\u53ef\u80fd\u5bf9\u7cfb\u7edf\u7684\u6b63\u5e38\u53d8\u5316\u9020\u6210\u4e25\u91cd\u6ede\u540e\uff0c\u9700\u8981\u6839\u636e\u5177\u4f53\u7684\u7cfb\u7edf\u5bf9\u8c61\u6765\u8bbe\u5b9a\u3002 \u2464\u4e32\u7ea7PID \u7c7b\u6bd4\u4e8e\u5c0f\u8f66\u4e0a\u5761\uff0c\u56e0\u4e3a\u5355\u73afPID\u8f93\u51fa\u7684\u901f\u5ea6 V \u4e0d\u4e00\u5b9a\u662f\u771f\u5b9e\u7684\u901f\u5ea6 V\uff0c\u6240\u4ee5\u5185\u73af\u518d\u52a0\u4e0a\u901f\u5ea6\u73afPID\uff0c\u6784\u6210\u4e32\u7ea7PID\uff08\u5916\u73af\u4e3a\u4f4d\u7f6e\u73af\uff0c\u8f93\u51fa\u7684\u503c\u662f\u5c0f\u8f66\u7684\u7406\u8bba\u901f\u5ea6\uff0c\u5185\u73af\u4e3a\u901f\u5ea6\u73af\uff0c\u8f93\u5165\u662f\u5c0f\u8f66\u7684\u7406\u8bba\u901f\u5ea6\uff0c\u5e0c\u671b\u5c3d\u53ef\u80fd\u7684\u4f7f\u8f93\u51fa\u4e3a\u7406\u8bba\u901f\u5ea6\uff09\uff0c\u5916\u73af\u7684\u8f93\u51fa\u662f\u5185\u73af\u7684\u8f93\u5165 \u540c\u6837\u7c7b\u6bd4\u4e8e\u56db\u8f74\uff0c\u5916\u73af\u4e3a\u89d2\u5ea6\u73af\uff0c\u8f93\u51fa\u7684\u662f\u671f\u671b\u8fbe\u5230\u8be5\u89d2\u5ea6\u6240\u9700\u8981\u7684PWM\uff08\u4e5f\u5c31\u662f\u89d2\u901f\u5ea6\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u89d2\u901f\u5ea6\u548cPWM\u7684\u6620\u5c04\uff09\uff0c\u5185\u73af\u4e3a\u89d2\u901f\u5ea6\u73af\uff0c\u8f93\u5165\u662f\u671f\u671b\u7684\u89d2\u901f\u5ea6\u548c\u81ea\u8eab\u771f\u5b9e\u7684\u89d2\u901f\u5ea6\uff0c\u8f93\u51fa\u4e3a\u6700\u7ec8\u7684PWM\uff08\u89d2\u901f\u5ea6\uff09 \u4e32\u7ea7PID\u53ef\u589e\u52a0\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\uff0c\u6297\u5e72\u6270 \u4e3a\u4ec0\u4e48\u5916\u73af\u7684\u8f93\u5165\u662f\u5185\u73af\u7684\u671f\u671b\u5462\uff1f\u56e0\u4e3a\u4f60\u5728\u8bbe\u8ba1\u63a7\u5236\u5668\u7684\u65f6\u5019\uff0c\u5185\u73af\u7684\u76ee\u7684\u5c31\u662f\u5b9e\u73b0\u7528\u6267\u884c\u5668\u63a7\u5236\u76f4\u63a5\u80fd\u6539\u53d8\u7684\u53d8\u5316\u91cf\uff0c\u5916\u73af\u7684\u76ee\u7684\u5c31\u662f\u627e\u5230\u5408\u9002\u7684\u66f2\u7ebf\uff0c\u6765\u5f15\u5bfc\u76ee\u6807\u7684\u5fae\u5206\u53d8\u5316\uff0c\u4ece\u800c\u8fbe\u5230\u95f4\u63a5\u63a7\u5236\u7684\u6548\u679c\u3002 \u4e3a\u4ec0\u4e48\u8981\u7528\u4e32\u7ea7PID\u5462 \u770b\u4e0a\u53bbPID\u4e0d\u662f\u5df2\u7ecf\u591f\u5b8c\u7f8e\u4e86\u5417\uff1f\u53ea\u8981\u6211\u80fd\u7ed9\u51fa\u53cd\u9988\uff0c\u6211\u5c31\u80fd\u63a7\u5236\u6240\u4ee5\u7684\u7269\u7406\u91cf\u4e0d\u662f\u5417\uff1f \u4e3a\u4ec0\u4e48\u8fd8\u8981\u53cc\u95ed\u73afPID\u5462\uff1f\u90a3\u4e3a\u4ec0\u4e48\u8bf4\u5916\u73af\u8f93\u5165\u662f\u5185\u73af\u671f\u671b\u5462\uff1f\u4e3a\u4ec0\u4e48\u4f4d\u7f6e\u8bef\u5dee\u7ecf\u8fc7PID\u5c31\u53d8\u6210\u901f\u5ea6\u671f\u671b\u4e86\u5462\uff1f \u90a3\u6211\u4eec\u5c31\u6765\u8bbe\u8ba1\u4e00\u4e2a\u4f4d\u7f6e\u63a7\u5236\u5668\u5427\uff01 \u611f\u89c9\u597d\u50cf\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u8ddf\u4e4b\u524d\u6709\u4e9b\u8bb8\u4e0d\u4e00\u6837\uff0c\u4e4b\u524d\u6211\u4eec\u7684 \u300c\u6267\u884c\u5668\u80fd\u76f4\u63a5\u6539\u53d8\u53cd\u9988\u503c\u300d \uff0c\u4f46\u662f\u5728\u8fd9\u4e2a\u63a7\u5236\u5668\u91cc\uff0c\u6267\u884c\u5668\u4f9d\u7136\u53ea\u80fd\u6539\u53d8\u5347\u529b\uff0c\u53ea\u4e0d\u8fc7\uff0c\u56e0\u4e3a\u5347\u529b\u6539\u53d8\uff0c\u4f1a\u6709\u52a0\u901f\u5ea6\uff0c\u4ece\u800c\u5bfc\u81f4\u901f\u5ea6\u53d8\u5316\uff0c\u6700\u7ec8\u5bfc\u81f4\u4f4d\u7f6e\u53d8\u5316\u3002 \u5982\u679c\u4f60\u6309\u7167\u56fe\u4e2d\u7684\u601d\u8def\u8bbe\u8ba1\u63a7\u5236\u5668\uff0c\u90a3\u5c31\u8bf4\u660e \u300c\u4f60\u53ea\u5bf9\u4f4d\u7f6e\u6709\u671f\u671b\u300d \uff0c\u8fd9\u610f\u5473\u7740\u4f60\u5bf9\u5347\u529b\uff0c\u901f\u5ea6\u6ca1\u6709\u671f\u671b\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u52a0\u901f\u5ea6\uff0c\u901f\u5ea6\u662f\u4ec0\u4e48\u90fd\u65e0\u6240\u8c13\u3002 \u6240\u4ee5\u5b9e\u9645\u6548\u679c\u53d8\u6210\u4ec0\u4e48\u5462\uff1f \u300c\u4f60\u4f1a\u4ee5\u4e00\u4e2a\u4f60\u65e0\u6240\u8c13\u7684\u52a0\u901f\u5ea6\uff0c\u548c\u901f\u5ea6\uff0c\u5230\u8fbe\u4f60\u7684\u671f\u671b\u4f4d\u7f6e\u3002\u300d \u8fd9\u65f6\u5019\u5947\u602a\u7684\u4e8b\u60c5\u53d1\u751f\u4e86\uff0c\u5230\u8fbe\u4f60\u7684\u671f\u671b\u4f4d\u7f6e\u65f6\u6709\u52a0\u901f\u5ea6\u548c\u901f\u5ea6\uff0c\u90a3\u8fd9\u4e2a\u5c31\u4e0d\u662f \u300c\u5230\u8fbe\u671f\u671b\u4f4d\u7f6e\u300d \u4e86\uff0c\u8fd9\u53eb \u300c\u7ecf\u8fc7\u671f\u671b\u4f4d\u7f6e\u300d \u3002\u4f60\u4f1a\u53d1\u73b0\u4f60\u7684\u5bf9\u8c61\u5728\u671f\u671b\u4f4d\u7f6e\u9644\u8fd1\u201c\u53cd\u590d\u6a2a\u8df3\u201d\uff0c\u8d85\u8fc7\u540e\uff0c\u53c8\u9000\u56de\u53bb\uff0c\u9000\u8fc7\u4e86\uff0c\u53c8\u8d85\u8fc7\u53bb\u3002 \u8fd9\u65f6\u5019\u4f60\u624d\u60f3\u8d77\u6765\uff0c\u539f\u6765 \u300c\u4f60\u671f\u671b\u7684\u662f\u505c\u5728\u671f\u671b\u4f4d\u7f6e\u4e0a\u300d \u3002 \u300c\u4ec0\u4e48\u53eb\u505c\u5728\u671f\u671b\u4f4d\u7f6e\u4e0a\uff1f\u5c31\u662f\u5230\u8fbe\u671f\u671b\u4f4d\u7f6e\u7684\u540c\u65f6\u52a0\u901f\u5ea6\u4e0e\u901f\u5ea6\u90fd\u4e3a0\u3002\u300d \u8fd9\u4e2a\u95ee\u9898\u662f\u5982\u4f55\u4ea7\u751f\u7684\uff0c\u4e3a\u4ec0\u4e48\u4e4b\u524d\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u3002 \u4e4b\u524d\u5728\u5355\u7ea7PID\u65f6\u6211\u4eec\u4e3e\u7684\u4f8b\u5b50\u4e2d\uff0c\u671f\u671b\u88ab\u63a7\u5236\u7684\u7269\u7406\u91cf\uff0c\u90fd\u662f\u53ef\u4ee5\u76f4\u63a5\u88ab\u6267\u884c\u5668\u6539\u53d8\u7684\u3002 \u4f46\u662f\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \u300c\u671f\u671b\u88ab\u63a7\u5236\u7684\u7269\u7406\u91cf\uff0c\u4e0d\u80fd\u88ab\u6267\u884c\u5668\u76f4\u63a5\u6539\u53d8\uff0c\u4f46\u662f\u53ef\u4ee5\u88ab\u95f4\u63a5\u6539\u53d8\uff0c\u5e76\u4e14\u4f60\u77e5\u9053\u95f4\u63a5\u6539\u53d8\u7684\u8fc7\u7a0b\u3002\u300d \u4e4b\u524d\u6211\u4eec\u60f3\u63a7\u5236\u4f4d\u7f6e\uff0c\u7c7b\u4f3c\u4e8e\u63a7\u5236\u673a\u5668\u4eba\uff0c\u7ed9\u51fa\u547d\u4ee4\uff0c\u5b83\u76f4\u63a5\u8d70\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002 \u73b0\u5728\u6211\u4eec\u60f3\u63a7\u5236\u4f4d\u7f6e\uff0c\u7c7b\u4f3c\u4e8e\u63a7\u5236\u8f66\uff0c\u4f60\u53ea\u80fd\u8e29\u6cb9\u95e8\u52a0\u901f\uff0c\u6216\u8005\u5239\u8f66\u8fdb\u884c\u51cf\u901f\uff0c\u4f60\u53ea\u80fd\u901a\u8fc7\u901f\u5ea6\u63a7\u5236\u95f4\u63a5\u63a7\u5236\u4f4d\u7f6e\u3002 \u4f46\u662f\u4f60\u80af\u5b9a\u77e5\u9053\uff0c\u8f66\u6211\u4eec\u4e5f\u662f\u53ef\u4ee5\u63a7\u5236\u4f4d\u7f6e\u7684\uff0c\u8fd8\u8bb0\u5f97\u9a7e\u6821\u91cc\u7684\u5012\u8f66\u5165\u5e93\u5417\uff1f\u4e0d\u5c31\u662f\u8ba9\u4f60\u7cbe\u51c6\u7684\u63a7\u5236\u4f4d\u7f6e\u5417\uff1f \u5f00\u8f66\u7684\u65f6\u5019\u662f\u600e\u4e48\u63a7\u5236\u4f4d\u7f6e\u7684\u5462\uff1f\u4f60\u60f3\u505c\u5728\u6307\u5b9a\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u4f60\u5148\u4ee5\u4e00\u5b9a\u7684\u901f\u5ea6\u524d\u5f80\u6307\u5b9a\u4f4d\u7f6e\uff0c\u5feb\u5230\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u5239\u8f66\u4e0d\u65ad\u51cf\u901f\uff0c\u76f4\u5230\u901f\u5ea6\u4e3a0\uff0c\u505c\u5230\u671f\u671b\u7684\u4f4d\u7f6e\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u544a\u8bc9\u4e86\u6211\u4eec\u4ec0\u4e48\uff1f\u6211\u4eec\u53ea\u901a\u8fc7\u63a7\u5236\u901f\u5ea6\u5c31\u53ef\u4ee5\u95f4\u63a5\u63a7\u5236\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u8bf4 \u300c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236\u67d0\u4e2a\u7269\u7406\u91cf\u7684\u53d8\u5316\u5feb\u6162\uff0c\u4ece\u800c\u95f4\u63a5\u63a7\u5236\u8fd9\u4e2a\u7269\u7406\u91cf\u3002\u300d \u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u9009\u62e9 \u300c\u5408\u9002\u7684\u901f\u5ea6\u53d8\u5316\u66f2\u7ebf\u300d \u5c31\u53ef\u4ee5\u505c\u5728\u6211\u4eec\u60f3\u8981\u7684\u4f4d\u7f6e\u3002\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u63a7\u5236\u5668\u8bbe\u7f6e\u6210\u4e0b\u9762\u7684\u7ed3\u6784\u3002 \u4ec0\u4e48\u662f \u300c\u5408\u9002\u7684\u901f\u5ea6\u53d8\u5316\u66f2\u7ebf\u300d \u5462\uff0c \u9996\u5148\u5f53\u5230\u8fbe\u671f\u671b\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u901f\u5ea6\u5e94\u8be5\u4e3a0\u3002 \u5176\u6b21\u5f53\u6ca1\u6709\u5230\u8fbe\u671f\u671b\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u671f\u671b\u901f\u5ea6\u662f\u53ef\u4ee5\u51cf\u5c0f\u4f4d\u7f6e\u8bef\u5dee\u7684\u3002 \u603b\u7ed3\u4e00\u4e0b\uff1a \u300c\u671f\u671b\u901f\u5ea6\u5fc5\u987b\u80fd\u51cf\u5c0f\u4f4d\u7f6e\u8bef\u5dee\uff0c\u4e14\u4f4d\u7f6e\u8bef\u5dee\u4e3a0\u65f6\uff0c\u671f\u671b\u901f\u5ea6\u4e3a0\u3002\u300d \u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5982\u679c\u524d\u65b9\u4e3a\u6b63\u65b9\u5411\uff0c\u5f53\u671f\u671b\u4f4d\u7f6e\u5728\u6211\u4eec\u524d\u65b9\u65f6\uff0c\u5373target-current>0,\u90a3\u6211\u4eec\u5c31\u5e0c\u671b\u80fd\u6709\u4e2a\u5411\u524d\u7684\u6b63\u901f\u5ea6\uff0c\u53bb\u7f29\u5c0f\u8fd9\u4e2a\u8bef\u5dee\uff0c\u5f53\u8bef\u5dee\u4e3a0\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u901f\u5ea6\u4e3a0\u3002\u6ee1\u8db3\u8fd9\u6837\u7684\u8fc7\u7a0b\u7684\u901f\u5ea6\u53d8\u5316\u66f2\u7ebf\uff0c\u5c31\u662f \u300c\u5408\u9002\u7684\u901f\u5ea6\u53d8\u5316\u66f2\u7ebf\u300d \u3002 \u60f3\u60f3\u5f00\u8f66\u7684\u65f6\u5019\uff0c\u5feb\u5230\u7ec8\u70b9\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u4ec0\u4e48\u64cd\u4f5c\uff1f \u65b0\u624b\u5728\u6ca1\u8fbe\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u5e0c\u671b\u6709\u4e00\u4e2a\u6bd4\u8f83\u5feb\u7684\u901f\u5ea6\uff0c\u5feb\u5230\u4e86\u76f4\u63a5\u4e00\u811a\u5239\u8f66\u8e29\u5230\u5e95\u3002 \u9ad8\u624b\u53ef\u4ee5\u63d0\u524d\u9884\u5224\uff0c\u5300\u901f\u964d\u4f4e\u901f\u5ea6\u3002 \u66f4\u9ad8\u9636\u7684\u53ef\u4ee5\u53d8\u5316\u7684\u51cf\u901f\u8ba9\u6574\u4e2a\u901f\u5ea6\u53d8\u5316\u5982\u4e1d\u822c\u987a\u6ed1\u3002 \u5c31\u6709\u4e86\u4e0b\u9762\u7684\u66f2\u7ebf\u3002 \uff08\u7b2c\u4e00\u4e2a\u66f2\u7ebf\u662f\u5b9e\u9645\u4e2d\u662f\u505a\u4e0d\u5230\u7684\uff0c\u56e0\u4e3a\u901f\u5ea6\u51cf\u5c0f\u9700\u8981\u8fc7\u7a0b\uff0c\u4e0d\u80fd\u7a81\u53d8\uff09 \u56e0\u4e3a\u6211\u4eec\u5bf9\u671f\u671b\u901f\u5ea6\u7684\u8981\u6c42 \u300c\u671f\u671b\u901f\u5ea6\u5fc5\u987b\u80fd\u51cf\u5c0f\u4f4d\u7f6e\u8bef\u5dee\uff0c\u4e14\u4f4d\u7f6e\u8bef\u5dee\u4e3a0\u65f6\uff0c\u671f\u671b\u901f\u5ea6\u4e3a0\u3002\u300c\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\u8fd9\u4e9b\u671f\u671b\u901f\u5ea6\u90fd\u662f\u300d\u4e0e\u4f4d\u7f6e\u8bef\u5dee\u76f8\u5173\u7684\u4e14\u7ecf\u8fc70\u70b9\u7684\u66f2\u7ebf\u300d \u3002 \u4f4d\u7f6e\u8bef\u5dee\u4e0e\u671f\u671b\u901f\u5ea6\u5728\u8fd9\u65f6\u5019\u624d\u5efa\u7acb\u8d77\u7684\u5173\u7cfb\uff0c\u6ce8\u610f\uff0c\u5f3a\u8c03\u4e00\u904d\uff0c\u662f\u6211\u4eec\u4e3b\u52a8\u628a\u4f4d\u7f6e\u8bef\u5dee\u4e0e\u671f\u671b\u901f\u5ea6\u8054\u7cfb\u8d77\u6765\u7684\uff0c\u8d77\u56e0\u662f\u6211\u4eec\u5e0c\u671b\u63a7\u5236\u901f\u5ea6\u8fbe\u5230\u63a7\u5236\u4f4d\u7f6e\u7684\u6548\u679c\u3002 \u800c\u8fd9\u79cd\u63a7\u5236\u80fd\u591f\u88ab\u5b9e\u73b0\u7684\u672c\u8d28\u662f\uff0c \u300c\u901f\u5ea6\u4e0e\u4f4d\u7f6e\u5b58\u5728\u6211\u4eec\u5df2\u77e5\u7684\u7b80\u5355\u53d8\u5316\u5173\u7cfb\uff0c\u5373\u901f\u5ea6\u7684\u79ef\u5206\u662f\u4f4d\u7f6e\u300d \uff0c\u6240\u4ee5\u6539\u53d8\u671f\u671b\u901f\u5ea6\u624d\u80fd\u6539\u53d8\u4f4d\u7f6e\uff0c\u624d\u80fd\u51cf\u5c0f\u8bef\u5dee\u3002 \u6240\u4ee5\u5408\u7406\u7684\u63a7\u5236\u8fc7\u7a0b\u5e94\u8be5\u5c31\u53ef\u4ee5\u8bbe\u8ba1\u6210\u8fd9\u6837\u3002 \u53ea\u8981\u627e\u4e2a\u5408\u9002\u7684\u51fd\u6570\uff0c\u6839\u636e\u8bef\u5dee\u751f\u6210\u5408\u9002\u7684\u671f\u671b\u901f\u5ea6\u66f2\u7ebf\u5c31\u53ef\u4ee5\u4e86\u3002 \u6211\u4eec\u6700\u5e38\u4f7f\u7528\u7684\u662f\u4ec0\u4e48\u6837\u7684\u66f2\u7ebf\u5462\uff1f \u662f\u4e0d\u662f\u975e\u5e38\u719f\u6089\u3002 \u56e0\u4e3a\u8fd9\u4e24\u4e2a\u66f2\u7ebf\u6ee1\u8db3 \u300c\u5408\u9002\u7684\u671f\u671b\u901f\u5ea6\u300d \u7684\u8981\u6c42\uff0c\u540c\u65f6\u4e5f\u975e\u5e38\u7684\u7b80\u5355\u3002 \u53ea\u8981\u662f\u6ee1\u8db3 \u300c\u5408\u9002\u7684\u671f\u671b\u901f\u5ea6\u300d \u7684\u66f2\u7ebf\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u671f\u671b\u901f\u5ea6\uff0c\u663e\u7136\u5982\u679c\u5728\u5916\u73af\u4f7f\u7528PID\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u5b9e\u9645\u4e2d\u4e0d\u8fd9\u4e48\u7528\u5462\uff1f\u56e0\u4e3a\u6dfb\u52a0\u79ef\u5206(I)\u540e\uff0c\u5bfc\u81f4\u54cd\u5e94\u53d8\u6162\uff0c\u6dfb\u52a0\u5fae\u5206(D)\u5bb9\u6613\u5f15\u5165\u566a\u58f0\uff0c\u53ea\u7528P\u53c8\u7b80\u5355\u53c8\u6709\u6548\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a\u5462\uff1f \u5230\u8fd9\u91cc\u5916\u73af\u7684\u8f93\u51fa\u7ec8\u4e8e\u7406\u6240\u5e94\u5f53\u7684\u53d8\u6210\u4e86\u5185\u73af\u7684\u671f\u671b\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u662f\u56e0\u4e3a\u8fd9\u4ef6\u4e8b\u672c\u5c31\u5e94\u8be5\u6210\u7acb\uff0c\u800c\u662f\u901a\u8fc7\u4f60\u7684\u8bbe\u8ba1\uff0c\u548c\u771f\u5b9e\u5b58\u5728\u7684\u7269\u7406\u5173\u7cfb\uff0c\u624d\u8bbe\u8ba1\u51fa\u6765\u7684\u5408\u60c5\u5408\u7406\u7684\u53cc\u95ed\u73af\u63a7\u5236\u5668\u3002 \u6211\u4eec\u518d\u56de\u5fc6\u4e00\u4e0b\u8fd9\u4e2a\u63a7\u5236\u5668\u7684\u8bbe\u8ba1\u8fc7\u7a0b \u300c1.\u6267\u884c\u5668\u8f93\u51fa\u65e0\u6cd5\u76f4\u63a5\u63a7\u5236\u76ee\u6807\u7269\u7406\u91cf\u3002\u300d \u300c2.\u53d1\u73b0\u63a7\u5236\u5668\u80fd\u63a7\u5236\u7269\u7406\u91cf\u7684\u53d8\u5316\u91cf(\u5fae\u5206)\u3002\u300d \u300c3.\u4f60\u60f3\u4e86\u4e2a\u529e\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236\u7269\u7406\u91cf\u7684\u5fae\u5206\uff0c\u6309\u7167\u67d0\u79cd\u66f2\u7ebf\u53d8\u5316\uff0c\u4ece\u800c\u8fbe\u5230\u95f4\u63a5\u63a7\u5236\u76ee\u6807\u7269\u7406\u91cf\u3002\u300d \u300c4.\u8fd9\u4e2a\u66f2\u7ebf\u5fc5\u987b\u6ee1\u8db3\u4e24\u70b9\uff0c\u5b58\u5728\u76ee\u6807\u7269\u7406\u91cf\u8bef\u5dee\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u4ea7\u751f\u56e0\u4e00\u4e2a\u80fd\u51cf\u5c0f\u8fd9\u4e2a\u8bef\u5dee\u7684\u53d8\u5316\uff0c\u4e14\u5f53\u6ca1\u6709\u8bef\u5dee\u7684\u65f6\u5019\uff0c\u53d8\u5316\u91cf\u4e5f\u5e94\u8be5\u4e3a0\u3002\u300d \u300c5.\u9009\u62e9\u6700\u7b80\u5355\u5b9e\u7528\u7684\u66f2\u7ebf\u5373\u53ef\uff0c\u6240\u4ee5\u5916\u73af\u9009\u62e9KP\u3002\u300d \u300c6.\u95f4\u63a5\u63a7\u5236\u80fd\u6210\u529f\u7684\u539f\u56e0\u662f\u56e0\u4e3a\uff0c\u6267\u884c\u5668\u80fd\u6539\u53d8\u7684\u91cf\uff0c\u4e0e\u76ee\u6807\u7269\u7406\u91cf\u4e4b\u95f4\u6709\u7b80\u5355\u7684\u7269\u7406\u5173\u7cfb\u3002\u300d \u6240\u4ee5\u4e3a\u4ec0\u4e48\u5916\u73af\u7684\u8f93\u5165\u662f\u5185\u73af\u7684\u671f\u671b\u5462\uff1f\u56e0\u4e3a\u4f60\u5728\u8bbe\u8ba1\u63a7\u5236\u5668\u7684\u65f6\u5019\uff0c\u5185\u73af\u7684\u76ee\u7684\u5c31\u662f\u5b9e\u73b0\u7528\u6267\u884c\u5668\u63a7\u5236\u76f4\u63a5\u80fd\u6539\u53d8\u7684\u53d8\u5316\u91cf\uff0c\u5916\u73af\u7684\u76ee\u7684\u5c31\u662f\u627e\u5230\u5408\u9002\u7684\u66f2\u7ebf\uff0c\u6765\u5f15\u5bfc\u76ee\u6807\u7684\u5fae\u5206\u53d8\u5316\uff0c\u4ece\u800c\u8fbe\u5230\u95f4\u63a5\u63a7\u5236\u7684\u6548\u679c\u3002","title":"Hadoop"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hadoop/#pid","text":"","title":"\u5e38\u7528PID\u7b97\u6cd5\uff1a"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hadoop/#1pi","text":"\u7279\u70b9 \uff1a \u4ece\u65f6\u57df\u4e0a\u770b\uff0c\u53ea\u8981\u5b58\u5728\u504f\u5dee\uff0c\u79ef\u5206\u5c31\u4f1a\u4e0d\u505c\u5bf9\u504f\u5dee\u79ef\u7d2f\uff0c\u56e0\u6b64\u7a33\u6001\u65f6\u8bef\u5dee\u4e00\u5b9a\u4e3a\u96f6 \u4e0d\u8db3\uff1a\u6bd4\u4f8b\u4e0e\u79ef\u5206\u52a8\u4f5c\u90fd\u662f\u5bf9\u8fc7\u53bb\u63a7\u5236\u8bef\u5dee\u8fdb\u884c\u64cd\u4f5c\uff0c \u4e0d\u5bf9\u672a\u6765\u63a7\u5236\u8bef\u5dee\u8fdb\u884c\u9884\u6d4b\uff0c\u9650\u5236\u4e86\u63a7\u5236\u6027\u80fd\u3002 PI\u8c03\u8282\u5c06\u6bd4\u5217\u8c03\u8282\u7684\u5feb\u901f\u53cd\u5e94\u4e0e\u79ef\u5206\u8c03\u8282\u6d88\u9664\u9759\u5dee\u7684\u7279\u70b9\u7ed3\u5408\uff0c\u5b9e\u73b0\u597d\u7684\u8c03\u8282\u6548\u679c\u3002 PI\u8c03\u8282\u9002\u7528\u4e8e\u63a7\u5236\u901a\u9053\u6ede\u540e\u8f83\u5c0f\u3001\u8d1f\u8377\u53d8\u5316\u4e0d\u5927\u3001 \u5de5\u827a\u53c2\u6570\u4e0d\u5141\u8bb8\u6709\u9759\u5dee\u7684\u7cfb\u7edf\u3002","title":"\u2460PI\u7b97\u6cd5\uff1a"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hadoop/#2pd","text":"\u9002\u7528\u4e8e\u8235\u673a\u5feb\u901f\u54cd\u5e94 \u5bf9\u4e8e\u60ef\u6027\u8f83\u5927\u7684\u5bf9\u8c61\uff0c\u5e38\u5e38\u5e0c\u671b\u80fd\u52a0\u5feb\u63a7\u5236\u901f\u5ea6\uff0c \u6b64\u65f6\u53ef\u589e\u52a0\u5fae\u5206\u4f5c\u7528\u3002 \u7279\u70b9 \uff1a \u6bd4\u4f8b\u63a7\u5236\u5bf9\u4e8e\u60ef\u6027\u8f83\u5927\u5bf9\u8c61\uff0c\u63a7\u5236\u8fc7\u7a0b\u7f13\u6162\uff0c\u63a7\u5236\u54c1\u8d28\u4e0d\u4f73\u3002\u6bd4\u4f8b\u5fae\u5206\u63a7\u5236\u53ef\u63d0\u9ad8\u63a7\u5236\u901f\u5ea6\uff0c\u5bf9\u60ef\u6027\u8f83\u5927\u5bf9\u8c61\uff0c\u53ef\u6539\u5584\u63a7\u5236\u8d28\u91cf\uff0c\u51cf\u5c0f\u504f\u5dee\uff0c\u7f29\u77ed\u63a7\u5236\u65f6\u95f4\u3002 \u7406\u60f3\u5fae\u5206\u4f5c\u7528\u6301\u7eed\u65f6\u95f4\u592a\u77ed\uff0c \u6267\u884c\u5668\u6765\u4e0d\u53ca\u54cd\u5e94\u3002\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e00\u822c\u52a0\u4ee5\u60ef\u6027\u5ef6\u8fdf\uff0c\u79f0\u4e3a\u5b9e\u9645\u5fae\u5206\u3002 PD \u8c03\u8282\u4ee5\u6bd4\u4f8b\u8c03\u8282\u4e3a\u4e3b\uff0c\u5fae\u5206\u8c03\u8282\u4e3a\u8f85\uff0cPD\u8c03\u8282\u662f \u6709\u5dee\u8c03\u8282 \u3002 PD \u8c03\u8282\u5177\u6709\u63d0\u9ad8\u7cfb\u7edf\u7a33\u5b9a\u6027\u3001\u6291\u5236\u8fc7\u6e21\u8fc7\u7a0b\u6700\u5927\u52a8\u6001\u504f\u5dee\u7684\u4f5c\u7528\u3002 PD \u8c03\u8282\u6709\u5229\u4e8e\u63d0\u9ad8\u7cfb\u7edf\u54cd\u5e94\u901f\u5ea6\u3002 PD \u8c03\u8282\u6297\u5e72\u6270\u80fd\u529b\u5dee\uff0c\u4e00\u822c\u53ea\u80fd\u5e94\u7528\u4e8e\u88ab\u8c03\u53c2\u6570 \u53d8\u5316\u5e73\u7a33\u7684\u751f\u4ea7\u8fc7\u7a0b\u3002 \u5fae\u5206\u4f5c\u7528 \u592a\u5f3a \u65f6\uff0c\u5bb9\u6613\u9020\u6210\u7cfb\u7edf \u632f\u8361 \u3002","title":"\u2461PD\u7b97\u6cd5\uff1a"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hadoop/#3pid","text":"\u5c06\u6bd4\u4f8b\u3001\u79ef\u5206\u3001\u5fae\u5206\u4e09\u79cd\u8c03\u8282\u89c4\u5f8b\u7ed3\u5408\u5728\u4e00\u8d77\uff0c \u53ea\u8981\u4e09\u9879\u4f5c\u7528\u7684\u5f3a\u5ea6\u914d\u5408\u9002\u5f53\uff0c\u65e2\u80fd\u5feb\u901f\u8c03\u8282\uff0c\u53c8\u80fd\u6d88\u9664\u4f59\u5dee\uff0c\u53ef\u5f97\u5230\u6ee1\u610f\u7684\u63a7\u5236\u6548\u679c\u3002 \u7279\u70b9 \uff1a PID \u63a7\u5236\u4f5c\u7528\u4e2d\uff0c\u6bd4\u4f8b\u4f5c\u7528\u662f\u57fa\u7840\u63a7\u5236\uff1b\u5fae\u5206\u4f5c\u7528\u662f \u7528\u4e8e\u52a0\u5feb\u7cfb\u7edf\u63a7\u5236\u901f\u5ea6\uff1b\u79ef\u5206\u4f5c\u7528\u662f\u7528\u4e8e\u6d88\u9664\u9759\u5dee\u3002 \u53ea\u8981\u6bd4\u4f8b\u3001\u79ef\u5206\u3001\u5fae\u5206\u4e09\u79cd\u63a7\u5236\u89c4\u5f8b\u5f3a\u5ea6\u914d\u5408\u9002\u5f53\uff0c \u65e2\u80fd\u5feb\u901f\u8c03\u8282\uff0c\u53c8\u80fd\u6d88\u9664\u4f59\u5dee\uff0c\u53ef\u5f97\u5230\u6ee1\u610f\u63a7\u5236\u6548\u679c\u3002 Kp \u8f83\u5c0f\u65f6\uff0c\u7cfb\u7edf\u5bf9\u5fae\u5206\u548c\u79ef\u5206\u73af\u8282\u7684\u5f15\u5165\u8f83\u4e3a\u654f\u611f\uff0c\u79ef\u5206\u4f1a\u5f15\u8d77\u8d85\u8c03\uff0c\u5fae\u5206\u53ef\u80fd\u4f1a\u5f15\u8d77\u632f\u8361\uff0c\u800c\u632f\u8361\u5267\u70c8\u7684\u65f6\u5019\u8d85\u8c03\u4e5f\u4f1a\u589e\u52a0\u3002 Kp \u589e\u5927\u65f6\uff0c\u79ef\u5206\u73af\u8282\u7531\u4e8e\u6ede\u540e\u4ea7\u751f\u7684\u8d85\u8c03\u9010\u6e10\u51cf\u5c0f\uff0c\u6b64\u65f6\u5982\u679c\u60f3\u8981\u7ee7\u7eed\u51cf\u5c11\u8d85\u8c03\u53ef\u4ee5\u9002\u5f53\u5f15\u5165\u5fae\u5206\u73af\u8282\u3002\u7ee7\u7eed\u589e\u5927 Kp \u7cfb\u7edf\u53ef\u80fd\u4f1a\u4e0d\u592a\u7a33\u5b9a\uff0c\u56e0\u6b64\u5728\u589e\u52a0 Kp \u7684\u540c\u65f6\u5f15\u5165 Kd \u51cf\u5c0f\u8d85\u8c03\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5728 Kp \u4e0d\u662f\u5f88\u5927\u7684\u60c5\u51b5\u4e0b\u4e5f\u80fd\u53d6\u5f97\u8f83\u597d\u7684\u7a33\u6001\u7279\u6027\u548c\u52a8\u6001\u6027\u80fd\u3002 Kp \u8f83\u5c0f\u65f6\uff0c\u79ef\u5206\u73af\u8282\u4e0d\u5b9c\u8fc7\u5927\uff0cKp \u8f83\u5927\u65f6\u79ef\u5206\u73af\u8282\u4e5f\u4e0d\u5b9c\u8fc7\u5c0f\uff08\u5426\u5219\u8c03\u8282\u65f6\u95f4\u4f1a\u975e\u5e38\u5730\u957f\uff09\uff0c\u5f53\u4f7f\u7528\u5206\u6bb5PID \uff0c\u5728\u6070\u5f53\u7684\u6761\u4ef6\u4e0b\u5206\u79bb\u79ef\u5206\uff0c\u53ef\u4ee5\u53d6\u5f97\u66f4\u597d\u7684\u63a7\u5236\u6548\u679c\u3002\u539f\u56e0\u5728\u4e8e\u5728\u7a33\u6001\u8bef\u5dee\u5373\u5c06\u6ee1\u8db3\u8981\u6c42\u65f6\uff0c\u6d88\u9664\u4e86\u7cfb\u7edf\u7684\u6ede\u540e\u3002\u56e0\u6b64\u7cfb\u7edf\u8d85\u8c03\u4f1a\u660e\u663e\u51cf\u5c11\u3002","title":"\u2462PID\u7b97\u6cd5\uff1a"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hadoop/#pid_1","text":"\u4f4d\u7f6e\u578bPID\u548c\u589e\u91cf\u578bPID\u7684\u6bd4\u8f83\uff1a \u4f4d\u7f6e\u5f0f\u9700\u5f15\u5165\u521d\u59cb\u9600\u4f4d\u503c\uff0c\u589e\u91cf\u5f0f\u4e0d\u9700\u8981 \u4f4d\u7f6e\u5f0f\u9700\u9632\u79ef\u5206\u9971\u548c\uff0c\u589e\u91cf\u5f0f\u4e0d\u4f1a\u4ea7\u751f \u79ef\u5206\u9971\u548c \u53ea\u6709\u5b58\u5728\u504f\u5dee\u65f6\uff0c\u589e\u91cf\u5f0f\u624d\u4f1a\u6709\u8f93\u51fa \u589e\u91cf\u5f0f\u5bb9\u6613\u5b9e\u73b0\u4ece\u624b\u52a8\u5230\u81ea\u52a8\u7684\u5207\u6362 \u4f4d\u7f6e\u5f0fPID\u63a7\u5236\u7684\u8f93\u51fa\u4e0e\u6574\u4e2a\u8fc7\u53bb\u7684\u72b6\u6001\u6709\u5173\uff0c\u7528\u5230\u4e86\u8bef\u5dee\u7684\u7d2f\u52a0\u503c;\u800c\u589e\u91cf\u5f0fPID\u7684\u8f93\u51fa\u53ea\u4e0e\u5f53\u524d\u62cd\u548c\u524d\u4e24\u62cd\u7684\u8bef\u5dee\u6709\u5173\uff0c\u56e0\u6b64\u4f4d\u7f6e\u5f0fPID\u63a7\u5236\u7684\u7d2f\u79ef\u8bef\u5dee\u76f8\u5bf9\u66f4\u5927; \u4f18\uff1a \u2460\u7b97\u5f0f\u4e2d\u4e0d\u9700\u8981\u7d2f\u52a0\u3002\u63a7\u5236\u589e\u91cf\u0394u(k)\u7684\u786e\u5b9a\u4ec5\u4e0e\u6700\u8fd13\u6b21\u7684\u91c7\u6837\u503c\u6709\u5173\uff0c\u5bb9\u6613\u901a\u8fc7\u52a0\u6743\u5904\u7406\u83b7\u5f97\u6bd4\u8f83\u597d\u7684\u63a7\u5236\u6548\u679c\uff1b \u2461\u8ba1\u7b97\u673a\u6bcf\u6b21\u53ea\u8f93\u51fa\u63a7\u5236\u589e\u91cf\uff0c\u5373\u5bf9\u5e94\u6267\u884c\u673a\u6784\u4f4d\u7f6e\u7684\u53d8\u5316\u91cf\uff0c\u6545\u673a\u5668\u53d1\u751f\u6545\u969c\u65f6\u5f71\u54cd\u8303\u56f4\u5c0f\u3001\u4e0d\u4f1a\u4e25\u91cd\u5f71\u54cd\u751f\u4ea7\u8fc7\u7a0b\uff1b \u2462\u624b\u52a8\u2014\u81ea\u52a8\u5207\u6362\u65f6\u51b2\u51fb\u5c0f\u3002\u5f53\u63a7\u5236\u4ece\u624b\u52a8\u5411\u81ea\u52a8\u5207\u6362\u65f6\uff0c\u53ef\u4ee5\u4f5c\u5230\u65e0\u6270\u52a8\u5207\u6362\u3002 \u7f3a\uff1a \u2460\u9700\u8981\u5bf9\u63a7\u5236\u91cf\u8fdb\u884c\u8bb0\u5fc6\u3002 \u2461\u5b58\u5728\u7a33\u6001\u8bef\u5dee","title":"\u589e\u91cf\u5f0fPID\u7684\u4f18\u7f3a\u70b9\uff1a"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hadoop/#pid_2","text":"","title":"PID\u4f18\u5316\u65b9\u6cd5\uff1a"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hadoop/#1","text":"\u5982\u679c\u7cfb\u7edf\u603b\u662f\u5b58\u5728\u7edf\u4e00\u7684\u65b9\u5411\u504f\u5dee\uff0c\u5c31\u53ef\u80fd\u65e0\u9650\u7d2f\u52a0\u800c\u8fdb\u884c\u9971\u548c\uff0c\u6781\u5927\u5f71\u54cd\u7cfb\u7edf\u6027\u80fd \u6240\u8c13\u79ef\u5206\u9971\u548c\u5c31\u662f\u6307\u7cfb\u7edf\u5b58\u5728\u4e00\u4e2a\u65b9\u5411\u7684\u504f\u5dee\uff0cPID\u63a7\u5236\u5668\u7684\u8f93\u51fa\u7531\u4e8e\u79ef\u5206\u4f5c\u7528\u7684\u4e0d\u65ad\u7d2f\u52a0\u800c\u6269\u5927\uff0c\u4ece\u800c\u5bfc\u81f4\u63a7\u5236\u5668\u8f93\u51fa\u4e0d\u65ad\u589e\u5927\u8d85\u51fa\u6b63\u5e38\u8303\u56f4\u8fdb\u5165\u9971\u548c\u533a\u3002\u5f53\u7cfb\u7edf\u51fa\u73b0\u53cd\u54cd\u7684\u504f\u5dee\u65f6\uff0c\u9700\u8981\u9996\u5148\u4ece\u9971\u548c\u533a\u9000\u51fa\uff0c\u800c\u4e0d\u80fd\u5bf9\u53cd\u5411\u7684\u504f\u5dee\u8fdb\u884c\u5feb\u901f\u7684\u54cd\u5e94\u3002 \u4e3a\u4e86\u89e3\u51b3\u79ef\u5206\u9971\u548c\u7684\u95ee\u9898\uff0c\u4eba\u4eec\u5f15\u5165\u4e86\u6297\u79ef\u5206\u9971\u548c\u7684PID\u7b97\u6cd5\u3002\u6240\u8c13\u6297\u79ef\u5206\u9971\u548c\u7b97\u6cd5\uff0c\u5176\u601d\u8def\u662f\u5728\u8ba1\u7b97U(k)\u7684\u65f6\u5019\uff0c\u5148\u5224\u65ad\u4e0a\u4e00\u65f6\u523b\u7684\u63a7\u5236\u91cfU(k-1)\u662f\u5426\u5df2\u7ecf\u8d85\u51fa\u4e86\u9650\u5236\u8303\u56f4\u3002\u82e5U(k-1)>Umax\uff0c\u5219\u53ea\u7d2f\u52a0\u8d1f\u504f\u5dee\uff1b\u82e5U(k-1)<Umin\uff0c\u5219\u53ea\u7d2f\u52a0\u6b63\u504f\u5dee\u3002\u4ece\u800c\u907f\u514d\u63a7\u5236\u91cf\u957f\u65f6\u95f4\u505c\u7559\u5728\u9971\u548c\u533a\u3002 \u51e0\u79cd\u65b9\u6cd5\u6297\u9971\u548c\u79ef\u5206\uff1a \u79ef\u5206\u5206\u79bb\u6216\u8005\u79f0\u4e3a\u53bb\u79ef\u5206\u7b97\u6cd5\uff0c\u53d8\u901f\u79ef\u5206\uff08\u79ef\u5206\u9879\u548c\u8bef\u5dee\u76f8\u6620\u5c04\uff09\uff1b \u589e\u91cf\u5f0fPID\u5206\u6b65\u79ef\u5206\u4e0e\u53d8\u901f\u79ef\u5206\u7684\u878d\u5408\u5b9e\u73b0_control_zj\u7684\u535a\u5ba2-CSDN\u535a\u5ba2 \u5728\u9971\u548c\u7684\u65f6\u5019\u5c06\u79ef\u5206\u5668\u7684\u7d2f\u8ba1\u503c\u521d\u59cb\u5316\u5230\u4e00\u4e2a\u6bd4\u8f83\u7406\u60f3\u7684\u503c\uff1b \u82e5\u79ef\u5206\u9971\u548c\u56e0\u4e3a\u76ee\u6807\u503c\u7a81\u7136\u53d8\u5316\u800c\u4ea7\u751f\uff0c\u5c06\u76ee\u6807\u503c\u4ee5\u9002\u5f53\u659c\u7387\u7684\u659c\u5761\u53d8\u5316\u53ef\u907f\u514d\u6b64\u60c5\u5f62\uff1b \u5c06\u79ef\u5206\u7d2f\u8ba1\u91cf\u9650\u5236\u4e0a\u4e0b\u9650\uff0c\u907f\u514d\u79ef\u5206\u7d2f\u8ba1\u91cf\u8d85\u8fc7\u9650\u5236\u503c\uff1b \u5982\u679c PID\u8f93\u51fa \u5df2\u7ecf\u9971\u548c\uff0c\u91cd\u65b0\u8ba1\u7b97\u79ef\u5206\u7d2f\u8ba1\u91cf\uff0c\u4f7f\u8f93\u51fa\u6070\u597d\u4e3a\u5408\u7406\u7684\u8303\u56f4\uff1b PID\u7684TRICK(\u4e00)\u7b80\u8ff0\u4e94\u79cdPID\u79ef\u5206\u6297\u9971\u548c\uff08ANTI-Windup\uff09\u65b9\u6cd5 - \u77e5\u4e4e (zhihu.com) \u7cfb\u7edf\u5bf9\u4e8e\u79ef\u5206\u9879\u7684\u8981\u6c42\u662f\uff0c\u7cfb\u7edf\u504f\u5dee\u5927\u65f6\uff0c\u79ef\u5206\u4f5c\u7528\u5e94\u8be5\u51cf\u5f31\u751a\u81f3\u662f\u5168\u65e0\uff0c\u800c\u5728\u504f\u5dee\u5c0f\u65f6\uff0c\u5219\u5e94\u8be5\u52a0\u5f3a\u3002\u79ef\u5206\u7cfb\u6570\u53d6\u5927\u4e86\u4f1a\u4ea7\u751f\u8d85\u8c03\uff0c\u751a\u81f3\u79ef\u5206\u9971\u548c\uff0c\u53d6\u5c0f\u4e86\u53c8\u4e0d\u80fd\u77ed\u65f6\u95f4\u5185\u6d88\u9664\u9759\u5dee\u3002\u56e0\u6b64\uff0c\u6839\u636e\u7cfb\u7edf\u7684\u504f\u5dee\u5927\u5c0f\u6539\u53d8\u79ef\u5206\u901f\u5ea6\u662f\u6709\u5fc5\u8981\u7684\u3002 \u53d8\u79ef\u5206PID\u7684\u57fa\u672c\u601d\u60f3\u662f\u8bbe\u6cd5\u6539\u53d8\u79ef\u5206\u9879\u7684\u7d2f\u52a0\u901f\u5ea6\uff0c\u4f7f\u5176\u4e0e\u504f\u5dee\u5927\u5c0f\u76f8\u5bf9\u5e94\uff1a\u504f\u5dee\u8d8a\u5927\uff0c\u79ef\u5206\u8d8a\u6162; \u504f\u5dee\u8d8a\u5c0f\uff0c\u79ef\u5206\u8d8a\u5feb\u3002","title":"\u2460\u6297\u79ef\u5206\u9971\u548c\uff1a"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hadoop/#2","text":"\u4e0d\u5b8c\u5168\u5fae\u5206_\u767e\u5ea6\u767e\u79d1 (baidu.com) \u4e0d\u5b8c\u5168\u7684\u5fae\u5206\u5b83\u4f7f\u5f97\u5728\u504f\u5dee\u4f5c\u9636\u8dc3\u5f0f\u53d8\u5316\u65f6\u51fa\u73b0\u7684\u8f93\u51fa\u77ac\u65f6\u8df3\u53d8\u5f97\u5230\u4e00\u5b9a\u7a0b\u5ea6\u7684\u7f13\u548c\uff0c\u56e0\u800c\u5728\u5b9e\u9645\u7684 PID\u63a7\u5236 \u7b97\u6cd5\u4e2d\u5f97\u5230\u5e7f\u6cdb\u91c7\u7528\u3002\u5728PID \u63a7\u5236\u4e2d\uff0c\u5fae\u5206\u4fe1\u53f7\u7684\u5f15\u5165\u53ef\u4ee5\u6539\u5584\u7cfb\u7edf\u7684 \u52a8\u6001\u7279\u6027 \uff0c\u4f46\u4e5f\u6613\u5f15\u5165\u9ad8\u9891\u5e72\u6270\uff0c\u5728\u8bef\u5dee\u6270\u52a8\u7a81\u53d8\u7684\u65f6\u5019\u5c24\u5176\u663e\u51fa\u5fae\u5206\u9879\u7684\u4e0d\u8db3\u3002\u8981\u60f3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u5728\u63a7\u5236\u7b97\u6cd5\u4e2d\u52a0\u5165 \u4f4e\u901a\u6ee4\u6ce2\u5668 \u6807\u51c6\u5fae\u5206\u4f1a\u4ea7\u751f\u77ed\u65f6\u95f4\u8df3\u53d8\uff0c\u5b9e\u9645\u7cfb\u7edf\u4e0d\u80fd\u5b8c\u5168\u54cd\u5e94\uff0c\u6548\u679c\u4e0d\u597d\uff0c\u4f1a\u9707\u8361\u3002","title":"\u2461\u4e0d\u5b8c\u5168\u5fae\u5206\uff1a"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hadoop/#3","text":"\u67d0\u4e9b\u7ed9\u5b9a\u503c\u9891\u7e41\u4e14\u5927\u5e45\u53d8\u5316\u7684\u573a\u5408\uff0c\u5fae\u5206\u9879\u5e38\u5e38\u4f1a\u5f15\u8d77\u7cfb\u7edf\u7684\u632f\u8361\u3002\u4e3a\u4e86\u9002\u5e94\u8fd9\u79cd\u7ed9\u5b9a\u503c\u9891\u7e41\u53d8\u5316\u7684\u573a\u5408\uff0c\u4eba\u4eec\u8bbe\u8ba1\u4e86\u5fae\u5206\u5148\u884c\u7b97\u6cd5\u3002 \u7c7b\u4f3c\u4e8e\u4e0d\u5b8c\u5168\u5fae\u5206\uff08\u4e0d\u5b8c\u5168\u5fae\u5206\u662f\u901a\u8fc7\u524a\u5f31\u53d8\u5316\u91cf\u6765\u5c3d\u53ef\u80fd\u7684\u5b9e\u73b0\u5b8c\u5168\u54cd\u5e94\uff0c\u800c\u5fae\u5206\u5148\u884cPID\u63a7\u5236\u662f\u53ea\u5bf9\u8f93\u51fa\u91cf\u8fdb\u884c\u5fae\u5206\uff0c\u800c\u5bf9\u7ed9\u5b9a\u6307\u4ee4\u4e0d\u8d77\u5fae\u5206\u4f5c\u7528\uff09\uff0c\u5fae\u5206\u90e8\u5206\u53ea\u4e0e\u6d4b\u91cf\u503c\u6709\u5173\uff0c\u800c\u4e14\u4e0e\u8fde\u7eed\u7684\u51e0\u4e2a\u6d4b\u91cf\u503c\u90fd\u6709\u5173\u3002\u800c\u4e0e\u8bbe\u5b9a\u503c\u6ca1\u6709\u5173\u7cfb\uff0c\u8bbe\u5b9a\u503c\u7684\u9636\u8dc3\u53d8\u5316\u4e0d\u4f1a\u9020\u6210\u9ad8\u9891\u7684\u5e72\u6270\u3002","title":"\u2462\u5fae\u5206\u5148\u884c\uff1a"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hadoop/#4pid","text":"\u5728\u504f\u5dee\u5c0f\u5230\u4e00\u70b9\u7a0b\u5ea6\u65f6PID\u4e0d\u8d77\u4f5c\u7528 PID\u63a7\u5236\u5668\u5f00\u53d1\u7b14\u8bb0\u4e4b\u516b\uff1a\u5e26\u6b7b\u533a\u7684PID\u63a7\u5236\u5668\u7684\u5b9e\u73b0_\u6728\u5357\u521b\u667a-CSDN\u535a\u5ba2 \u5728\u8ba1\u7b97\u673a\u63a7\u5236\u7cfb\u7edf\u4e2d\uff0c\u7531\u4e8e\u7cfb\u7edf\u7279\u6027\u548c\u8ba1\u7b97\u7cbe\u5ea6\u7b49\u95ee\u9898\uff0c\u81f4\u4f7f\u7cfb\u7edf\u504f\u5dee\u603b\u662f\u5b58\u5728\uff0c\u7cfb\u7edf\u603b\u662f\u9891\u7e41\u52a8\u4f5c\u4e0d\u80fd\u7a33\u5b9a\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f15\u5165\u5e26\u6b7b\u533a\u7684PID\u7b97\u6cd5\u3002 \u5e26\u6b7b\u533a\u7684PID\u63a7\u5236\u7b97\u6cd5\u5c31\u662f\u68c0\u6d4b\u504f\u5dee\u503c\uff0c\u82e5\u662f\u504f\u5dee\u503c\u8fbe\u5230\u4e00\u5b9a\u7a0b\u5ea6\uff0c\u5c31\u8fdb\u884c\u8c03\u8282\u3002\u82e5\u662f\u504f\u5dee\u503c\u8f83\u5c0f\uff0c\u5c31\u8ba4\u4e3a\u6ca1\u6709\u504f\u5dee\u3002\u7528\u516c\u5f0f\u8868\u793a\u5982\u4e0b\uff1a \u5176\u4e2d\u7684\u6b7b\u533a\u503c\u5f97\u9009\u62e9\u9700\u8981\u6839\u636e\u5177\u4f53\u5bf9\u8c61\u8ba4\u771f\u8003\u8651\uff0c\u56e0\u4e3a\u8be5\u503c\u592a\u5c0f\u5c31\u8d77\u4e0d\u5230\u4f5c\u7528\uff0c\u8be5\u503c\u9009\u53d6\u8fc7\u5927\u5219\u53ef\u80fd\u9020\u6210\u5927\u6ede\u540e\u3002 \u5e26\u6b7b\u533a\u7684PID\u7b97\u6cd5\uff0c\u5bf9\u65e0\u8bba\u4f4d\u7f6e\u578b\u8fd8\u662f\u589e\u91cf\u578b\u7684\u8868\u8fbe\u5f0f\u6ca1\u6709\u5f71\u54cd\uff0c\u4e0d\u8fc7\u5b83\u662f\u4e00\u4e2a\u975e\u7ebf\u6027\u7cfb\u7edf\u3002 \u9664\u4ee5\u4e0a\u63cf\u8ff0\u4e4b\u5916\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5728\u96f6\u70b9\u9644\u8fd1\u65f6\uff0c\u82e5\u504f\u5dee\u5f88\u5c0f\uff0c\u8fdb\u5165\u6b7b\u53bb\u540e\uff0c\u504f\u5dee\u7f6e0\u4f1a\u9020\u6210\u79ef\u5206\u6d88\u5931\uff0c\u5982\u662f\u7cfb\u7edf\u5b58\u5728\u9759\u5dee\u5c06\u4e0d\u80fd\u6d88\u9664\uff0c\u6240\u4ee5\u9700\u8981\u4eba\u4e3a\u5904\u7406\u8fd9\u4e00\u70b9\u3002 \u5f15\u5165\u6b7b\u533a\u7684\u4e3b\u8981\u76ee\u7684\u662f\u6d88\u9664\u7a33\u5b9a\u70b9\u9644\u8fd1\u7684\u6ce2\u52a8\uff0c\u7531\u4e8e\u6d4b\u91cf\u503c\u7684\u6d4b\u91cf\u7cbe\u5ea6\u548c\u5e72\u6270\u7684\u5f71\u54cd\uff0c\u5b9e\u9645\u7cfb\u7edf\u4e2d\u6d4b\u91cf\u503c\u4e0d\u4f1a\u771f\u6b63\u7a33\u5b9a\u5728\u67d0\u4e00\u4e2a\u5177\u4f53\u7684\u503c\uff0c\u800c\u4e0e\u8bbe\u5b9a\u503c\u4e4b\u95f4\u603b\u4f1a\u5b58\u5728\u504f\u5dee\uff0c\u800c\u8fd9\u4e00\u504f\u5dee\u5e76\u4e0d\u662f\u7cfb\u7edf\u771f\u5b9e\u63a7\u5236\u8fc7\u7a0b\u7684\u53cd\u5e94\uff0c\u6240\u4ee5\u5f15\u5165\u6b7b\u533a\u5c31\u80fd\u8f83\u597d\u7684\u6d88\u9664\u8fd9\u4e00\u70b9\u3002 \u5f53\u7136\uff0c\u6b7b\u533a\u7684\u5927\u5c0f\u5bf9\u7cfb\u7edf\u7684\u5f71\u54cd\u662f\u4e0d\u540c\u7684\u3002\u592a\u5c0f\u53ef\u80fd\u8fbe\u4e0d\u5230\u9884\u671f\u7684\u6548\u679c\uff0c\u800c\u592a\u5927\u5219\u53ef\u80fd\u5bf9\u7cfb\u7edf\u7684\u6b63\u5e38\u53d8\u5316\u9020\u6210\u4e25\u91cd\u6ede\u540e\uff0c\u9700\u8981\u6839\u636e\u5177\u4f53\u7684\u7cfb\u7edf\u5bf9\u8c61\u6765\u8bbe\u5b9a\u3002","title":"\u2463\u5e26\u6b7b\u533aPID\u63a7\u5236\uff1a"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hadoop/#5pid","text":"\u7c7b\u6bd4\u4e8e\u5c0f\u8f66\u4e0a\u5761\uff0c\u56e0\u4e3a\u5355\u73afPID\u8f93\u51fa\u7684\u901f\u5ea6 V \u4e0d\u4e00\u5b9a\u662f\u771f\u5b9e\u7684\u901f\u5ea6 V\uff0c\u6240\u4ee5\u5185\u73af\u518d\u52a0\u4e0a\u901f\u5ea6\u73afPID\uff0c\u6784\u6210\u4e32\u7ea7PID\uff08\u5916\u73af\u4e3a\u4f4d\u7f6e\u73af\uff0c\u8f93\u51fa\u7684\u503c\u662f\u5c0f\u8f66\u7684\u7406\u8bba\u901f\u5ea6\uff0c\u5185\u73af\u4e3a\u901f\u5ea6\u73af\uff0c\u8f93\u5165\u662f\u5c0f\u8f66\u7684\u7406\u8bba\u901f\u5ea6\uff0c\u5e0c\u671b\u5c3d\u53ef\u80fd\u7684\u4f7f\u8f93\u51fa\u4e3a\u7406\u8bba\u901f\u5ea6\uff09\uff0c\u5916\u73af\u7684\u8f93\u51fa\u662f\u5185\u73af\u7684\u8f93\u5165 \u540c\u6837\u7c7b\u6bd4\u4e8e\u56db\u8f74\uff0c\u5916\u73af\u4e3a\u89d2\u5ea6\u73af\uff0c\u8f93\u51fa\u7684\u662f\u671f\u671b\u8fbe\u5230\u8be5\u89d2\u5ea6\u6240\u9700\u8981\u7684PWM\uff08\u4e5f\u5c31\u662f\u89d2\u901f\u5ea6\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u89d2\u901f\u5ea6\u548cPWM\u7684\u6620\u5c04\uff09\uff0c\u5185\u73af\u4e3a\u89d2\u901f\u5ea6\u73af\uff0c\u8f93\u5165\u662f\u671f\u671b\u7684\u89d2\u901f\u5ea6\u548c\u81ea\u8eab\u771f\u5b9e\u7684\u89d2\u901f\u5ea6\uff0c\u8f93\u51fa\u4e3a\u6700\u7ec8\u7684PWM\uff08\u89d2\u901f\u5ea6\uff09 \u4e32\u7ea7PID\u53ef\u589e\u52a0\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\uff0c\u6297\u5e72\u6270 \u4e3a\u4ec0\u4e48\u5916\u73af\u7684\u8f93\u5165\u662f\u5185\u73af\u7684\u671f\u671b\u5462\uff1f\u56e0\u4e3a\u4f60\u5728\u8bbe\u8ba1\u63a7\u5236\u5668\u7684\u65f6\u5019\uff0c\u5185\u73af\u7684\u76ee\u7684\u5c31\u662f\u5b9e\u73b0\u7528\u6267\u884c\u5668\u63a7\u5236\u76f4\u63a5\u80fd\u6539\u53d8\u7684\u53d8\u5316\u91cf\uff0c\u5916\u73af\u7684\u76ee\u7684\u5c31\u662f\u627e\u5230\u5408\u9002\u7684\u66f2\u7ebf\uff0c\u6765\u5f15\u5bfc\u76ee\u6807\u7684\u5fae\u5206\u53d8\u5316\uff0c\u4ece\u800c\u8fbe\u5230\u95f4\u63a5\u63a7\u5236\u7684\u6548\u679c\u3002","title":"\u2464\u4e32\u7ea7PID"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hadoop/#pid_3","text":"\u770b\u4e0a\u53bbPID\u4e0d\u662f\u5df2\u7ecf\u591f\u5b8c\u7f8e\u4e86\u5417\uff1f\u53ea\u8981\u6211\u80fd\u7ed9\u51fa\u53cd\u9988\uff0c\u6211\u5c31\u80fd\u63a7\u5236\u6240\u4ee5\u7684\u7269\u7406\u91cf\u4e0d\u662f\u5417\uff1f \u4e3a\u4ec0\u4e48\u8fd8\u8981\u53cc\u95ed\u73afPID\u5462\uff1f\u90a3\u4e3a\u4ec0\u4e48\u8bf4\u5916\u73af\u8f93\u5165\u662f\u5185\u73af\u671f\u671b\u5462\uff1f\u4e3a\u4ec0\u4e48\u4f4d\u7f6e\u8bef\u5dee\u7ecf\u8fc7PID\u5c31\u53d8\u6210\u901f\u5ea6\u671f\u671b\u4e86\u5462\uff1f \u90a3\u6211\u4eec\u5c31\u6765\u8bbe\u8ba1\u4e00\u4e2a\u4f4d\u7f6e\u63a7\u5236\u5668\u5427\uff01 \u611f\u89c9\u597d\u50cf\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u8ddf\u4e4b\u524d\u6709\u4e9b\u8bb8\u4e0d\u4e00\u6837\uff0c\u4e4b\u524d\u6211\u4eec\u7684 \u300c\u6267\u884c\u5668\u80fd\u76f4\u63a5\u6539\u53d8\u53cd\u9988\u503c\u300d \uff0c\u4f46\u662f\u5728\u8fd9\u4e2a\u63a7\u5236\u5668\u91cc\uff0c\u6267\u884c\u5668\u4f9d\u7136\u53ea\u80fd\u6539\u53d8\u5347\u529b\uff0c\u53ea\u4e0d\u8fc7\uff0c\u56e0\u4e3a\u5347\u529b\u6539\u53d8\uff0c\u4f1a\u6709\u52a0\u901f\u5ea6\uff0c\u4ece\u800c\u5bfc\u81f4\u901f\u5ea6\u53d8\u5316\uff0c\u6700\u7ec8\u5bfc\u81f4\u4f4d\u7f6e\u53d8\u5316\u3002 \u5982\u679c\u4f60\u6309\u7167\u56fe\u4e2d\u7684\u601d\u8def\u8bbe\u8ba1\u63a7\u5236\u5668\uff0c\u90a3\u5c31\u8bf4\u660e \u300c\u4f60\u53ea\u5bf9\u4f4d\u7f6e\u6709\u671f\u671b\u300d \uff0c\u8fd9\u610f\u5473\u7740\u4f60\u5bf9\u5347\u529b\uff0c\u901f\u5ea6\u6ca1\u6709\u671f\u671b\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u52a0\u901f\u5ea6\uff0c\u901f\u5ea6\u662f\u4ec0\u4e48\u90fd\u65e0\u6240\u8c13\u3002 \u6240\u4ee5\u5b9e\u9645\u6548\u679c\u53d8\u6210\u4ec0\u4e48\u5462\uff1f \u300c\u4f60\u4f1a\u4ee5\u4e00\u4e2a\u4f60\u65e0\u6240\u8c13\u7684\u52a0\u901f\u5ea6\uff0c\u548c\u901f\u5ea6\uff0c\u5230\u8fbe\u4f60\u7684\u671f\u671b\u4f4d\u7f6e\u3002\u300d \u8fd9\u65f6\u5019\u5947\u602a\u7684\u4e8b\u60c5\u53d1\u751f\u4e86\uff0c\u5230\u8fbe\u4f60\u7684\u671f\u671b\u4f4d\u7f6e\u65f6\u6709\u52a0\u901f\u5ea6\u548c\u901f\u5ea6\uff0c\u90a3\u8fd9\u4e2a\u5c31\u4e0d\u662f \u300c\u5230\u8fbe\u671f\u671b\u4f4d\u7f6e\u300d \u4e86\uff0c\u8fd9\u53eb \u300c\u7ecf\u8fc7\u671f\u671b\u4f4d\u7f6e\u300d \u3002\u4f60\u4f1a\u53d1\u73b0\u4f60\u7684\u5bf9\u8c61\u5728\u671f\u671b\u4f4d\u7f6e\u9644\u8fd1\u201c\u53cd\u590d\u6a2a\u8df3\u201d\uff0c\u8d85\u8fc7\u540e\uff0c\u53c8\u9000\u56de\u53bb\uff0c\u9000\u8fc7\u4e86\uff0c\u53c8\u8d85\u8fc7\u53bb\u3002 \u8fd9\u65f6\u5019\u4f60\u624d\u60f3\u8d77\u6765\uff0c\u539f\u6765 \u300c\u4f60\u671f\u671b\u7684\u662f\u505c\u5728\u671f\u671b\u4f4d\u7f6e\u4e0a\u300d \u3002 \u300c\u4ec0\u4e48\u53eb\u505c\u5728\u671f\u671b\u4f4d\u7f6e\u4e0a\uff1f\u5c31\u662f\u5230\u8fbe\u671f\u671b\u4f4d\u7f6e\u7684\u540c\u65f6\u52a0\u901f\u5ea6\u4e0e\u901f\u5ea6\u90fd\u4e3a0\u3002\u300d \u8fd9\u4e2a\u95ee\u9898\u662f\u5982\u4f55\u4ea7\u751f\u7684\uff0c\u4e3a\u4ec0\u4e48\u4e4b\u524d\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u3002 \u4e4b\u524d\u5728\u5355\u7ea7PID\u65f6\u6211\u4eec\u4e3e\u7684\u4f8b\u5b50\u4e2d\uff0c\u671f\u671b\u88ab\u63a7\u5236\u7684\u7269\u7406\u91cf\uff0c\u90fd\u662f\u53ef\u4ee5\u76f4\u63a5\u88ab\u6267\u884c\u5668\u6539\u53d8\u7684\u3002 \u4f46\u662f\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c \u300c\u671f\u671b\u88ab\u63a7\u5236\u7684\u7269\u7406\u91cf\uff0c\u4e0d\u80fd\u88ab\u6267\u884c\u5668\u76f4\u63a5\u6539\u53d8\uff0c\u4f46\u662f\u53ef\u4ee5\u88ab\u95f4\u63a5\u6539\u53d8\uff0c\u5e76\u4e14\u4f60\u77e5\u9053\u95f4\u63a5\u6539\u53d8\u7684\u8fc7\u7a0b\u3002\u300d \u4e4b\u524d\u6211\u4eec\u60f3\u63a7\u5236\u4f4d\u7f6e\uff0c\u7c7b\u4f3c\u4e8e\u63a7\u5236\u673a\u5668\u4eba\uff0c\u7ed9\u51fa\u547d\u4ee4\uff0c\u5b83\u76f4\u63a5\u8d70\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002 \u73b0\u5728\u6211\u4eec\u60f3\u63a7\u5236\u4f4d\u7f6e\uff0c\u7c7b\u4f3c\u4e8e\u63a7\u5236\u8f66\uff0c\u4f60\u53ea\u80fd\u8e29\u6cb9\u95e8\u52a0\u901f\uff0c\u6216\u8005\u5239\u8f66\u8fdb\u884c\u51cf\u901f\uff0c\u4f60\u53ea\u80fd\u901a\u8fc7\u901f\u5ea6\u63a7\u5236\u95f4\u63a5\u63a7\u5236\u4f4d\u7f6e\u3002 \u4f46\u662f\u4f60\u80af\u5b9a\u77e5\u9053\uff0c\u8f66\u6211\u4eec\u4e5f\u662f\u53ef\u4ee5\u63a7\u5236\u4f4d\u7f6e\u7684\uff0c\u8fd8\u8bb0\u5f97\u9a7e\u6821\u91cc\u7684\u5012\u8f66\u5165\u5e93\u5417\uff1f\u4e0d\u5c31\u662f\u8ba9\u4f60\u7cbe\u51c6\u7684\u63a7\u5236\u4f4d\u7f6e\u5417\uff1f \u5f00\u8f66\u7684\u65f6\u5019\u662f\u600e\u4e48\u63a7\u5236\u4f4d\u7f6e\u7684\u5462\uff1f\u4f60\u60f3\u505c\u5728\u6307\u5b9a\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u4f60\u5148\u4ee5\u4e00\u5b9a\u7684\u901f\u5ea6\u524d\u5f80\u6307\u5b9a\u4f4d\u7f6e\uff0c\u5feb\u5230\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u5239\u8f66\u4e0d\u65ad\u51cf\u901f\uff0c\u76f4\u5230\u901f\u5ea6\u4e3a0\uff0c\u505c\u5230\u671f\u671b\u7684\u4f4d\u7f6e\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u544a\u8bc9\u4e86\u6211\u4eec\u4ec0\u4e48\uff1f\u6211\u4eec\u53ea\u901a\u8fc7\u63a7\u5236\u901f\u5ea6\u5c31\u53ef\u4ee5\u95f4\u63a5\u63a7\u5236\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u8bf4 \u300c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236\u67d0\u4e2a\u7269\u7406\u91cf\u7684\u53d8\u5316\u5feb\u6162\uff0c\u4ece\u800c\u95f4\u63a5\u63a7\u5236\u8fd9\u4e2a\u7269\u7406\u91cf\u3002\u300d \u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u9009\u62e9 \u300c\u5408\u9002\u7684\u901f\u5ea6\u53d8\u5316\u66f2\u7ebf\u300d \u5c31\u53ef\u4ee5\u505c\u5728\u6211\u4eec\u60f3\u8981\u7684\u4f4d\u7f6e\u3002\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u63a7\u5236\u5668\u8bbe\u7f6e\u6210\u4e0b\u9762\u7684\u7ed3\u6784\u3002 \u4ec0\u4e48\u662f \u300c\u5408\u9002\u7684\u901f\u5ea6\u53d8\u5316\u66f2\u7ebf\u300d \u5462\uff0c \u9996\u5148\u5f53\u5230\u8fbe\u671f\u671b\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u901f\u5ea6\u5e94\u8be5\u4e3a0\u3002 \u5176\u6b21\u5f53\u6ca1\u6709\u5230\u8fbe\u671f\u671b\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u671f\u671b\u901f\u5ea6\u662f\u53ef\u4ee5\u51cf\u5c0f\u4f4d\u7f6e\u8bef\u5dee\u7684\u3002 \u603b\u7ed3\u4e00\u4e0b\uff1a \u300c\u671f\u671b\u901f\u5ea6\u5fc5\u987b\u80fd\u51cf\u5c0f\u4f4d\u7f6e\u8bef\u5dee\uff0c\u4e14\u4f4d\u7f6e\u8bef\u5dee\u4e3a0\u65f6\uff0c\u671f\u671b\u901f\u5ea6\u4e3a0\u3002\u300d \u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5982\u679c\u524d\u65b9\u4e3a\u6b63\u65b9\u5411\uff0c\u5f53\u671f\u671b\u4f4d\u7f6e\u5728\u6211\u4eec\u524d\u65b9\u65f6\uff0c\u5373target-current>0,\u90a3\u6211\u4eec\u5c31\u5e0c\u671b\u80fd\u6709\u4e2a\u5411\u524d\u7684\u6b63\u901f\u5ea6\uff0c\u53bb\u7f29\u5c0f\u8fd9\u4e2a\u8bef\u5dee\uff0c\u5f53\u8bef\u5dee\u4e3a0\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u901f\u5ea6\u4e3a0\u3002\u6ee1\u8db3\u8fd9\u6837\u7684\u8fc7\u7a0b\u7684\u901f\u5ea6\u53d8\u5316\u66f2\u7ebf\uff0c\u5c31\u662f \u300c\u5408\u9002\u7684\u901f\u5ea6\u53d8\u5316\u66f2\u7ebf\u300d \u3002 \u60f3\u60f3\u5f00\u8f66\u7684\u65f6\u5019\uff0c\u5feb\u5230\u7ec8\u70b9\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u4ec0\u4e48\u64cd\u4f5c\uff1f \u65b0\u624b\u5728\u6ca1\u8fbe\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u5e0c\u671b\u6709\u4e00\u4e2a\u6bd4\u8f83\u5feb\u7684\u901f\u5ea6\uff0c\u5feb\u5230\u4e86\u76f4\u63a5\u4e00\u811a\u5239\u8f66\u8e29\u5230\u5e95\u3002 \u9ad8\u624b\u53ef\u4ee5\u63d0\u524d\u9884\u5224\uff0c\u5300\u901f\u964d\u4f4e\u901f\u5ea6\u3002 \u66f4\u9ad8\u9636\u7684\u53ef\u4ee5\u53d8\u5316\u7684\u51cf\u901f\u8ba9\u6574\u4e2a\u901f\u5ea6\u53d8\u5316\u5982\u4e1d\u822c\u987a\u6ed1\u3002 \u5c31\u6709\u4e86\u4e0b\u9762\u7684\u66f2\u7ebf\u3002 \uff08\u7b2c\u4e00\u4e2a\u66f2\u7ebf\u662f\u5b9e\u9645\u4e2d\u662f\u505a\u4e0d\u5230\u7684\uff0c\u56e0\u4e3a\u901f\u5ea6\u51cf\u5c0f\u9700\u8981\u8fc7\u7a0b\uff0c\u4e0d\u80fd\u7a81\u53d8\uff09 \u56e0\u4e3a\u6211\u4eec\u5bf9\u671f\u671b\u901f\u5ea6\u7684\u8981\u6c42 \u300c\u671f\u671b\u901f\u5ea6\u5fc5\u987b\u80fd\u51cf\u5c0f\u4f4d\u7f6e\u8bef\u5dee\uff0c\u4e14\u4f4d\u7f6e\u8bef\u5dee\u4e3a0\u65f6\uff0c\u671f\u671b\u901f\u5ea6\u4e3a0\u3002\u300c\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\u8fd9\u4e9b\u671f\u671b\u901f\u5ea6\u90fd\u662f\u300d\u4e0e\u4f4d\u7f6e\u8bef\u5dee\u76f8\u5173\u7684\u4e14\u7ecf\u8fc70\u70b9\u7684\u66f2\u7ebf\u300d \u3002 \u4f4d\u7f6e\u8bef\u5dee\u4e0e\u671f\u671b\u901f\u5ea6\u5728\u8fd9\u65f6\u5019\u624d\u5efa\u7acb\u8d77\u7684\u5173\u7cfb\uff0c\u6ce8\u610f\uff0c\u5f3a\u8c03\u4e00\u904d\uff0c\u662f\u6211\u4eec\u4e3b\u52a8\u628a\u4f4d\u7f6e\u8bef\u5dee\u4e0e\u671f\u671b\u901f\u5ea6\u8054\u7cfb\u8d77\u6765\u7684\uff0c\u8d77\u56e0\u662f\u6211\u4eec\u5e0c\u671b\u63a7\u5236\u901f\u5ea6\u8fbe\u5230\u63a7\u5236\u4f4d\u7f6e\u7684\u6548\u679c\u3002 \u800c\u8fd9\u79cd\u63a7\u5236\u80fd\u591f\u88ab\u5b9e\u73b0\u7684\u672c\u8d28\u662f\uff0c \u300c\u901f\u5ea6\u4e0e\u4f4d\u7f6e\u5b58\u5728\u6211\u4eec\u5df2\u77e5\u7684\u7b80\u5355\u53d8\u5316\u5173\u7cfb\uff0c\u5373\u901f\u5ea6\u7684\u79ef\u5206\u662f\u4f4d\u7f6e\u300d \uff0c\u6240\u4ee5\u6539\u53d8\u671f\u671b\u901f\u5ea6\u624d\u80fd\u6539\u53d8\u4f4d\u7f6e\uff0c\u624d\u80fd\u51cf\u5c0f\u8bef\u5dee\u3002 \u6240\u4ee5\u5408\u7406\u7684\u63a7\u5236\u8fc7\u7a0b\u5e94\u8be5\u5c31\u53ef\u4ee5\u8bbe\u8ba1\u6210\u8fd9\u6837\u3002 \u53ea\u8981\u627e\u4e2a\u5408\u9002\u7684\u51fd\u6570\uff0c\u6839\u636e\u8bef\u5dee\u751f\u6210\u5408\u9002\u7684\u671f\u671b\u901f\u5ea6\u66f2\u7ebf\u5c31\u53ef\u4ee5\u4e86\u3002 \u6211\u4eec\u6700\u5e38\u4f7f\u7528\u7684\u662f\u4ec0\u4e48\u6837\u7684\u66f2\u7ebf\u5462\uff1f \u662f\u4e0d\u662f\u975e\u5e38\u719f\u6089\u3002 \u56e0\u4e3a\u8fd9\u4e24\u4e2a\u66f2\u7ebf\u6ee1\u8db3 \u300c\u5408\u9002\u7684\u671f\u671b\u901f\u5ea6\u300d \u7684\u8981\u6c42\uff0c\u540c\u65f6\u4e5f\u975e\u5e38\u7684\u7b80\u5355\u3002 \u53ea\u8981\u662f\u6ee1\u8db3 \u300c\u5408\u9002\u7684\u671f\u671b\u901f\u5ea6\u300d \u7684\u66f2\u7ebf\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u671f\u671b\u901f\u5ea6\uff0c\u663e\u7136\u5982\u679c\u5728\u5916\u73af\u4f7f\u7528PID\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u5b9e\u9645\u4e2d\u4e0d\u8fd9\u4e48\u7528\u5462\uff1f\u56e0\u4e3a\u6dfb\u52a0\u79ef\u5206(I)\u540e\uff0c\u5bfc\u81f4\u54cd\u5e94\u53d8\u6162\uff0c\u6dfb\u52a0\u5fae\u5206(D)\u5bb9\u6613\u5f15\u5165\u566a\u58f0\uff0c\u53ea\u7528P\u53c8\u7b80\u5355\u53c8\u6709\u6548\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a\u5462\uff1f \u5230\u8fd9\u91cc\u5916\u73af\u7684\u8f93\u51fa\u7ec8\u4e8e\u7406\u6240\u5e94\u5f53\u7684\u53d8\u6210\u4e86\u5185\u73af\u7684\u671f\u671b\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u662f\u56e0\u4e3a\u8fd9\u4ef6\u4e8b\u672c\u5c31\u5e94\u8be5\u6210\u7acb\uff0c\u800c\u662f\u901a\u8fc7\u4f60\u7684\u8bbe\u8ba1\uff0c\u548c\u771f\u5b9e\u5b58\u5728\u7684\u7269\u7406\u5173\u7cfb\uff0c\u624d\u8bbe\u8ba1\u51fa\u6765\u7684\u5408\u60c5\u5408\u7406\u7684\u53cc\u95ed\u73af\u63a7\u5236\u5668\u3002 \u6211\u4eec\u518d\u56de\u5fc6\u4e00\u4e0b\u8fd9\u4e2a\u63a7\u5236\u5668\u7684\u8bbe\u8ba1\u8fc7\u7a0b \u300c1.\u6267\u884c\u5668\u8f93\u51fa\u65e0\u6cd5\u76f4\u63a5\u63a7\u5236\u76ee\u6807\u7269\u7406\u91cf\u3002\u300d \u300c2.\u53d1\u73b0\u63a7\u5236\u5668\u80fd\u63a7\u5236\u7269\u7406\u91cf\u7684\u53d8\u5316\u91cf(\u5fae\u5206)\u3002\u300d \u300c3.\u4f60\u60f3\u4e86\u4e2a\u529e\u6cd5\uff0c\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236\u7269\u7406\u91cf\u7684\u5fae\u5206\uff0c\u6309\u7167\u67d0\u79cd\u66f2\u7ebf\u53d8\u5316\uff0c\u4ece\u800c\u8fbe\u5230\u95f4\u63a5\u63a7\u5236\u76ee\u6807\u7269\u7406\u91cf\u3002\u300d \u300c4.\u8fd9\u4e2a\u66f2\u7ebf\u5fc5\u987b\u6ee1\u8db3\u4e24\u70b9\uff0c\u5b58\u5728\u76ee\u6807\u7269\u7406\u91cf\u8bef\u5dee\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u4ea7\u751f\u56e0\u4e00\u4e2a\u80fd\u51cf\u5c0f\u8fd9\u4e2a\u8bef\u5dee\u7684\u53d8\u5316\uff0c\u4e14\u5f53\u6ca1\u6709\u8bef\u5dee\u7684\u65f6\u5019\uff0c\u53d8\u5316\u91cf\u4e5f\u5e94\u8be5\u4e3a0\u3002\u300d \u300c5.\u9009\u62e9\u6700\u7b80\u5355\u5b9e\u7528\u7684\u66f2\u7ebf\u5373\u53ef\uff0c\u6240\u4ee5\u5916\u73af\u9009\u62e9KP\u3002\u300d \u300c6.\u95f4\u63a5\u63a7\u5236\u80fd\u6210\u529f\u7684\u539f\u56e0\u662f\u56e0\u4e3a\uff0c\u6267\u884c\u5668\u80fd\u6539\u53d8\u7684\u91cf\uff0c\u4e0e\u76ee\u6807\u7269\u7406\u91cf\u4e4b\u95f4\u6709\u7b80\u5355\u7684\u7269\u7406\u5173\u7cfb\u3002\u300d \u6240\u4ee5\u4e3a\u4ec0\u4e48\u5916\u73af\u7684\u8f93\u5165\u662f\u5185\u73af\u7684\u671f\u671b\u5462\uff1f\u56e0\u4e3a\u4f60\u5728\u8bbe\u8ba1\u63a7\u5236\u5668\u7684\u65f6\u5019\uff0c\u5185\u73af\u7684\u76ee\u7684\u5c31\u662f\u5b9e\u73b0\u7528\u6267\u884c\u5668\u63a7\u5236\u76f4\u63a5\u80fd\u6539\u53d8\u7684\u53d8\u5316\u91cf\uff0c\u5916\u73af\u7684\u76ee\u7684\u5c31\u662f\u627e\u5230\u5408\u9002\u7684\u66f2\u7ebf\uff0c\u6765\u5f15\u5bfc\u76ee\u6807\u7684\u5fae\u5206\u53d8\u5316\uff0c\u4ece\u800c\u8fbe\u5230\u95f4\u63a5\u63a7\u5236\u7684\u6548\u679c\u3002","title":"\u4e3a\u4ec0\u4e48\u8981\u7528\u4e32\u7ea7PID\u5462"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hive/","text":"\u5361\u5c14\u66fc\u6ee4\u6ce2\u7b80\u4ecb \u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\u7684\u4f5c\u7528\u662f\uff1a\u901a\u8fc7\u8f93\u5165\u4e0d\u540c\u7684\u591a\u79cd\u6570\u636e\uff0c\u878d\u5408\u51fa\u4e00\u4e2a\u6700\u4f73\u7684\u6570\u636e \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u5361\u5c14\u66fc\u6ee4\u6ce2 https://www.youtube.com/watch?v=mwn8xhgNpFY \u72b6\u6001\u89c2\u5bdf\u5668 https://www.youtube.com/watch?v=4OerJmPpkRg \u6700\u4f73\u72b6\u6001\u4f30\u8ba1\u5668 https://www.youtube.com/watch?v=ul3u2yLPwU0 \u6700\u4f73\u72b6\u6001\u4f30\u8ba1\u5668\u7b97\u6cd5 https://www.youtube.com/watch?v=VFXf1lIZ3p8 \u975e\u7ebf\u6027\u72b6\u6001\u4f30\u8ba1\u5668 https://www.youtube.com/watch?v=Vefia3JMeHE \u5982\u4f55\u5728Simulink\u4e2d\u4f7f\u7528\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668 https://www.youtube.com/watch?v=ouRM4sgoVs8 \u5982\u4f55\u5728Simulink\u4e2d\u4f7f\u7528\u6269\u5c55\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668 https://www.youtube.com/watch?v=bCsOdnADuAM","title":"Hive"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hive/#_1","text":"\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668\u7684\u4f5c\u7528\u662f\uff1a\u901a\u8fc7\u8f93\u5165\u4e0d\u540c\u7684\u591a\u79cd\u6570\u636e\uff0c\u878d\u5408\u51fa\u4e00\u4e2a\u6700\u4f73\u7684\u6570\u636e","title":"\u5361\u5c14\u66fc\u6ee4\u6ce2\u7b80\u4ecb"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hive/#_2","text":"https://www.youtube.com/watch?v=mwn8xhgNpFY","title":"\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u5361\u5c14\u66fc\u6ee4\u6ce2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hive/#_3","text":"https://www.youtube.com/watch?v=4OerJmPpkRg","title":"\u72b6\u6001\u89c2\u5bdf\u5668"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hive/#_4","text":"https://www.youtube.com/watch?v=ul3u2yLPwU0","title":"\u6700\u4f73\u72b6\u6001\u4f30\u8ba1\u5668"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hive/#_5","text":"https://www.youtube.com/watch?v=VFXf1lIZ3p8","title":"\u6700\u4f73\u72b6\u6001\u4f30\u8ba1\u5668\u7b97\u6cd5"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hive/#_6","text":"https://www.youtube.com/watch?v=Vefia3JMeHE","title":"\u975e\u7ebf\u6027\u72b6\u6001\u4f30\u8ba1\u5668"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hive/#simulink","text":"https://www.youtube.com/watch?v=ouRM4sgoVs8","title":"\u5982\u4f55\u5728Simulink\u4e2d\u4f7f\u7528\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Hive/#simulink_1","text":"https://www.youtube.com/watch?v=bCsOdnADuAM","title":"\u5982\u4f55\u5728Simulink\u4e2d\u4f7f\u7528\u6269\u5c55\u5361\u5c14\u66fc\u6ee4\u6ce2\u5668"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Kafka/","text":"","title":"Kafka"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/","text":"Table of Contents generated with DocToc Python\u8bed\u8a00\u5165\u95e8 Python\uff08\u82f1\u56fd\u53d1\u97f3\uff1a/\u02c8pa\u026a\u03b8\u0259n/ \u7f8e\u56fd\u53d1\u97f3\uff1a/\u02c8pa\u026a\u03b8\u0251\u02d0n/\uff09\u662f\u4e00\u79cd\u5e7f\u6cdb\u4f7f\u7528\u7684\u89e3\u91ca\u578b\u3001\u9ad8\u7ea7\u548c\u901a\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\u3002Python\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8303\u578b\uff0c\u5305\u62ec\u51fd\u6570\u5f0f\u3001\u6307\u4ee4\u5f0f\u3001\u7ed3\u6784\u5316\u3001\u9762\u5411\u5bf9\u8c61\u548c\u53cd\u5c04\u5f0f\u7f16\u7a0b\u3002\u5b83\u62e5\u6709\u52a8\u6001\u7c7b\u578b\u7cfb\u7edf\u548c\u5783\u573e\u56de\u6536\u529f\u80fd\uff0c\u80fd\u591f\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\u4f7f\u7528\uff0c\u5e76\u4e14\u5176\u672c\u8eab\u62e5\u6709\u4e00\u4e2a\u5de8\u5927\u800c\u5e7f\u6cdb\u7684\u6807\u51c6\u5e93\u3002 Python\u7531\u5409\u591a\u00b7\u8303\u7f57\u82cf\u59c6\uff08Guido van Rossum\uff0c\u8377\u5170\u4eba\uff09\u521b\u9020\uff0c\u7b2c\u4e00\u7248\u53d1\u5e03\u4e8e1991\u5e74\uff0c\u5b83\u662fABC\u8bed\u8a00\u7684\u540e\u7ee7\u8005\uff0c\u4e5f\u53ef\u4ee5\u89c6\u4e4b\u4e3a\u4e00\u79cd\u4f7f\u7528\u4f20\u7edf\u4e2d\u7f00\u8868\u8fbe\u5f0f\u7684LISP\u65b9\u8a00\u3002 \u8bed\u8a00\u7279\u70b9\uff1a - \u57fa\u7840\u5e93\u5b8c\u5584\uff1a\u7f51\u7edc\u3001\u6587\u4ef6\u3001GUI\u3001\u6570\u636e\u5e93\u3001\u6587\u672c\u7b49\u3002 - \u7b2c\u4e09\u65b9\u5e93\u4f17\u591a\u3002 - \u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u8fd0\u884c\u6548\u7387\u4e0d\u9ad8\u3002 - \u52a8\u6001\u7c7b\u578b\u3001\u5f3a\u7c7b\u578b\u3002 \u591a\u79cd\u89e3\u91ca\u5668\uff1a - CPython\uff0c\u5b98\u65b9\u7248\u672c\uff0cC\u8bed\u8a00\u7f16\u5199\u3002 - IPython\uff0c\u57fa\u4e8eCPython\u7684\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u3002 - PyPy\uff1a\u91c7\u7528JIT\u6280\u672f\u5bf9Python\u8fdb\u884c\u52a8\u6001\u7f16\u8bd1\uff0c\u76ee\u6807\u662f\u6267\u884c\u901f\u5ea6\uff0c PyPy\u548cPython\u6709\u4e00\u5b9a\u4e0d\u540c \u3002 - Jython\uff1a\u8fd0\u884c\u5728JVM\u4e0a\u7684Python\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06Python\u4ee3\u7801\u7f16\u8bd1\u4e3aJava\u5b57\u8282\u7801\u6267\u884c\u3002 - IronPython\uff1a\u548cJython\u7c7b\u4f3c\uff0c\u7f16\u8bd1\u5230.NET\u5b57\u8282\u7801\u3002 - Python\u7684\u89e3\u91ca\u5668\u5f88\u591a\uff0c\u4f46\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u8fd8\u662fCPython\u3002\u5982\u679c\u8981\u548cJava\u6216.Net\u5e73\u53f0\u4ea4\u4e92\uff0c\u6700\u597d\u7684\u529e\u6cd5\u4e0d\u662f\u7528Jython\u6216IronPython\uff0c\u800c\u662f\u901a\u8fc7\u7f51\u7edc\u8c03\u7528\u6765\u4ea4\u4e92\uff0c\u786e\u4fdd\u5404\u7a0b\u5e8f\u4e4b\u95f4\u7684\u72ec\u7acb\u6027\u3002 \u9605\u8bfb\uff1a - Python3\u4e2d\u6587\u6587\u6863 - Python \u8bed\u8a00\u53c2\u8003\u624b\u518c Python\u53e5\u6cd5\u548c\u6838\u5fc3\u8bed\u4e49\uff0c\u6709\u4e00\u5b9a\u57fa\u7840\u53ef\u76f4\u63a5\u9605\u8bfb\u3002 - Python \u6559\u7a0b Python\u5b98\u65b9\u975e\u6b63\u5f0f\u6559\u7a0b\uff0c\u65e0\u57fa\u7840\u53ef\u5148\u4ece\u8fd9\u5f00\u59cb\u9605\u8bfb\u3002 - Python \u6807\u51c6\u5e93 Python\u6807\u51c6\u5e93\u7684\u6587\u6863\uff0c\u7528\u6765\u67e5\u9605\u3002 - \u5ed6\u96ea\u5cf0Python\u6559\u7a0b \uff08\u672c\u6587\u4e3b\u8981\u53c2\u8003\uff0c\u7528\u4e8e\u5165\u95e8\uff09 - Python 3 \u6559\u7a0b | \u83dc\u9e1f\u6559\u7a0b - Python\u6700\u4f73\u5b9e\u8df5\u6307\u5357 \uff0c\u4e00\u4efd\u7b2c\u4e09\u65b9\u7684\u6700\u4f73\u5b9e\u8df5\u6307\u5357\uff0c\u5f3a\u70c8\u5efa\u8bae\u9605\u8bfb\u3002 \u73af\u5883 Python3\u548cPython2\u4e0d\u517c\u5bb9\uff0cPython2\u5df2\u7ecf\u505c\u6b62\u7ef4\u62a4\uff0c\u539f\u5219\u4e0a\u4e0d\u5e94\u518d\u4f7f\u7528\u3002\u65f6\u4e0b\uff082021.10.1\uff09\u6700\u65b0\u7248\u672c3.9.7\u3002 \u5b98\u65b9\u89e3\u91ca\u5668CPython\uff0c\u4e0b\u8f7d\u5b89\u88c5\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u3002 VSCode\u5b89\u88c5Python\u63d2\u4ef6\u3002 \u63a8\u8350IDE\uff1aPyCharm\u3002 print(\"hello,world!\") \u5404\u79cdPython\u76f8\u5173\u6587\u4ef6\u540e\u7f00\uff1a - .py python\u6e90\u6587\u4ef6\u3002 - .pyw \u9ed8\u8ba4\u7684 .py \u662f\u63a7\u5236\u53f0\u5e94\u7528\uff0c\u800c .pyw \u662f\u7528\u4e8e\u7f16\u5199GUI\u5e94\u7528\u7684\uff0c\u8fd0\u884c\u65f6 stdout stderr \u8f93\u51fa\u65e0\u6548\uff0c stdin \u53ea\u4f1a\u8bfb\u53d6\u5230 EOF \u3002\u7528 pythonw.exe \u8fd0\u884c\u3002 - .pyc \u7c7b\u4f3c\u4e8eJava\u5b57\u8282\u7801\u6587\u4ef6\uff0c\u7f16\u8bd1\u540e\u7684Python\u5b57\u8282\u7801\u811a\u672c\u6587\u4ef6\uff0c\u4f9b\u89e3\u91ca\u5668\u4f7f\u7528\uff0c\u4e0d\u60f3\u63d0\u4f9b\u6e90\u7801\u65f6\u53ef\u4ee5\u63d0\u4f9b\u3002\u67d0\u4e9b\u60c5\u51b5 __pycache__ \u5c31\u4f1a\u751f\u6210\u548cPython\u6e90\u6587\u4ef6\u540c\u540d\u5e76\u52a0\u4e0a\u540e\u7f00 .cpython-3X.pyc \u7684\u6587\u4ef6\uff0c\u5176\u5b9e\u5c31\u662f\u7f16\u8bd1\u540e\u5b57\u8282\u7801\u3002\u5982\u679c\u6e90\u6587\u4ef6\u672a\u53d1\u751f\u6539\u53d8\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u518d\u6b21\u7f16\u8bd1\uff0c\u800c\u662f\u76f4\u63a5\u6267\u884c\u3002 - .pyo \u4f18\u5316\u7f16\u8bd1\u540e\u7684 .pyc \u6587\u4ef6\uff0c\u622a\u6b62\u81f3Python3.5\uff0c\u73b0\u5df2\u4e0d\u518d\u4f7f\u7528\u3002 - .pyd \u4e00\u822c\u662f\u5176\u4ed6\u8bed\u8a00\u7f16\u5199\u7684\u7f16\u8bd1\u540ePython\u6269\u5c55\u6a21\u5757\uff0c\u63d0\u4f9b\u7ed9python\u7528\u6765\u8c03\u7528\u3002\u5176\u5b9e\u5c31\u662f\u7f16\u8bd1\u540e\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u3002 - .pyi \u5b58\u6839\u6587\u4ef6\u3002 - .pyz Python\u811a\u672c\u5b58\u6863\uff0c\u5305\u542b\u6807\u51c6Python\u811a\u672c\u5934\u4e4b\u540e\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u7684\u538b\u7f29Python\u811a\u672c\uff08ZIP\uff09\u7684\u811a\u672c\u3002 - .pyx Cython\u6e90\u6587\u4ef6\uff0cPython\u7684C\u6269\u5c55\uff0c\u53ef\u4ee5\u8c03\u7528\u672c\u5730C/C++\u4ee3\u7801\uff0c\u63d0\u4f9b\u63a5\u8fd1C\u7684\u6027\u80fd\u3002 - .pxd Cython\u811a\u672c\uff0c\u76f8\u5f53\u4e8eC/C ++\u6807\u5934\u3002 \u7f16\u8bd1\u8fd0\u884c\uff1a - python -m compileall <xxx.py or dir/> \u7f16\u8bd1\u7ed3\u679c\u4fdd\u5b58\u5728 __pycache__/ \u4e0b\u3002\u7f16\u8bd1\u540e\u7684 .pyc \u53ef\u4ee5\u901a\u8fc7 python xxx.pyc \u8fd0\u884c\u3002 compileall \u5176\u5b9e\u5c31\u662fpython\u63d0\u4f9b\u7684\u4e00\u4e2a\u6a21\u5757\u3002 - \u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u76f4\u63a5\u8fd0\u884c\uff1a python xxx.py \u3002 \u53d8\u91cf\u4e0e\u5b57\u7b26\u4e32 \u6ce8\u91ca\uff1a\u884c\u6ce8\u91ca # \u4ee3\u7801\u5757\uff1a - \u6bcf\u4e00\u884c\u4e00\u6761\u8bed\u53e5\u3002\u4e00\u884c\u5199\u591a\u6761\u8bed\u53e5\u53ef\u4ee5\u7528 ; \u5206\u9694\u3002 - \u8bed\u53e5\u4ee5 : \u7ed3\u5c3e\u65f6\uff0c\u7f29\u8fdb\u8868\u793a\u4ee3\u7801\u5757\u3002 - \u7ea6\u5b9a\u4fd7\u6210\u662f\u75284\u7a7a\u683c\u7f29\u8fdb\u3002 - \u4e0d\u8981\u5728Python\u6e90\u6587\u4ef6\u4e2d\u6df7\u7528\u7a7a\u683c\u548cTab\u3002 \u6807\u8bc6\u7b26\uff1a - \u5b57\u6bcd\u6570\u5b57\u4e0b\u5212\u7ebf\u7ec4\u5408\uff0c\u4e0d\u80fd\u7528\u6570\u5b57\u5f00\u5934\u3002 \u6570\u636e\u7c7b\u578b\uff1a - \u6574\u6570\uff1a\u6ca1\u6709\u5927\u5c0f\u9650\u5236\uff0c\u5929\u7136\u652f\u6301\u9ad8\u7cbe\u5ea6\u3002 - \u6d6e\u70b9\u6570\uff1a\u6ca1\u6709\u5927\u5c0f\u9650\u5236\uff0c\u8d85\u51fa\u4e00\u5b9a\u8303\u56f4\u4f1a\u76f4\u63a5\u8868\u793a\u4e3a inf \u65e0\u7a77\u5927\u3002\u5176\u5b9e\u5c31\u662fIEEE 754 64\u4f4d\u6d6e\u70b9\u6570\uff0c\u6700\u5927\u8303\u56f4\u5728\u5341\u8fdb\u5236\u4e0b\u7ea6\u4e3a10\u7684308\u6570\u91cf\u7ea7\u3002 - \u5b57\u7b26\u4e32 - \u5e03\u5c14\u503c - \u5728Python\u4e2d\uff0c\u4efb\u4f55\u6570\u636e\u90fd\u662f\u5bf9\u8c61\uff0c \u5b57\u9762\u91cf\uff1a - \u6574\u6570\uff1a\u5341\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236 0x \uff0c\u6574\u6570\u6d6e\u70b9\u6570\u4e2d\u5141\u8bb8\u4f7f\u7528\u4e0b\u5212\u7ebf\u5206\u9694\uff0c\u4e0b\u5212\u7ebf\u4f1a\u88ab\u5ffd\u7565\u3002 - \u6d6e\u70b9\uff1aC\u5199\u6cd5\u3002 - \u5b57\u7b26\u4e32\uff1a\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u6587\u672c\uff0c\u4f7f\u7528\u5176\u4e2d\u4e00\u8005\u65f6\u53e6\u4e00\u8005\u53ef\u4ee5\u4e0d\u7528\u8f6c\u4e49\u3002\u4e00\u822c\u662f\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u5176\u4e2d\u4e00\u8005\u5c31\u7528\u53e6\u4e00\u8005\uff0c\u5982\u679c\u90fd\u5305\u542b\u90a3\u4f7f\u7528\u8f6c\u4e49\u5b57\u7b26\u3002 - \u5b57\u7b26\uff1a\u548c\u5b57\u7b26\u4e32\u4e00\u6837\uff0c\u957f\u5ea6\u4e3a1\u90a3\u5c31\u662f\u5b57\u7b26\uff0c\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\u8868\u793a\u3002\u5177\u4f53\u6709\u65e0\u5b57\u7b26\u8fd9\u4e2a\u7c7b\u578b\u8fd8\u4e0d\u597d\u8bf4\uff0c\u53ef\u80fd\u63a5\u53d7\u5b57\u7b26\u7684\u51fd\u6570\u53ea\u662f\u901a\u8fc7\u5b57\u7b26\u4e32\u957f\u5ea6\u505a\u4e86\u5224\u65ad\u800c\u5df2\u3002 - \u8f6c\u4e49\u5b57\u7b26\uff1a \\r \\n \\t \\\\ ... \u3002 - \u539f\u59cb\u5b57\u7b26\u4e32\uff1a\u524d\u7f00 r\"\" \u5185\u90e8\u5b57\u7b26\u4e32\u4e0d\u4f1a\u8f6c\u4e49\u3002\u5176\u4e2d\u7684\u540c\u6837\u7684\u5f15\u53f7\u4ecd\u9700\u8f6c\u4e49\u3002 - \u591a\u884c\u5b57\u7b26\u4e32\uff1a \"\"\"hello\"\"\" \uff0c\u4e5f\u53ef\u4ee5\u662f\u539f\u59cb\u5b57\u7b26\u4e32\u3002 - \u5e03\u5c14\u503c\uff1a True False - \u7a7a\u503c\uff1a None - \u4e60\u60ef\u4e0a\u4f7f\u7528\u5168\u5927\u5199\u6765\u5b9a\u4e49\u5e38\u91cf\uff0c\u4f46\u662f\u6ca1\u6709\u673a\u5236\u4fdd\u8bc1\u4e0d\u53d8\u3002 \u52a8\u6001\u7c7b\u578b\u8bed\u8a00\uff1a - \u7c7b\u578b\u7ed1\u5b9a\u53d1\u751f\u5728\u8fd0\u884c\u65f6\u3002 - \u5b9a\u4e49\u65f6\u4e0d\u8981\u6c42\u663e\u5f0f\u5199\u51fa\u7c7b\u578b\u3002 - \u53ef\u4ee5\u5c06\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u53d8\u91cf\u8d4b\u4e3a\u5176\u4ed6\u7c7b\u578b\uff0c\u53d8\u91cf\u5373\u53d8\u4e3a\u65b0\u7c7b\u578b\u3002 \u5b57\u7b26\u4e32\u7f16\u7801\uff1a - ASCII\uff0cUnicode\uff0cUTF-8\uff0cGBK\uff0c\u4e0d\u8d58\u8ff0\u3002 - \u4e00\u822c\u5bf9Unicode\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u6587\u4ef6\u4f7f\u7528utf-8\u7f16\u7801\uff0c\u8bfb\u53d6\u540ePython\u5b57\u7b26\u4e32\u4e2d\u6309\u7167Unicode\u7801\u70b9\u5f62\u5f0f\u5b58\u653e\uff0c\u8bfb\u53d6\u548c\u4fdd\u5b58\u662f\u505a\u89e3\u7801\u548c\u7f16\u7801\u7684\u5de5\u4f5c\u3002 - Python\u652f\u6301Unicode\uff0cPython 3\u4e2d\u5b57\u7b26\u4e32\u662f\u4ee5Unicode\u7f16\u7801\uff08\u5373\u4fdd\u5b58\u4e3aUnicode\u7801\u70b9\uff09\u7684\u3002 - ord() \u51fd\u6570\u83b7\u53d6\u5b57\u7b26\u5bf9\u5e94\u7684Unicode\u7801\u70b9\uff0c chr() \u5c06Unicode\u7801\u70b9\u8f6c\u5316\u4e3a\u5b57\u7b26\u3002 - \u53ef\u4ee5\u4f7f\u7528 \\u4e2d \u8fd9\u79cd\u5341\u516d\u8fdb\u5236Unicode\u8f6c\u4e49\u5b57\u7b26\u3002 - \u5b57\u7b26\u4e32\u7684 encode() \u65b9\u6cd5\u53ef\u4ee5\u5c06Unicode\u5b57\u7b26\u4e32\u7f16\u7801\u4e3a\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u8282\u3002\u5bf9\u4e0d\u80fd\u7f16\u7801\u7684\u5b57\u7b26\uff0c\u6bd4\u5982\u4e2d\u6587\u7f16\u7801\u4e3a ascii \u7684\u8bdd\u4f1a\u8fd0\u884c\u9519\u8bef\u3002 - \u5728\u7f16\u7801\u5f97\u5230\u7684\u5b57\u8282\u5e8f\u5217\u4e2d\uff0c\u65e0\u6cd5\u663e\u793a\u4e3aASCII\u7684\u5b57\u7b26\u5c06\u663e\u793a\u4e3a \\x## \u7684\u5f62\u5f0f\u3002 - \u5982\u679c\u8bfb\u53d6\u4e86\u5b57\u8282\u6d41\uff0c\u4fdd\u5b58\u4e3a\u5b57\u8282\u5e8f\u5217\uff0c\u9700\u8981\u89e3\u7801\u5c31\u9700\u8981\u8c03\u7528 decode() \u65b9\u6cd5\u3002\u5982\u679c\u5b57\u8282\u4e2d\u6709\u65e0\u6548\u7684\u5b57\u8282\uff0c\u53ef\u4ee5\u6dfb\u52a0\u547d\u540d\u53c2\u6570 errors='ignore' \u5ffd\u7565\u9519\u8bef\u7684\u5b57\u8282\u3002 - \u5b57\u7b26\u4e32\u957f\u5ea6\uff1a len(string) - \u5b57\u7b26\u7c7b\u578b\uff1a str - \u5b57\u8282\u5e8f\u5217\u7c7b\u578b\uff1a bytes - \u4e3a\u4e86\u907f\u514d\u4e71\u7801\u95ee\u9898\uff0c\u5e94\u5f53\u59cb\u7ec8\u575a\u6301\u4f7f\u7528UTF-8\u7f16\u7801\u5bf9 str \u548c bytes \u8fdb\u884c\u8f6c\u6362\u3002 - \u5b57\u8282\u5e8f\u5217 bytes \u7684\u5b57\u9762\u91cf\u8868\u793a\uff1a b\"absd\\x##\" \uff0c\u53ea\u80fd\u4f7f\u7528ASCII\u5b57\u7b26\u548c \\x## \u8fd9\u79cd\u5f62\u5f0f\u8868\u793a 7f-ff \u4e4b\u95f4\u7684\u5b57\u8282\u3002 \u6587\u4ef6\u7f16\u7801\uff1a - \u4fdd\u5b58\u6e90\u6587\u4ef6\u65f6\uff0c\u6700\u597d\u4fdd\u5b58\u4e3a utf-8 \u7f16\u7801\u3002 - \u5f53Python\u89e3\u91ca\u5668\u8bfb\u53d6\u6e90\u4ee3\u7801\u65f6\uff0c\u4e3a\u4e86\u8ba9\u5b83\u6309UTF-8\u7f16\u7801\u8bfb\u53d6\uff0c\u6211\u4eec\u901a\u5e38\u5728\u6587\u4ef6\u5f00\u5934\u5199\u4e0a\u8fd9\u4e24\u884c\uff1a #!/usr/bin/env python3 # -*- coding: utf-8 -*- \u7b2c\u4e00\u884c\u662f\u4e3a\u4e86\u80fd\u5728\u7c7bUnix\u7cfb\u7edf\u4e2d\u5f53\u505a\u811a\u672c\u6267\u884c\uff0cwindows\u4e2d\u4e0d\u80fd\u5f53\u811a\u672c\u6267\u884c\uff0c\u4e0d\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u76f4\u63a5\u53bb\u6389\u3002 \u7b2c\u4e8c\u884c\u544a\u8bc9Python\u89e3\u91ca\u5668\uff0c\u6309\u7167UTF-8\u7f16\u7801\u8bfb\u53d6\u6e90\u7801\uff0c\u58f0\u660e\u4e86UTF-8\u662f\u786e\u5b9a\u4e86\u7f16\u8bd1\u5668\u7684\u8bfb\u53d6\u65b9\u5f0f\uff0c\u5e76\u4e0d\u610f\u5473\u8fd9\u6587\u4ef6\u5c31\u662futf-8\u7f16\u7801\u4e86\u3002\u4e3a\u4e86\u6b63\u786e\u8bfb\u53d6\uff0c\u9700\u8981\u4fdd\u5b58\u4e3aUTF-8 \u65e0BOM\u683c\u5f0f\u3002 \u652f\u6301\u4e2d\u6587\u6807\u8bc6\u7b26\u3002 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316\uff1a - \u7b2c\u4e00\u79cd\u548cC\u7c7b\u4f3c % \u5360\u4f4d\u7b26\u5b9e\u73b0\uff1a \"name = %s, age = %2d\" % (name, age) \uff0c\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u540e\u518d\u7528 % \u52a0\u4e0a\u53c2\u6570\u5217\u8868\u3002 - \u683c\u5f0f\u5316\u5360\u4f4d\u7b26\uff1a %d %f %s %x \u7b49\u3002 - %s \u6c38\u8fdc\u8d77\u4f5c\u7528\uff0c\u4f1a\u628a\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002 - \u7b2c\u4e8c\u79cd\u683c\u5f0f\u5316\u65b9\u5f0f\u662f\u4f7f\u7528\u5b57\u7b26\u4e32\u7684 format() \u65b9\u6cd5\uff1a \"name = {0}, age = {1:2.3f}\".format(name, age) \u3002\u4f7f\u7528 {} \u5305\u56f4\u7684\u4ece0\u5f00\u59cb\u7684\u53c2\u6570\u7d22\u5f15\u4f5c\u4e3a\u5360\u4f4d\u7b26\u3002 - \u7b2c\u4e09\u79cd\u683c\u5f0f\u5316\u65b9\u5f0f f-string \uff0c\u5b57\u7b26\u4e32\u524d\u6dfb\u52a0 f \uff0c\u5176\u4e2d\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165\u53d8\u91cf\uff0c\u7528 {var:formatstr} \u7684\u5f62\u5f0f\u3002\u4e5f\u5373\u662f\u5b57\u7b26\u4e32\u63d2\u503c\uff0c\u7b97\u662f\u6700\u65b9\u4fbf\u7684\u65b9\u5f0f\u3002 - \u4e8c\u4e09\u79cd\u683c\u5f0f\u4e2d\u4f7f\u7528 {{ }} \u5bf9\u539f\u59cb\u7684 { } \u5b57\u7b26\u8fdb\u884c\u8f6c\u4e49\u3002 \u5e38\u7528\u6570\u636e\u7ed3\u6784 \u5217\u8868 list \uff1a - \u5b9a\u4e49\uff1a [elem1, elem2, ...] - \u7d22\u5f15\u8bbf\u95ee\uff1a [index] \u4ece0\u5f00\u59cb - \u8bbf\u95ee\u6700\u540e\u4e00\u4e2a\u5143\u7d20 [-1] - \u8ffd\u52a0 append \u63d2\u5165 insert \u5220\u9664\u6307\u5b9a\u4f4d\u7f6e\u5143\u7d20 pop(i) - \u957f\u5ea6\uff1a len(list) - \u5143\u7d20\u7c7b\u578b\u53ef\u4ee5\u4e0d\u540c\u3001\u5217\u8868\u4e2d\u5b58\u5217\u8868\u53ef\u4ee5\u5f53\u591a\u7ef4\u6570\u7ec4\u4f7f\u7528\u3002 \u5143\u7ec4 tuple \uff1a - \u5b9a\u4e49\uff1a (elem1, elem2, elem3) - \u957f\u5ea6\u56fa\u5b9a\u3002 - \u540c\u6837\u53ef\u4ee5\u4f7f\u7528 [index] \u7d22\u5f15\u8bbf\u95ee\u3002 - \u5b9a\u4e49\u5143\u7ec4\u65f6\uff0c\u5143\u7ec4\u7684\u5143\u7d20\u5fc5\u987b\u88ab\u786e\u5b9a\u4e0b\u6765\uff0c\u4e0d\u80fd\u4fee\u6539\u5143\u7d20\u7684\u503c\u3002 - () \u5b9a\u4e49\u7a7a\u7684\u5143\u7ec4\u3002 - \u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u662f\u548c\u5355\u7eaf\u7684\u4e00\u4e2a\u503c\u6709\u6b67\u4e49\uff0c\u6240\u4ee5 (1) \u8868\u793a\u503c1\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5143\u7d20\u7684\u5143\u7ec4\uff0c\u672b\u5c3e\u52a0 , \u53ef\u4ee5\u6d88\u9664\u6b67\u4e49\uff0c (1, ) \u3002 - tuple\u786e\u5b9a\u4e0b\u6765\u540e\uff0ctuple\u4e2d\u7684\u5143\u7d20\u503c\u4fbf\u4e0d\u80fd\u4fee\u6539\uff0c\u4e5f\u5c31\u662ftuple\u5143\u7d20\u6307\u5411\u7684\u5bf9\u8c61\u4e0d\u80fd\u53d8\uff0c\u4f46\u662f\u53ef\u4ee5\u4fee\u6539\u5bf9\u8c61\u672c\u8eab\uff0c\u6bd4\u5982\u5bf9\u8c61\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u90a3\u5c31\u53ef\u4ee5\u4fee\u6539\u5217\u8868\u7684\u5143\u7d20\u503c\u3002 \u5b57\u5178\uff1a - \u7c7b\u578b\uff1a dict - \u5b9a\u4e49\uff1a d = {key1: value1, key2: value2, ...} \uff0c\u5143\u7d20\u65e0\u5e8f\u3002 - \u53d6\u5143\u7d20\uff1a - d[key] \uff0c\u4e0d\u5b58\u5728\u62a5\u9519\u3002 - d.get(key) \uff0c\u4e0d\u5b58\u8fd4\u56deNone\u3002 - d.get(key, -1) \uff0c\u4e0d\u5b58\u5728\u65f6\u8fd4\u56de\u4f20\u5165\u7684\u9ed8\u8ba4\u503c\u3002 - \u5224\u65adkey\u662f\u5426\u5b58\u5728\uff1a key in d - \u63d2\u5165\uff1a d[key] = value - \u5220\u9664\u67d0\u4e00\u4e2akey\uff1a d.pop(key) - \u54c8\u5e0c\u8868\u5b9e\u73b0\uff0cO(1)\u63d2\u5165\u5220\u9664\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5185\u5b58\u5360\u7528\u5927\u3002 - \u9700\u8981\u6ce8\u610f dict \u7684key\u9700\u8981\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\u3002\u8fd9\u6837\u624d\u80fd\u624d\u80fd\u4fdd\u8bc1\u6bcf\u6b21\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u51fa\u7684\u54c8\u5e0c\u503c\u4e0d\u53d8\u3002 - \u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u4f46\u662f\u5143\u7ec4\u5185\u7684\u5143\u7d20\u4e0d\u4e00\u5b9a\u662f\uff0c\u5143\u7ec4\u9700\u8981\u5185\u90e8\u5143\u7d20\u90fd\u662f\u4e0d\u53ef\u53d8\u65f6\u624d\u80fd\u4f5c\u4e3akey\u3002 - \u6700\u5e38\u89c1\u7684key\u662f\u5b57\u7b26\u4e32\u3002 \u96c6\u5408\uff1a - \u65e0\u5e8f\u3001\u54c8\u5e0c\u8868\u5b9e\u73b0\u3001\u81ea\u52a8\u53bb\u91cd\uff0c - \u5b9a\u4e49\uff1a s = {elem1, elem2, ...} - \u6216\u8005\uff1a s = set([elem1, elem2, ...]) \u4f20\u5165\u4e00\u4e2a\u5217\u8868\u5f97\u5230\u5217\u8868\u6240\u6709\u5143\u7d20\u6784\u6210\u7684\u96c6\u5408\u3002 - \u76f4\u63a5\u5bf9\u5143\u7d20\u505a\u54c8\u5e0c\uff0c\u5143\u7d20\u9700\u8981\u4e0d\u53ef\u53d8\u3002 - \u6dfb\u52a0\uff1a add(key) - \u5220\u9664\uff1a remove(key) \u5143\u7d20\u9700\u8981\u5b58\u5728\u3002 - \u5224\u65ad\u662f\u5426\u5728\u96c6\u5408\u5185\uff1a key in s \u3002 - \u96c6\u5408\u95f4\u64cd\u4f5c\uff1a\u4ea4\u96c6 s1 & s2 \u5e76\u96c6 s1 & s2 \u3002 \u4e0d\u53ef\u53d8\u5bf9\u8c61\uff1a - \u5b57\u7b26\u4e32 str \u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u5217\u8868 list \u662f\u53ef\u53d8\u5bf9\u8c61\u3002 - \u5bf9\u4e8e\u53ef\u53d8\u5bf9\u8c61\uff1a\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\u53ef\u4ee5\u6539\u53d8\u6e90\u5bf9\u8c61\u5185\u90e8\u7684\u5185\u5bb9\u3002 - \u4e0d\u53ef\u53d8\u5bf9\u8c61\u6539\u53d8\u5185\u5bb9\u7684\u64cd\u4f5c\u90fd\u662f\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff0c\u6e90\u5bf9\u8c61\u4fdd\u6301\u4e0d\u53d8\u3002 - \u4e0d\u53ef\u53d8\u5bf9\u8c61\u4f18\u70b9\uff1a\u4e0d\u53d8\u5bf9\u8c61\u4e00\u65e6\u521b\u5efa\uff0c\u5bf9\u8c61\u5185\u90e8\u7684\u6570\u636e\u5c31\u4e0d\u80fd\u4fee\u6539\uff0c\u8fd9\u6837\u5c31\u51cf\u5c11\u4e86\u7531\u4e8e\u4fee\u6539\u6570\u636e\u5bfc\u81f4\u7684\u9519\u8bef\u3002\u540c\u65f6\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u540c\u65f6\u8bfb\u53d6\u4e0d\u7528\u52a0\u9501\u3002 - \u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u5982\u679c\u53ef\u4ee5\u8bbe\u8ba1\u4e3a\u4e0d\u53d8\u5bf9\u8c61\uff0c\u5c3d\u91cf\u8bbe\u8ba1\u4e3a\u4e0d\u53d8\u5bf9\u8c61\u3002 \u63a7\u5236\u6d41 \u6761\u4ef6\uff1a if condition: if_statements elif condition: elif_statements else: else_statements \u5e76\u4e0d\u8981\u6c42\u6761\u4ef6\u4e00\u5b9a\u662f\u903b\u8f91\u503c True False \uff0c\u53ea\u8981\u662f\u975e\u96f6\u6570\u503c\u3001\u975e\u7a7a\u5b57\u7b26\u4e32\u3001\u975e\u7a7alist\u7b49\uff0c\u90fd\u5224\u65ad\u4e3a True \uff0c\u5426\u5219 False \u3002 \u68c0\u67e5\u662f\u5426\u662fint\u7c7b\u578b int() \uff0c\u5982\u679c\u4e0d\u662f\u5219\u4f1a \u5faa\u73af\uff1a for x in collections: body while condition: body \u5faa\u73af\u4e2d\u53ef\u4ee5\u7528 break continue \u3002 \u8303\u56f4\uff1a - python\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684 range(a, b) \u51fd\u6570\uff0c\u7528\u6765\u65b9\u4fbf\u5730\u904d\u5386\uff0c\u4f20\u5165 list(range(a, b)) \u53ef\u4ee5\u5f97\u5230a\u5230b-1\u7684\u5217\u8868\u3002\u9ed8\u8ba4\u6b65\u957f\u662f1\u3002 - range(a) 0\u5230a-1\u3002 - range(a, b) a\u5230b-1\u3002 - range(a, b, step) a\u5230b-1\uff0c\u6307\u5b9a\u6b65\u957f\u3002 for x in range(1, 5): # x from 1 to 4 body \u51fd\u6570 \u5185\u7f6e\u51fd\u6570\uff1a - Python\u5185\u7f6e\u4e86\u5f88\u591a\u6709\u7528\u7684\u51fd\u6570 \uff0c\u524d\u9762\u5df2\u7ecf\u7528\u8fc7\u4e00\u4e9b\u4e86\uff0c\u5305\u62ec\u5b57\u7b26\u548c\u7801\u70b9\u8f6c\u6362\u3001\u8f93\u5165\u8f93\u51fa\u3001\u5217\u8868\u957f\u5ea6\u3001\u6784\u9020\u8303\u56f4\u5217\u8868\u7b49\u96c6\u5408\u3001\u5e38\u7528\u6570\u5b66\u64cd\u4f5c\u7b49\u3002\u90fd\u4e86\u89e3\u4e00\u904d\u662f\u5fc5\u8981\u7684\u3002 - \u5185\u7f6e\u7684\u5e2e\u52a9\u51fd\u6570\u53ef\u4ee5\u6253\u5370\u51fa\u5185\u7f6e\u51fd\u6570\u7684\u5e2e\u52a9\uff1a help(abs) \uff0c\u53ef\u4ee5\u65e9\u4ea4\u4e92\u5f0f\u6267\u884c\u73af\u5883\u4e0b\u5c3d\u60c5\u67e5\u770b\u3002 - \u6570\u636e\u7c7b\u578b\u8f6c\u6362\uff1a int float \u3002 \u5b9a\u4e49\u51fd\u6570\uff1a def func(args): body \u8fd4\u56de\uff1a return retval \uff0c\u51fd\u6570\u7ed3\u675f\u65f6\u6ca1\u6709 return \u8bed\u53e5\u4f1a\u81ea\u52a8\u8fd4\u56de None \uff0c\u4e5f\u53ef\u4ee5\u663e\u5f0f\u5730 return \u548c return None \u3002 \u7a7a\u8bed\u53e5\uff1a pass \u8bed\u53e5\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u4e00\u822c\u7528\u6765\u4f5c\u4e3a\u5360\u4f4d\u7b26\uff08\u6bd4\u5982\u6761\u4ef6\u3001\u5faa\u73af\u3001\u51fd\u6570\u4f53\u7b49\uff09\u3002\u6bd4\u5982\u8fd8\u672a\u5b9e\u73b0\u51fd\u6570\uff0c\u56e0\u4e3a\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u51fd\u6570\u4f53\u3002 \u4f1a\u68c0\u67e5\u51fd\u6570\u8c03\u7528\u7684\u53c2\u6570\u4e2a\u6570\u662f\u5426\u5339\u914d\u3002 \u8fd4\u56de\u591a\u4e2a\u503c\uff1a return nx, ny \uff0c\u7ed3\u679c\u4f1a\u4f5c\u4e3a\u4e00\u4e2a\u5143\u7ec4\uff0c\u6240\u4ee5\u548c return (nx, ny) \u662f\u7b49\u4ef7\u7684\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u6253\u5305\uff08pack\uff09\u3002 \u5982\u679c\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u63a5\u6536\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u4f1a\u83b7\u53d6\u5230\u6574\u4e2a\u5143\u7ec4\u3002\u7528\u548c\u5143\u7ec4\u5927\u5c0f\u5339\u914d\u7684\u53d8\u91cf\u6765\u63a5\u6536\uff0c\u90a3\u4e48\u4f1a\u4e00\u4e00\u8d4b\u503c\uff08\u89e3\u5305\uff09\uff0c\u5176\u4ed6\u60c5\u51b5\uff0c\u53d8\u91cf\u5c11\u4e86\u4f1a \u7528\u591a\u4e2a\u53d8\u91cf\u63a5\u53d7\u65f6\u5176\u5b9e\u5bf9\u8fd4\u56de\u503c\u5c31\u662f\u505a\u8fed\u4ee3\uff0c\u4f9d\u6b21\u8d4b\u503c\u3002\u53ea\u8981\u8fd4\u56de\u503c\u662f\u53ef\u8fed\u4ee3\u7684\u6bd4\u5982\u5217\u8868\uff0c\u5e76\u4e14\u53d8\u91cf\u4e2a\u6570\u7b49\u4e8e\u6216\u591a\u4e8e\u5143\u7d20\u5143\u7d20\u4e2a\u6570\uff0c\u90a3\u4e48\u5c31\u80fd\u6210\u529f\u89e3\u5305\u3002 \u5982\u679c\u6709\u5fc5\u8981\u53ef\u4ee5\u5bf9\u53c2\u6570\u505a\u7c7b\u578b\u68c0\u67e5\uff0c\u4f7f\u7528\u5185\u7f6e\u7684 isinstance(instance, typeOrTypeTuple) \u3002 \u53c2\u6570\uff1a - \u9ed8\u8ba4\u53c2\u6570\uff1a\u4ece\u540e\u5f80\u524d\u6dfb\u52a0\u3002 def power(x, n = 2): res = 1 while n > 0: res *= x n -= 1 return res \u6ce8\u610f\uff1apython\u51fd\u6570\u5728\u5b9a\u4e49\u65f6\u9ed8\u8ba4\u53c2\u6570\u5c31\u88ab\u8ba1\u7b97\u51fa\u6765\u4e86\uff0c\u5982\u679c\u9ed8\u8ba4\u53c2\u6570\u4e5f\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u591a\u6b21\u8c03\u7528\u65f6\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\uff0c\u5982\u679c\u5728\u51fd\u6570\u5185\u6539\u53d8\u4e86\u9ed8\u8ba4\u53c2\u6570\uff0c\u90a3\u4e48\u540e\u9762\u7684\u8c03\u7528\u65f6\u53c2\u6570\u5c31\u88ab\u6539\u53d8\u4e86\u3002\u8981\u907f\u514d\u8fd9\u4e00\u70b9\uff0c\u8bf7\u5c06\u9ed8\u8ba4\u53c2\u6570\u8bbe\u7f6e\u4e3a\u4e0d\u53d8\u91cf\u3002\u5373 \u9ed8\u8ba4\u53c2\u6570\u5fc5\u987b\u6307\u5411\u4e0d\u53d8\u5bf9\u8c61\uff01 \uff0c\u6bd4\u5982 str None \u7b49\u3002 \u53ef\u53d8\u53c2\u6570\uff1a - \u5b9a\u4e49\u53c2\u6570\u65f6\u4f7f\u7528 *args \uff0c args \u5728\u51fd\u6570\u5185\u5c06\u4f5c\u4e3a\u5bf9\u5e94\u4f20\u5165\u53c2\u6570\u6784\u6210\u7684\u5143\u7ec4\u3002\u53ef\u4ee5\u662f\u7a7a\uff0c\u53ef\u4ee5\u662f\u4efb\u610f\u4e2a\u6570\u3002 - \u8c03\u7528\u65f6\u53ef\u4ee5\u4f200\u4e2a\u6216\u4efb\u610f\u4e2a\u53c2\u6570\u3002 - \u53ef\u4ee5\u4f20\u5165 list \u6216\u8005 tuple \uff0c\u53ea\u8981\u5728\u53c2\u6570\u524d\u52a0\u4e00\u4e2a * \uff0c\u5c31\u7b49\u4ef7\u4e8e\u662f\u5c06\u5217\u8868\u6216\u8005\u5143\u7ec4\u6240\u6709\u5143\u7d20\u6309\u987a\u5e8f\u4f20\u5165\uff08\u6240\u4ee5\u4f20\u5165\u975e\u53ef\u53d8\u53c2\u6570\u51fd\u6570\u4e5f\u662f\u53ef\u884c\u7684\uff0c\u53ea\u8981\u6570\u91cf\u5339\u914d\uff09\u3002\u8fd9\u79cd\u5199\u6cd5\u975e\u5e38\u5e38\u89c1\u3002 \u5173\u952e\u5b57\u53c2\u6570\uff1a - \u5b9a\u4e49\u53c2\u6570\u65f6\u4f7f\u7528 **args \uff0c args \u5728\u51fd\u6570\u5185\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u5178\uff0ckey\u662f\u53c2\u6570\u540d\u79f0\uff0c\u503c\u662f\u53c2\u6570\u503c\u3002 - \u53ef\u4ee5\u4f20\u51650\u6216\u4efb\u610f\u4e2a\u5fc5\u987b\u5e26\u53c2\u6570\u540d\u7684\u53c2\u6570\u3002 - \u975e\u5e38\u7075\u6d3b\uff0c\u53ef\u4ee5\u7528\u5728\u9664\u4e86\u5fc5\u8981\u9009\u9879\u8fd8\u652f\u6301\u7528\u6237\u81ea\u5b9a\u9009\u9879\u7684\u573a\u666f\u4e0b\u3002 - \u8c03\u7528\u65f6\u540c\u7406\uff0c\u53ef\u4ee5\u4f7f\u7528 **dict \u65b9\u5f0f\u8c03\u7528\uff0ckey\u5fc5\u987b\u662f\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u53c2\u6570\u540d\u3002 \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\uff1a - \u5982\u679c\u8981\u9650\u5236\u5173\u952e\u5b57\u53c2\u6570\u7684\u540d\u5b57\uff0c\u5c31\u53ef\u4ee5\u7528\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u3002 - \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u9700\u8981\u4e00\u4e2a\u7279\u6b8a\u5206\u9694\u7b26 * \uff0c * \u540e\u9762\u7684\u53c2\u6570\u88ab\u89c6\u4e3a\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u3002 def person(name, age, *, city, job): # city and job are named keyword parameters print(name, age, city, job) \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u5fc5\u987b\u4f20\u5165\u53c2\u6570\u540d\uff0c\u8fd9\u548c\u4f4d\u7f6e\u53c2\u6570\u4e0d\u540c\u3002\u5982\u679c\u6ca1\u6709\u4f20\u5165\u53c2\u6570\u540d\uff0c\u8c03\u7528\u5c06\u62a5\u9519\u3002 \u5982\u679c\u4e2d\u95f4\u6709\u53ef\u53d8\u53c2\u6570\u4e86\uff0c\u90a3\u540e\u9762\u7684\u53c2\u6570\u81ea\u52a8\u6210\u4e3a\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u3002 \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u53ef\u4ee5\u6709\u9ed8\u8ba4\u503c\uff0c\u5e76\u4e14\u8c03\u7528\u65f6\u56e0\u4e3a\u5df2\u7ecf\u6709\u53c2\u6570\u547d\u4e86\uff0c\u6240\u4ee5\u987a\u5e8f\u53ef\u4ee5\u968f\u610f\u3002 \u53c2\u6570\u7ec4\u5408\uff1a - \u5728Python\u4e2d\u5b9a\u4e49\u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u5fc5\u9009\u53c2\u6570\u3001\u9ed8\u8ba4\u53c2\u6570\u3001\u53ef\u53d8\u53c2\u6570\u3001\u5173\u952e\u5b57\u53c2\u6570\u548c\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\uff0c\u8fd95\u79cd\u53c2\u6570\u90fd\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\u3002 - \u53c2\u6570\u5b9a\u4e49\u7684\u987a\u5e8f\u5fc5\u987b\u662f\uff1a\u5fc5\u9009\u53c2\u6570\u3001\u9ed8\u8ba4\u53c2\u6570\u3001\u53ef\u53d8\u53c2\u6570\u3001\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u548c\u5173\u952e\u5b57\u53c2\u6570\u3002 - \u5bf9\u4e8e\u4efb\u610f\u5f62\u5f0f\u7ec4\u5408\u53c2\u6570\u5217\u8868\uff0c\u603b\u662f\u53ef\u4ee5\u901a\u8fc7 fun(*args, **kw) \u7684\u65b9\u5f0f\u8c03\u7528\uff0c\u53ea\u8981\u6570\u91cf\u548c\u540d\u79f0\u662f\u5339\u914d\u7684\u3002 - \u5fc5\u9009\u53c2\u6570\u4e5f\u53ef\u4ee5\u901a\u8fc7\u547d\u540d\u53c2\u6570\u65b9\u5f0f\u8c03\u7528\uff0c\u7136\u540e\u540e\u7eed\u7684\u6240\u6709\u53c2\u6570\u90fd\u5fc5\u987b\u4ee5\u547d\u540d\u65b9\u5f0f\u4f20\u5165\uff0c\u5bf9\u987a\u5e8f\u6ca1\u6709\u8981\u6c42\u3002\u603b\u4f53\u4e0a \u53ea\u8981\u51fd\u6570\u80fd\u591f\u83b7\u53d6\u5230\u6240\u6709\u53c2\u6570\u5e76\u4e14\u4e0d\u4f1a\u91cd\u590d\u5373\u53ef \uff0c\u6ca1\u6709\u4f20\u5165\u4f46\u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u5c31\u7528\u9ed8\u8ba4\u503c\u3002 - \u4f7f\u7528\u592a\u591a\u7ec4\u5408\u4f1a\u964d\u4f4e\u53ef\u8bfb\u6027\uff0c\u9002\u5ea6\u5c31\u884c\u3002 \u9012\u5f52\uff1a def fib(n): return fibonacci(n, 0, 1) def fibonacci(n, a, b): if (n == 0): return a else: return fibonacci(n-1, b, a+b) python\u4e2d\u51fd\u6570\u4e0d\u8981\u6c42\u5b9a\u4e49\u4e00\u5b9a\u5728\u8c03\u7528\u524d\u3002 \u5c3e\u9012\u5f52\u4f18\u5316\u53ef\u4ee5\u907f\u514d\u9012\u5f52\u5c42\u6b21\u592a\u6df1\u5bfc\u81f4\u7684\u6808\u6ea2\u51fa\u95ee\u9898\u3002\u4f46\u597d\u50cfcpython\u5bf9\u4e0a\u9762\u7684\u5c3e\u9012\u5f52\u76f4\u63a5\u505a\u4f18\u5316\uff0c\u9700\u8981\u81ea\u5df1\u624b\u52a8\u5b9e\u73b0\u3002 \u5728\u6ca1\u6709\u5faa\u73af\u7684\u51fd\u6570\u8bed\u8a00\u4e2d\uff0c\u5faa\u73af\u53ea\u80fd\u901a\u8fc7\u5c3e\u9012\u5f52\u5b9e\u73b0\u3002 python\u4e2d\u9650\u5236\u4e86\u6700\u5927\u9012\u5f52\u6df1\u5ea6\uff0c import sys \uff0c\u901a\u8fc7 sys.getrecusionlimit() \u53ef\u4ee5\u83b7\u53d6\u6700\u5927\u9012\u5f52\u6df1\u5ea6\uff0c\u901a\u8fc7 sys.setrecursionlimit() \u53ef\u4ee5\u8bbe\u7f6e\u3002 \u96c6\u5408\u9ad8\u7ea7\u7279\u6027 \u5207\u7247\uff08slicing\uff09\uff1a - \u53d6\u5217\u8868\u6216\u5143\u7ec4\u90e8\u5206\u5143\u7d20\uff1a L[beginIndex : endIndexExclusive : step] \uff0c\u4ece\u5f00\u5934\u5f00\u59cb\u53d6\u90a3\u8d77\u59cb\u7d22\u5f15\u53ef\u4ee5\u7701\u7565\uff0c\u53d6\u5230\u7ed3\u5c3e\u65f6\u7ed3\u675f\u7d22\u5f15\u4e5f\u53ef\u4ee5\u7701\u7565\uff0c\u6b65\u957f\u9ed8\u8ba4\u662f1\u53ef\u7701\u7565\uff0c :step \u53ef\u9009\u3002\u7ed3\u675f\u7d22\u5f15\u8d85\u51fa\u8303\u56f4\u6309\u7167\u6700\u5927\u8ba1\u7b97\u3002 - \u4ece\u672b\u5c3e\u5f00\u59cb\u8ba1\u6570\u53d6\u5143\u7d20\uff0c\u7528\u8d1f\u7684\u7d22\u5f15\u5373\u53ef\uff1a [-2:-1] \uff0c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7d22\u5f15\u662f -1 \u800c\u4e0d\u662f0\u9700\u8981\u8bb0\u4f4f\u3002\u4e5f\u5c31\u662f\u8d1f\u7684\u7d22\u5f15\u8303\u56f4\u662f -length to -1 \u3002\u53d6\u5230\u672b\u5c3e\u90a3\u4e48\u7ed3\u675f\u7d22\u5f15\u5e94\u8be5\u7701\u7565\u800c\u4e0d\u662f\u75280\u3002 - \u8d77\u59cb\u7ed3\u675f\u90fd\u7701\u7565\uff1a L[:] \u5373\u8868\u793a\u590d\u5236\u6574\u4e2a\u5217\u8868\u3002 - \u6b63\u8d1f\u7d22\u5f15\u53ef\u4ee5\u6df7\u7528\uff0c\u90fd\u662f\u8868\u793a\u4e00\u4e2a\u4f4d\u7f6e\u800c\u5df2\u3002 - step \u4e3a\u8d1f\u53ef\u4ee5\u5012\u8fc7\u6765\u5207\uff0c\u6b64\u65f6\u540c\u6837\u5305\u62ec\u8d77\u59cb\u4f46\u4e0d\u5305\u62ec\u7ed3\u675f\uff0c\u65b9\u5411\u53cd\u8fc7\u6765\u4e86\u800c\u5df2\u3002\u5f62\u6210\u7684\u5b50\u5e8f\u5217\u548c\u5176\u5728\u539f\u5e8f\u5217\u4e2d\u7684\u76f8\u5bf9\u987a\u5e8f\u662f\u53cd\u8fc7\u6765\u7684\uff0c\u5f88\u597d\u7406\u89e3\u3002 - \u5b57\u7b26\u4e32\u4e5f\u53ef\u4ee5\u5207\u7247\uff0c\u7ed3\u679c\u540c\u6837\u662f\u5b57\u7b26\u4e32\u3002 - \u5f97\u5230\u7684\u7ed3\u679c\u662f\u65b0\u5bf9\u8c61\u3002\u5217\u8868\u5f97\u5230\u5217\u8868\uff0c\u5143\u7ec4\u5f97\u5230\u5143\u7ec4\u3002 - range \u4e5f\u53ef\u4ee5\u968f\u673a\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u5207\u7247\u3002 \u8fed\u4ee3\uff1a - \u7528for\u5faa\u73af\u6765\u904d\u5386\u4e00\u4e2a\u96c6\u5408\uff0c\u79f0\u4e4b\u4e3a\u8fed\u4ee3\uff0c for x in collection \u3002 - \u9664\u4e86\u5bf9\u4e8e list tuple range \u8fd9\u79cd\u6709\u4e0b\u6807\u7684\u96c6\u5408\uff0c\u8fd8\u6709 set dict \u8fd9\u79cd\u65e0\u4e0b\u6807\u7684\u96c6\u5408\u3002\u53ea\u8981\u53ef\u8fed\u4ee3\uff0c\u65e0\u8bba\u6709\u65e0\u4e0b\u6807\uff0c\u90fd\u53ef\u4ee5\u7528 for \u8fdb\u884c\u8fed\u4ee3\u3002\u5305\u62ec\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b\u3002 - \u5bf9\u5b57\u5178\u8fdb\u884c\u8fed\u4ee3\uff1a - for key in d \u9ed8\u8ba4\u8fed\u4ee3key\u3002 - for key, value in d.items() \u5b57\u5178\u5143\u7d20\u5176\u5b9e\u5c31\u662f\u4e8c\u5143\u7ec4\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\u83b7\u53d6\u3002 - for value in d.values() \u8fed\u4ee3\u503c\u3002 - \u5bf9\u53ef\u8fed\u4ee3\u7684\u96c6\u5408\u540c\u65f6\u8fed\u4ee3\u4e0b\u6807\uff1a - enumerate() \u53ef\u4ee5\u5c06\u96c6\u5408\u5143\u7d20\u53d8\u6210\u7d22\u5f15\u5143\u7d20\u5bf9\u3002 - for index, val in enumerate(collection) - from collections.abc import Iterable \uff0c\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\u90fd\u662f Iterable \u7c7b\u578b\u3002 \u5217\u8868\u751f\u6210\u5f0f\uff1a - \u4f7f\u7528\u5217\u8868\u751f\u6210\u5f0f\uff08List Comprehensions\uff09\u53ef\u4ee5\u65b9\u4fbf\u5730\u751f\u6210\u5217\u8868\u3002 - [expression for ... for ... if condition] - \u53ef\u4ee5\u6709\u591a\u5c42\u5faa\u73af\uff0c\u53ef\u4ee5\u6dfb\u52a0\u6761\u4ef6\u8fdb\u884c\u7b5b\u9009\uff0c\u6761\u4ef6\u6ee1\u8db3\u624d\u4f1a\u6267\u884c\u524d\u9762\u7684\u8868\u8fbe\u5f0f\u5f97\u5230\u5143\u7d20\u3002 - \u4f8b\uff1a [x*x for x in range(10) if x % 2 == 0] - [] \u4e2d\u7684\u5f0f\u5b50\u672c\u8eab\u662f\u4e00\u4e2a\u751f\u6210\u5668\u3002 - for \u524d\u9762\u4e5f\u53ef\u4ee5\u6dfb\u52a0 if-else \uff0c\u51fd\u6570\u662f\u8868\u8fbe\u5f0f\uff0c\u5fc5\u987b\u6709 else \uff0c\u800c for \u540e\u9762\u7684 if \u662f\u7b5b\u9009\u6761\u4ef6\uff0c\u4e0d\u80fd\u5e26 else \u3002 \u751f\u6210\u5668\uff1a - \u4e00\u8fb9\u6267\u884c\u5faa\u73af\u4e00\u8fb9\u751f\u6210\u5143\u7d20\u7684\u673a\u5236\uff0c\u5c31\u53eb\u751f\u6210\u5668\uff08Generator\uff09\uff0c\u53ef\u4ee5\u907f\u514d\u4e00\u5f00\u59cb\u5c31\u5c06\u6240\u6709\u5143\u7d20\u751f\u6210\u3002 - \u5c06\u4e0a\u9762\u5217\u8868\u751f\u6210\u5f0f\u7684\u5f0f\u5b50\u7528 () \u62ec\u8d77\u6765\u5c31\u662f\u4e00\u4e2a\u751f\u6210\u5668\u3002 - \u4f7f\u7528 next() \u53ef\u4ee5\u83b7\u53d6\u751f\u6210\u5f0f\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u6ca1\u6709\u66f4\u591a\u5143\u7d20\u629b\u51fa StopIteration \u9519\u8bef\u3002 - \u751f\u6210\u5668\u4e5f\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u7528for\u5faa\u73af\u8fed\u4ee3\u751f\u6210\u5668\u65f6\uff0c\u6574\u4e2a\u8fed\u4ee3\u8fc7\u7a0b\u662f\u751f\u6210\u5668\u548c\u5faa\u73af\u4ee3\u7801\u4ea4\u53c9\u6267\u884c\u7684\uff0c\u9700\u8981\u5143\u7d20\u5c31\u6267\u884c\u751f\u6210\u5668\u53d6\u51fa\u5143\u7d20\uff0c\u53d6\u5230\u540e\u6267\u884c\u4e0b\u4e00\u6b21\u5faa\u73af\uff0c\u5982\u6b64\u5f80\u590d\u3002\u751f\u6210\u7ed3\u675f\u540e\u5faa\u73af\u5c31\u7ed3\u675f\u4e86\u3002 - \u521b\u5efa\u4e86\u751f\u6210\u5668\u540e\uff0c\u5176\u5b9e\u4e00\u822c\u4e0d\u4f1a\u901a\u8fc7 next \u53d6\u5143\u7d20\u6765\u7528\uff0c\u57fa\u672c\u4e0a\u90fd\u662f\u901a\u8fc7 for \u5faa\u73af\u6765\u8fed\u4ee3\uff0c\u4e0d\u9700\u8981\u62c5\u5fc3 StopIteration \u9519\u8bef\u3002 - \u5b9a\u4e49\u51fd\u6570\u65f6\u5728\u5176\u4e2d\u4f7f\u7528 yield \u8fd4\u56de\u751f\u6210\u7684\u5143\u7d20\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u751f\u6210\u5668\u3002\u51fd\u6570\u8fd4\u56de\u503c\u4fdd\u5b58\u5728 StopIteration.value \u4e2d\uff0c\u8981\u83b7\u53d6\u8fd4\u56de\u503c\uff0c\u9700\u8981\u5728\u8fed\u4ee3\u5b8c\u6210\u540e\u8c03\u7528 next \u6355\u83b7\u5f02\u5e38\u8fdb\u884c\u83b7\u53d6\u3002 - \u6768\u8f89\u4e09\u89d2\u4f8b\u5b50\uff1a # pascal triangles def triangles(max): n, L = 0, [1] while n < max: yield L.copy() L.append(0) L = [L[i] + L[i-1] for i in range(len(L))] n += 1 return \"done\" g = triangles(10) res = [elem for elem in g] print(res) \u8fed\u4ee3\u5668\uff1a - \u53ef\u4ee5\u88ab next() \u51fd\u6570\u8c03\u7528\u5e76\u4e0d\u65ad\u8fd4\u56de\u4e0b\u4e00\u4e2a\u503c\u7684\u5bf9\u8c61\u79f0\u4e3a\u8fed\u4ee3\u5668\uff1a Iterator \u3002 - typing.py \u4e2d\uff1a Iterable = _alias(collections.abc.Iterable, 1) Iterator = _alias(collections.abc.Iterator, 1) \u751f\u6210\u5668\u90fd\u662f Iterator \u5bf9\u8c61\uff0c\u4f46 list \u3001 dict \u3001 str \u867d\u7136\u662f Iterable \uff0c\u5374\u4e0d\u662f Iterator \u3002\u5c06\u5176\u53d8\u4e3a Iterator \u53ef\u4ee5\u8c03\u7528 iter() \u51fd\u6570\u3002 Python\u7684 for \u5faa\u73af\u672c\u8d28\u5c31\u662f\u4e0d\u65ad\u8c03\u7528 next \u51fd\u6570\u5b9e\u73b0\u7684\u3002 for x in [1, 2, 3, 4, 5]: pass # equals to it = iter([1, 2, 3, 4, 5]) while True: try: x = next(it) except StopIteration: break Iterator \u7ee7\u627f\u81ea Iterable \uff0c\u540e\u7eed\u518d\u8be6\u8ff0\u3002 \u51fd\u6570\u5f0f\u7f16\u7a0b \u7eaf\u7cb9\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u4e2d\u6ca1\u6709\u53d8\u91cf\uff0c\u4efb\u4f55\u4e00\u4e2a\u51fd\u6570\uff0c\u53ea\u8981\u8f93\u5165\u786e\u5b9a\uff0c\u8f93\u51fa\u5c31\u662f\u786e\u5b9a\u7684\u3002\u8fd9\u79cd\u7eaf\u51fd\u6570\u662f\u6ca1\u6709\u526f\u4f5c\u7528\u7684\u3002\u800c\u5141\u8bb8\u4f7f\u7528\u53d8\u91cf\u7684\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u51fd\u6570\u5185\u90e8\u72b6\u6001\u4e0d\u786e\u5b9a\uff0c\u540c\u6837\u8f93\u5165\u53ef\u80fd\u5f97\u5230\u4e0d\u540c\u8f93\u51fa\uff0c\u79f0\u4e4b\u4e3a\u6709\u526f\u4f5c\u7528\u3002 \u51fd\u6570\u7f16\u7a0b\u7279\u70b9\uff1a - \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u8d4b\u503c\u3002 - \u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u8fd4\u56de\u503c - \u652f\u6301\u9ad8\u9636\u51fd\u6570\u3001\u95ed\u5305\u3001\u67ef\u91cc\u5316\u3002 \u9ad8\u9636\u51fd\u6570\uff1a\u4f7f\u7528\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u8fd4\u56de\u503c\u7684\u51fd\u6570\u3002 def add(x, y, f): return f(x) + f(y) \u6620\u5c04\uff08map\uff09\u548c\u89c4\u7ea6\uff08reduce\uff09\uff1a - map(func, iterable) \u4f20\u5165\u4e00\u4e2a\u51fd\u6570\u548c Iterable \uff0c\u5c06\u51fd\u6570\u4e00\u6b21\u4f5c\u7528\u4e8e\u5e8f\u5217\u6bcf\u4e2a\u5143\u7d20\uff0c\u5f97\u5230\u4e00\u4e2a Iterator \u3002 Iterator \u662f\u60f0\u6027\u5e8f\u5217\uff0c\u8981\u6c42\u51fa\u5177\u4f53\u7ed3\u679c\u9700\u8981\u904d\u5386\uff0c\u6216\u8005\u4f20\u5165 list() \u5f97\u5230\u5e8f\u5217\u3002 - from functools import reduce reduce(func, iterable, ...) \u4f20\u5165\u4e00\u4e2a\u51fd\u6570\uff0c\u4e00\u4e2a Iterable \uff0c\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u63a5\u53d72\u4e2a\u53c2\u6570\uff0creduce\u5c06func\u5e94\u7528\u4e8e\u5e8f\u5217\u7b2c1\u548c\u7b2c2\u4e2a\u5143\u7d20\uff0c\u5e76\u5c06\u7ed3\u679c\u7ee7\u7eed\u8fd0\u7528\u4e8e\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u76f4\u5230\u5e8f\u5217\u7ed3\u675f\u3002\u4e0d\u662f\u5185\u5efa\u51fd\u6570\uff0c\u53ef\u4ee5\u4f20\u5165\u591a\u4e2a Iterable \uff0c\u8fd9\u662f\u51fd\u6570\u63a5\u53d7\u4e0e Iterable \u4e2a\u6570\u76f8\u540c\u7684\u53c2\u6570\uff0c\u8fd0\u7528\u4e4b\u540e\u5f97\u5230\u7ed3\u679c\uff0c\u6700\u77ed\u7684 Iterable \u8fed\u4ee3\u5b8c\u4e4b\u540e\u5c06\u7ed3\u675f\u3002 # map def add10(x): return x + 10 print(list(map(add10, [1, 2, 3]))) def add(x, y): return x + y print(list(map(add, range(100)[::-1], [-x for x in range(100, 250)]))) # reduce def sum(x, y): return x + y print(reduce(sum, range(101))) # example DIGITS = dict((chr(ord('0') + val), val) for val in range(10)) # '0': 0, '1': 1, ... def str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return DIGITS[s] return reduce(fn, map(char2num, s)) filter(func, iterable) \u7528\u4e8e\u8fc7\u6ee4\uff0c\u5176\u5b9e\u4e5f\u662f\u5e7f\u4e49\u4e0a\u7684\u6620\u5c04\u3002\u6839\u636e\u51fd\u6570\u4f5c\u7528\u4e8e\u5143\u7d20\u662f True \u4fdd\u7559\uff0c False \u4e22\u5f03\u3002 \u4f8b\u5b50\uff1a\u57c3\u62c9\u6258\u8272\u5c3c\u7b5b\u6cd5\u6c42\u7d20\u6570\u3002 # example: use Sieve of Eratosthenes to find all prime nunbers # https://zh.wikipedia.org/wiki/%E5%9F%83%E6%8B%89%E6%89%98%E6%96%AF%E7%89%B9%E5%B0%BC%E7%AD%9B%E6%B3%95 def _odd_iter(): n = 1 while True: n = n + 2 yield n def _not_division(n): return lambda x: x % n > 0 def primes(): yield 2 it = _odd_iter() # generate odd numbers while True: n = next(it) yield n it = filter(_not_division(n), it) # construct new Iterator gp = primes() print([next(gp) for _ in range(100)]) \u5185\u5efa\u7684 sorted(iterable, *, key=None, reverse=False) \u65b9\u6cd5\u3002\u63a5\u53d7 key \u51fd\u6570\u5b9e\u73b0\u81ea\u5b9a\u4e49\u6392\u5e8f\uff0c key \u51fd\u6570\u5c06\u4f5c\u7528\u4e8e\u5143\u7d20\u4e0a\uff0c\u6839\u636e\u5176\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f\u3002\u6bd4\u5982\u5b57\u7b26\u4e32\u5ffd\u7565\u5927\u5c0f\u5199\u4f20\u5165 str.lower \uff0c\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u65b0\u5217\u8868\u3002 \u95ed\u5305\uff1a - \u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c\u65f6\uff0c\u8c03\u7528\u51fd\u6570\u5c06\u83b7\u5f97\u8fd4\u56de\u7684\u51fd\u6570\uff0c\u6b64\u65f6\u4f20\u5165\u7684\u53c2\u6570\u53d8\u91cf\u7b49\u72b6\u6001\u88ab\u4fdd\u5b58\uff0c\u4e5f\u5c31\u662f\u559c\u95fb\u4e50\u89c1\u7684\u95ed\u5305\u4e86\u3002 - \u8fd4\u56de\u95ed\u5305\u65f6\u4e0d\u8981\u5f15\u7528\u4efb\u4f55\u5faa\u73af\u53d8\u91cf\uff0c\u6216\u8005\u540e\u7eed\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u91cf\u3002 - \u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u7262\u8bb0\u8be5\u51fd\u6570\u5e76\u672a\u6267\u884c\uff0c\u8fd4\u56de\u51fd\u6570\u4e2d\u4e0d\u8981\u5f15\u7528\u4efb\u4f55\u53ef\u80fd\u4f1a\u53d8\u5316\u7684\u53d8\u91cf\u3002 # every call will return a incresing value def createCounter(): n = 0 def counter(): nonlocal n # need define as nonlocal, if call outter local variable n = n + 1 return n return counter c = createCounter() print([c() for _ in range(10)]) d = createCounter() print([d() for _ in range(10)]) \u533f\u540d\u51fd\u6570\uff1a - \u4f20\u5165\u51fd\u6570\u65f6\uff0c\u6709\u4e9b\u6bd4\u8f83\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u4f20\u5165\u533f\u540d\u51fd\u6570\u66f4\u52a0\u65b9\u4fbf\u3002 - Python\u4e2d\u5bf9\u533f\u540d\u51fd\u6570\u63d0\u4f9b\u4e86\u6709\u9650\u7684\u652f\u6301\u3002 - \u8bed\u6cd5\uff1a lambda args: expression \uff0c\u533f\u540d\u51fd\u6570\u7684\u9650\u5236\u662f\u53ea\u80fd\u6709\u4e2a\u8868\u8fbe\u5f0f\uff0c\u4e0d\u7528\u5199 return \uff0c\u8fd4\u56de\u503c\u5c31\u662f\u8be5\u8868\u8fbe\u5f0f\u503c\u3002 - \u533f\u540d\u51fd\u6570\u4e5f\u662f\u51fd\u6570\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u8d4b\u503c\u3002 - \u652f\u6301\u786e\u5b9e\u6709\u9650\uff0c\u76f8\u6bd4\u4e4b\u4e0bScala\u5c31\u7075\u6d3b\u4e86\u5f88\u591a\u3002 f = lambda x : (lambda y : (lambda z : x + y + z)) print(f) print(f(1)) print(f(1)(2)) print(f(1)(2)(3)) # 6 \u504f\u51fd\u6570\uff1a - functools \u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u504f\u51fd\u6570\uff08partial function\uff09\u652f\u6301\u3002 - functools.partial \u5c31\u662f\u7528\u6765\u5e2e\u52a9\u521b\u5efa\u504f\u51fd\u6570\u7684\u3002 - python\u4e2d\u504f\u51fd\u6570\u662f\u6307\uff0c\u628a\u4e00\u4e2a\u53c2\u6570\u7684\u67d0\u4e9b\u53c2\u6570\u56fa\u5b9a\u4f4f\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u3002\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u4f1a\u66f4\u52a0\u7b80\u5355\u3002 from functools import partial # partial function int2 = partial(int, base = 2) print(int2(\"1000\")) # 8 # equals to kw = {\"base\": 2} print(int(\"1000\", **kw)) def f(a, b, c, d): print(f\"{a}, {b}, {c}, {d}\") f1 = partial(f, 10, 20) f1(30, 40) # 10, 20, 30, 40 \u504f\u51fd\u6570\u5982\u679c\u5b9a\u4e49\u65f6\u4f20\u4e86\u547d\u540d\u53c2\u6570\uff0c\u5728\u751f\u6210\u7684\u504f\u51fd\u6570\u8c03\u7528\u4e2d\u8fd8\u53ef\u4ee5\u901a\u8fc7\u547d\u540d\u53c2\u6570\u7684\u65b9\u5f0f\u8986\u76d6\u8fd9\u4e2a\u504f\u51fd\u6570\u5b9a\u4e49\u65f6\u4f20\u5165\u7684\u53c2\u6570\u3002 \u5b9a\u4e49\u65f6\u4e0d\u547d\u540d\u7684\u8bdd\u4f1a\u5c06\u53c2\u6570\u52a0\u5230 *args \u7684\u6700\u5de6\u8fb9\u3002\u4e0d\u80fd\u4f7f\u7528\u547d\u540d\u53c2\u6570\u518d\u8986\u76d6\u3002 \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u53ea\u80fd\u4ee5\u547d\u540d\u65b9\u5f0f\u4f20\u5165\uff0c\u4f4d\u7f6e\u53c2\u6570\u53ef\u4ee5\u901a\u8fc7\u4f4d\u7f6e\u4f20\u5165\u5c31\u662f\u4ece\u524d\u5f80\u540e\uff0c\u4e5f\u53ef\u4ee5\u547d\u540d\u4f20\u5165\uff0c\u90a3\u4e48\u540e\u9762\u7684\u90fd\u9700\u8981\u547d\u540d\u4f20\u5165\u3002\u548c\u666e\u901a\u51fd\u6570\u8c03\u7528\u89c4\u5219\u5dee\u4e0d\u591a\u3002 \u88c5\u9970\u5668\uff08Decorator\uff09\uff1a - \u5728\u8fd0\u884c\u671f\u589e\u52a0\u51fd\u6570\u529f\u80fd\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u88c5\u9970\u5668\u6a21\u5f0f\u5728\u8bed\u8a00\u5c42\u9762\u7684\u5b9e\u8df5\u3002 - \u672c\u8d28\u4e0a\uff0cdecorator\u5c31\u662f\u4e00\u4e2a\u8fd4\u56de\u51fd\u6570\u7684\u9ad8\u9636\u51fd\u6570\u3002\u8c03\u7528\u8981\u4fee\u9970\u7684\u51fd\u6570\uff0c\u5e76\u6dfb\u52a0\u81ea\u5df1\u7684\u529f\u80fd\u3002 - \u4f8b\u5b50\uff1a\u6dfb\u52a0\u65e5\u5fd7\u6253\u5370\u529f\u80fd\u3002 # decorator def log(func): def warpper(*args, **kv): print(f\"call {func.__name__}\") return func(*args, **kv) return warpper @log def now(): print('2021-10-2') def now2(): print('2021-10-2') now() log(now2)() # equals to now() print(now.__name__) # wrapper \u5c06 @log \u653e\u5728\u51fd\u6570\u5b9a\u4e49\u5904\uff0c\u76f8\u5f53\u4e8e\u6267\u884c log = log(now) \u3002 \u5982\u679c log \u9700\u8981\u52a0\u53c2\u6570\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u591a\u52a0\u4e00\u5c42\uff0c\u6700\u5916\u5c42\u63a5\u53d7\u88c5\u9970\u5668\u53c2\u6570\uff0c\u91cc\u5c42\u63a5\u53d7\u51fd\u6570\uff0c\u6700\u91cc\u5c42\u6dfb\u52a0\u903b\u8f91\u6267\u884c\u8f6c\u8c03\u3002\u6b64\u65f6\u7ecf\u8fc7\u88c5\u9970\u540e\u7684\u51fd\u6570 __name__ \u7b49\u5c5e\u6027\u4f1a\u53d8\u6210\u6700\u91cc\u5c42\u51fd\u6570\u7684\u5c5e\u6027\uff0c\u9700\u8981\u6dfb\u52a0 @functools.wraps(func) \u6765\u5c06\u539f\u59cb\u51fd\u6570\u7684\u5c5e\u6027\u590d\u5236\u5230 warpper \u51fd\u6570\u51fd\u6570\u4e2d\u3002 # decorator with arguments def log2(text): def decorator(func): @functools.wraps(func) def warpper(*args, **kv): print(f\"{text} : {func.__name__}\") return func(*args, **kv) return warpper return decorator @log2(\"execute\") # equals to now3 = log(\"execute\")(now3) def now3(): print('2021-10-2') now3() print(now3.__name__) # now3, if without @functools.wraps(func), will be wrapper \u6a21\u5757 \u6a21\u5757\uff1a - \u5728Python\u4e2d\uff0c\u4e00\u4e2a .py \u5c31\u662f\u4e00\u4e2a\u6a21\u5757\u3002 - \u53ef\u4ee5\u907f\u514d\u51fd\u6570\u53d8\u91cf\u540d\u51b2\u7a81\uff0c\u7f16\u5199\u6a21\u5757\u65f6\u4e0d\u5fc5\u8003\u8651\u540d\u5b57\u4f1a\u4e0e\u5176\u4ed6\u6a21\u5757\u51b2\u7a81\uff0c\u4f46\u8981\u6ce8\u610f\u5c3d\u91cf\u4e0d\u8981\u548c\u5185\u7f6e\u51fd\u6570\u91cd\u540d\u3002 - \u4e3a\u4e86\u907f\u514d\u6a21\u5757\u540d\u51b2\u7a81\uff0cPython\u53c8\u5f15\u5165\u4e86\u6309\u76ee\u5f55\u7ec4\u7ec7\u6a21\u5757\u7684\u65b9\u6cd5\uff0c\u79f0\u4e3a\u5305\uff08Package\uff09\u3002 - \u5f15\u5165\u5305\u4ee5\u540e\uff0c\u53ea\u6709\u9876\u5c42\u7684\u540d\u5b57\u4e0d\u4e0e\u522b\u4eba\u51b2\u7a81\uff0c\u90a3\u6240\u6709\u6a21\u5757\u5c31\u4e0d\u4f1a\u4e0e\u522b\u4eba\u51b2\u7a81\u3002 mycompany \u251c\u2500 __init__.py \u251c\u2500 abc.py \u2514\u2500 xyz.py \u4e0a\u8ff0\u4f8b\u5b50\u4e2d mycompany \u4e2d\u7684\u6a21\u5757\u540d\u5c31\u5206\u522b\u662f mycompany.abc mycompany.utils \u3002 \u6bcf\u4e2a\u5305\u76ee\u5f55\u4e0b\u90fd\u4f1a\u6709\u4e00\u4e2a __init__.py \u6587\u4ef6\uff0c\u662f\u5fc5\u987b\u5b58\u5728\u7684\uff0c\u5426\u5219Python\u4e0d\u4f1a\u5c06\u5176\u89c6\u4e3a\u5305\u3002 __init__.py \u53ef\u4ee5\u662f\u7a7a\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u6709Python\u4ee3\u7801\uff0c\u56e0\u4e3a __init__.py \u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u6a21\u5757\uff0c\u800c\u5b83\u7684\u6a21\u5757\u540d\u5c31\u662f mycompany \u3002\u3010Python3.3\u540e\u7248\u672c\u6a21\u5757\u5df2\u7ecf\u53ef\u4ee5\u4e0d\u8981\u8fd9\u4e2a\u6587\u4ef6\u4e86\u3002\u3011 \u81ea\u5b9a\u4e49\u6a21\u5757\u65f6\u53ea\u6709\u547d\u540d\u4e0d\u8981\u548cPython\u81ea\u5e26\u6a21\u5757\u51b2\u7a81\u3002\u4f8b\u5982\u7cfb\u7edf\u5f15\u5165\u4e86 sys \u6a21\u5757\uff0c\u5c31\u4e0d\u8981\u518d\u547d\u540d sys.py \uff0c\u5426\u5219\u5c06\u65e0\u6cd5\u5bfc\u5165\u7cfb\u7edf\u81ea\u5e26\u7684 sys \u6a21\u5757\u3002 \u6a21\u5757\u540d\u8981\u9075\u5faaPython\u53d8\u91cf\u547d\u540d\u89c4\u8303\uff0c\u4e0d\u8981\u4f7f\u7528\u4e2d\u6587\u3001\u7279\u6b8a\u5b57\u7b26\u3002 \u6a21\u5757\u540d\uff08\u6587\u4ef6\u540d\uff09\u4e0d\u8981\u548c\u7cfb\u7edf\u6a21\u5757\u51b2\u7a81\uff0c\u6700\u597d\u5148\u67e5\u770b\u7cfb\u7edf\u662f\u5426\u6709\u8fd9\u4e2a\u6a21\u5757\uff0c\u4ea4\u4e92\u73af\u5883\u4e0b import abc \u6210\u529f\u5219\u8bf4\u660e\u5b58\u5728\u3002 \u5199\u4e00\u4e2a\u6a21\u5757\u7684\u6807\u690e\u624b\u6cd5\uff1a - \u811a\u672c\u548c\u7f16\u7801\u6ce8\u91ca\u3002 - \u6a21\u5757\u4ee3\u7801\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u90fd\u88ab\u89c6\u4e3a\u6a21\u5757\u7684\u6587\u6863\u6ce8\u91ca\u3002 - \u4f7f\u7528 __author__ \u53d8\u91cf\u8868\u660e\u4f5c\u8005\u3002 - \u540e\u9762\u662f\u771f\u6b63\u7684\u4ee3\u7801\u90e8\u5206\u3002\u4e00\u822c\u5bfc\u5165\u6a21\u5757\u5199\u5728\u6700\u524d\u9762\u3002 if __name__=='__main__': test() \u7136\u540e\u662f\u901a\u8fc7\u547d\u540d\u884c\u8fd0\u884c\u6a21\u5757\u6587\u4ef6\u65f6\uff0c __name__ \u4f1a\u88ab\u7f6e\u4e3a __main__ \uff0c\u5176\u4e2d\u903b\u8f91\u5c31\u4f1a\u6267\u884c\uff0c\u800c\u5982\u679c\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u5bfc\u5165\uff08\u6b64\u65f6 __name__ \u662f\u6a21\u5757\u540d\uff09\u5224\u65ad\u5c31\u4f1a\u5931\u8d25\uff0c\u5c31\u4e0d\u4f1a\u6267\u884c\u3002\u6700\u5e38\u89c1\u662f\u5c06\u6a21\u5757\u5185\u6d4b\u8bd5\u4ee3\u7801\u5199\u5728\u6b64\u5904\u3002 \u4f5c\u7528\u57df\uff1a - \u5728\u4e00\u4e2a\u6a21\u5757\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5b9a\u4e49\u5f88\u591a\u51fd\u6570\u548c\u53d8\u91cf\uff0c\u4f46\u6709\u7684\u51fd\u6570\u548c\u53d8\u91cf\u6211\u4eec\u5e0c\u671b\u7ed9\u522b\u4eba\u4f7f\u7528\uff0c\u6709\u7684\u51fd\u6570\u548c\u53d8\u91cf\u6211\u4eec\u5e0c\u671b\u4ec5\u4ec5\u5728\u6a21\u5757\u5185\u90e8\u4f7f\u7528\u3002\u5728Python\u4e2d\uff0c\u662f\u901a\u8fc7 _ \u524d\u7f00\u6765\u5b9e\u73b0\u7684\u3002 - \u6b63\u5e38\u7684\u51fd\u6570\u548c\u53d8\u91cf\u540d\u662f\u516c\u5f00\u7684\uff0c\u53ef\u4ee5\u88ab\u76f4\u63a5\u5f15\u7528\u3002 - \u7c7b\u4f3c __xxx__ \u8fd9\u79cd\u53d8\u91cf\u662f\u7279\u6b8a\u53d8\u91cf\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f15\u7528\uff0c\u4f46\u662f\u6709\u7279\u6b8a\u7528\u9014\uff0c\u6bd4\u5982 __author__ __name__ \uff0c\u6a21\u5757\u6587\u6863\u6ce8\u91ca\u53ef\u4ee5\u901a\u8fc7\u7279\u6b8a\u53d8\u91cf __doc__ \u5f15\u7528\u3002\u81ea\u5df1\u5b9a\u4e49\u53d8\u91cf\u4e00\u822c\u4e0d\u8981\u5b9a\u4e49\u4e3a\u8fd9\u79cd\u5f62\u5f0f\u3002 - \u7c7b\u4f3c\u4e8e _xxx __xxx \u8fd9\u79cd\u547d\u540d\u7684\u53d8\u91cf\u662f\u975e\u516c\u5f00\uff08private\uff09\u7684\uff0c\u4e0d\u5e94\u8be5\u76f4\u63a5\u5f15\u7528\uff08\u5176\u5b9e\u4e5f\u662f\u53ef\u4ee5\u5f15\u7528\u7684\uff0c\u53ea\u662f\u7f16\u7a0b\u4e60\u60ef\u7ea6\u5b9a\u800c\u5df2\uff09\u3002 - \u5916\u90e8\u4e0d\u9700\u8981\u4f7f\u7528\u7684\u51fd\u6570\u5168\u90e8\u5b9a\u4e49\u4e3a private \uff0c\u53ea\u6709\u9700\u8981\u5f15\u7528\u7684\u624d\u5b9a\u4e49\u4e3a public \uff08\u901a\u8fc7\u547d\u540d\u7684\u65b9\u5f0f\uff0c\u975e\u5e38\u7b80\u5355\u7c97\u66b4\uff09\u3002 - \u5f15\u5165\u6a21\u5757\u7684\u64cd\u4f5c\u53ea\u4f5c\u7528\u4e8e\u5f53\u524d\u6a21\u5757\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u6587\u4ef6\uff0c\u5176\u4ed6\u6a21\u5757\u5f15\u5165\u4e86\u8be5\u6a21\u5757\u5e76\u4e0d\u4f1a\u5f15\u5165\u8be5\u6a21\u5757\u5f15\u5165\u7684\u6a21\u5757\u3002 \u5305\u7ba1\u7406\u5de5\u5177pip\uff1a - PyPI \uff08The Python Package Index\uff09\u662fPython\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u53ef\u4ee5\u641c\u7d22\u5b89\u88c5\u7b2c\u4e09\u65b9\u5e93\uff0c\u547d\u4ee4\u662f pip \u3002 - \u6bd4\u5982\uff1a pip install numpy \u3002 - \u7248\u672c\uff1a pip --version - \u66f4\u65b0 pip \uff1a python -m pip install --upgrade pip \u3002 - \u6362\u6e90\u5b89\u88c5\uff1a pip install numpy -i https://pypi.tuna.tsinghua.edu.cn/simple \u56fd\u5185\u955c\u50cf\u8bbe\u4e3a\u9ed8\u8ba4\u6e90\uff1a # \u6e05\u534e\u6e90 pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple # \u6216\uff1a # \u963f\u91cc\u6e90 pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ # \u817e\u8baf\u6e90 pip config set global.index-url http://mirrors.cloud.tencent.com/pypi/simple # \u8c46\u74e3\u6e90 pip config set global.index-url http://pypi.douban.com/simple/s \u66f4\u65b0\u5305\uff1a pip install --upgrade <package-name> \u5b89\u88c5\u5305\uff1a pip install packagename # \u6700\u65b0\u7248\u672c pip install packagename==1.0.4 # \u6307\u5b9a\u7248\u672c \u5378\u8f7d\u5305\uff1a pip uninstall <package-name> windows\u4e0b\u4e00\u822cPython\u5b89\u88c5\u5230\u4e86 Program Files \u76ee\u5f55\u4e2d\u7684\u8bdd\uff0c\u5b89\u88c5\u7b2c\u4e09\u65b9\u5e93\u65f6\u4f1a\u6ca1\u6743\u9650\u5199\u5165\uff0c\u8f6c\u800c\u5b89\u88c5\u5230 Users\\user\\AppData\\Roaming\\Python\\Python39\\site-packages \u4e0b\u3002 import sys \uff0c sys.path \u4e0b\u5b58\u653e\u7740\u5305\u7684\u641c\u7d22\u76ee\u5f55\uff0c\u5305\u542b\u5b89\u88c5\u76ee\u5f55\u548c\u7528\u6237\u76ee\u5f55\uff0c\u90fd\u80fd\u641c\u7d22\u5230\u3002\u4e0d\u9700\u8981\u592a\u8fc7\u5173\u5fc3\u3002 \u8981\u6dfb\u52a0\u81ea\u5df1\u7684\u641c\u7d22\u76ee\u5f55\uff1a \u7b2c\u4e00\u79cd sys.path.append(\"your_path\") \u3002\u8fd9\u79cd\u65b9\u6cd5\u662f\u8fd0\u884c\u65f6\u4fee\u6539\uff0c\u8fd0\u884c\u540e\u5931\u6548\u3002 \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u662f\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf PYTHONPATH \uff0c\u8be5\u73af\u5883\u53d8\u91cf\u4e2d\u8def\u5f84\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5230\u6a21\u5757\u641c\u7d22\u8def\u5f84\u4e2d\u3002\u53ea\u9700\u8981\u6dfb\u52a0\u81ea\u5df1\u7684\u641c\u7d22\u8def\u5f84\uff0cPython\u6807\u51c6\u5e93\u548c\u7b2c\u4e09\u65b9\u5e93\u7684\u8def\u5f84\u4e0d\u53d7\u5f71\u54cd\u3002 \u4f7f\u7528Anaconda\uff1a - Anaconda\u81ea\u5e26\u4e86\u5f88\u591apython\u7b2c\u4e09\u65b9\u79d1\u5b66\u8ba1\u7b97\u5e93\u3002\u53ef\u4ee5\u65b9\u4fbf\u5730\u76f4\u63a5\u4f7f\u7528\u3002 - \u5b89\u88c5\u65f6\u5982\u679c\u9009\u62e9\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\u5230path\uff0c\u5c31\u4f1a\u5c06\u7cfb\u7edfpath\u4e2d\u7684Python\u6307\u5411\u81ea\u5df1\u7684Python\uff0c\u5728\u547d\u4ee4\u884c\u4e0b\u5c31\u80fd\u4f7f\u7528\u8fd9\u4e9b\u5e93\u4e86\u3002 \u9762\u5411\u5bf9\u8c61 \u9762\u5411\u5bf9\u8c61\uff1a - Python\u4e2d\uff0c\u6240\u6709\u6570\u636e\u7c7b\u578b\u90fd\u53ef\u4ee5\u89c6\u4f5c\u5bf9\u8c61\u3002\u540c\u6837\u4e5f\u652f\u6301\u81ea\u5b9a\u4e49\u7c7b\u3002 - \u7c7b\u7684\u6570\u636e\u6210\u5458\u5728Python\u4e2d\u79f0\u4e3a\u5c5e\u6027\uff08Property\uff09\uff0c\u6210\u5458\u51fd\u6570\u79f0\u4e3a\u65b9\u6cd5\uff08Method\uff09\u3002 - \u5b9a\u4e49\u7c7b\uff1a class Person(object): def __init__(self, name, age) -> None: super().__init__() self.name = name self.age = age def print(self): print(f\"name: {self.name}, age: {self.age}\") def hello(): print(\"hello\") \u5982\u679c\u6ca1\u6709\u5408\u9002\u7684\u57fa\u7c7b\uff0c\u5c31\u4f7f\u7528 object \u3002 \u62c5\u4efb\u6784\u9020\u65b9\u6cd5\u89d2\u8272\u7684\u662f __init__ \u65b9\u6cd5\u3002 Python\u4e2d\u5b9a\u4e49\u5b9e\u4f8b\u65b9\u6cd5\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e00\u5b9a\u662f self \uff0c\u901a\u8fc7\u5b9e\u4f8b\u8c03\u7528\u65f6\u89e3\u91ca\u5668\u4f1a\u9ed8\u8ba4\u4f20\u5165\u5b9e\u4f8b\u81ea\u8eab\uff0c\u4f46\u5b9a\u4e49\u65f6\u9700\u8981\u663e\u5f0f\u58f0\u660e\u3002 \u5b9a\u4e49\u7c7b\u65b9\u6cd5\u5219\u4e0d\u7528\u4f20\u5165 self \uff0c\u8fd9\u662f\u65f6\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u8c03\u7528\u3002\u4ee5\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5426\u662f self \u533a\u5206\u5b9e\u4f8b\u548c\u7c7b\u65b9\u6cd5\u3002 \u5728\u5b9e\u4f8b\u65b9\u6cd5\u4e2d\u8c03\u7528\u5176\u4ed6\u5b9e\u4f8b\u65b9\u6cd5\u9700\u8981\u901a\u8fc7 self.method() \uff0c\u8c03\u7528\u7c7b\u65b9\u6cd5\u9700\u8981\u901a\u8fc7\u7c7b\u540d ClassName.method() \u3002 \u548c\u9759\u6001\u7c7b\u578b\u8bed\u8a00\u4e0d\u901a\uff0cPython\u5141\u8bb8\u5b9e\u4f8b\u53d8\u91cf\u7ed1\u5b9a\u4efb\u4f55\u6570\u636e\uff0c\u901a\u8fc7 instance.newproperty = val \u5c31\u53ef\u4ee5\u7ed1\u5b9a\u65b0\u5c5e\u6027\u5230\u5b9e\u4f8b\u4e0a\u3002 \u6784\u9020\u65b0\u5b9e\u4f8b\uff1a instance = ClassName(*args) \u3002 \u7c7b\u65b9\u6cd5\u548c\u5b9e\u4f8b\u65b9\u6cd5\u662f\u6709\u533a\u5206\u7684\uff0c\u4e5f\u5c31\u662f\u6709\u6ca1\u6709\u4f20 self \uff0c\u8c03\u7528\u65f6\u4e5f\u80fd\u660e\u786e\u7684\u786e\u5b9a\u3002\u4f46\u662f\u5c5e\u6027\u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u7c7b\u7684\u5c5e\u6027\uff08\u4e5f\u5c31\u76f8\u5f53\u4e8e\u9759\u6001\u5b57\u6bb5\u6216\u9759\u6001\u6570\u636e\u6210\u5458\uff09\u662f\u53ef\u4ee5\u901a\u8fc7\u5b9e\u4f8b\u8bbf\u95ee\u7684\uff0c\u6240\u4ee5\u5343\u4e07\u4e0d\u8981\u5b9a\u4e49\u540c\u540d\u7684\u5b9e\u4f8b\u5c5e\u6027\u548c\u7c7b\u5c5e\u6027\u3002\u5728\u7c7b\u4e2d\u53ef\u4ee5\u901a\u8fc7 self \u6216\u8005\u7c7b\u540d\u8c03\u7528\u533a\u5206\uff0c\u4f46\u5916\u90e8\u8c03\u7528\u65f6\u5c31\u533a\u5206\u4e0d\u4e86\u4e86\uff08\u7528\u5b9e\u4f8b\u53ef\u4ee5\u8c03\uff0c\u4f46\u4e0d\u80fd\u901a\u8fc7\u5b9e\u4f8b\u6539\uff0c\u4e00\u6539\u5176\u5b9e\u5c31\u76f8\u5f53\u4e8e\u5b9a\u4e49\u4e86\u540c\u540d\u5b9e\u4f8b\u5c5e\u6027\u4e86\uff09\u3002 \u5373 \u4e0d\u8981\u5b9a\u4e49\u540c\u540d\u7c7b\u5c5e\u6027/\u65b9\u6cd5\u548c\u5b9e\u4f8b\u5c5e\u6027/\u65b9\u6cd5 \u3002 \u4e00\u822c\u6765\u8bf4\u7ecf\u9a8c\u4e5f\u662f\u4e0d\u8981\u901a\u8fc7\u5b9e\u4f8b\u8c03\u7528\u7c7b\u5c5e\u6027\u3002 \u8bbf\u95ee\u4fee\u9970\uff1a - \u4e0d\u901a\u8fc7\u4efb\u4f55\u4fee\u9970\u7b26\uff0c\u8fd8\u662f\u901a\u8fc7\u53d8\u91cf\u540d\u79f0\uff0c\u5c5e\u6027\u6216\u8005\u65b9\u6cd5\u524d\u6dfb\u52a0 __ \u5c31\u53d8\u6210\u4e86\u79c1\u6709\u7684\uff0c\u53ea\u80fd\u5185\u90e8\u8bbf\u95ee\u3002 - \u5f53\u7136\u540c\u6837\uff0c\u7279\u6b8a\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u524d\u540e\u90fd\u6709 __ \u7684\u65b9\u6cd5\u5916\u90e8\u8fd8\u662f\u53ef\u4ee5\u8bbf\u95ee\u3002 - \u5c01\u88c5\u4f9d\u7136\u53ef\u4ee5\u505a\uff0c\u53ef\u4ee5\u6dfb\u52a0getter\u548csetter\uff0c\u53ef\u4ee5\u5728\u5176\u4e2d\u89c6\u60c5\u51b5\u505a\u4e00\u4e9b\u53c2\u6570\u68c0\u67e5\u548c\u5bb9\u9519\u3002 - \u4e5f\u4f1a\u6709\u5355\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\uff0c\u5916\u90e8\u53ef\u4ee5\u8bbf\u95ee\uff0c\u4f46\u4e00\u822c\u7ea6\u5b9a\u4e3a\u79c1\u6709\u7684\u3002 - \u5176\u5b9e\u5e76\u4e0d\u662f\u4e0d\u53ef\u8bbf\u95ee\uff0c\u53ea\u662f\u53cc\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u505a\u4e86\u4fee\u9970\uff0c __attr \u88ab\u4fee\u9970\u6210\u4e86 _ClassName__attr \uff0c\u5176\u5b9e\u4f9d\u65e7\u53ef\u4ee5\u8bbf\u95ee\u3002\u8131\u88e4\u5b50\u653e\u5c41\u6709\u4e00\u5957\uff0c\u7b80\u5355\u7c97\u66b4\uff0c\u80fd\u7528\u5c31\u884c\u3002\u6bd5\u7adf\u4ee3\u7801\u662f\u6b7b\u7684\u4eba\u662f\u6d3b\u7684\u3002\u8fd9\u7b97\u662fCPython\u89e3\u91ca\u5668\u7279\u6027\uff0c\u6240\u4ee5\u4e0d\u5efa\u8bae\u8fd9\u4e48\u5e72\uff0c\u4e0d\u540c\u89e3\u91ca\u5668\u89c4\u5219\u53ef\u80fd\u4e0d\u540c\u3002 - \u5982\u679c\u5728\u5916\u90e8\u8bbe\u7f6e\u79c1\u6709\u53d8\u91cf\u662f\u53ef\u4ee5\u6210\u529f\u7684\uff0c\u4f46\u548c\u60f3\u8bbe\u7f6e\u7684\u90a3\u4e00\u4e2a\u4e0d\u662f\u4e00\u4e2a\u53d8\u91cf\u4e86\uff0c\u6bd5\u7adf\u5185\u90e8\u7684\u5df2\u7ecf\u505a\u4e86\u540d\u79f0\u4fee\u9970\u3002\u6bd4\u5982 p.__name = \"lisa\" \u5176\u5b9e\u662f\u65b0\u52a0\u4e86\u4e00\u4e2a\u53d8\u91cf\u3002 \u7ee7\u627f\u4e0e\u591a\u6001\uff1a - class ClassName(baseClass): - \u5b50\u7c7b\u4f1a\u7ee7\u627f\u7236\u7c7b\u7684\u5168\u90e8\u5b9e\u4f8b\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 - \u5b50\u7c7b\u4e2d\u4e0d\u80fd\u8bbf\u95ee\u7236\u7c7b\u7684\u79c1\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u56e0\u4e3a\u7ecf\u8fc7\u4e86\u540d\u79f0\u4fee\u9970\u4e4b\u540e\u5b50\u7c7b\u4e2d\u518d\u53bb\u8bbf\u95ee\u540c\u540d\u5c5e\u6027\u7ecf\u8fc7\u4fee\u9970\u540e\u548c\u57fa\u7c7b\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u4f1a\u76f8\u5f53\u4e8e\u5728\u5b50\u7c7b\u4e2d\u65b0\u589e\u4e86\u540c\u540d\u5c5e\u6027\uff0c\u800c\u4e0d\u4f1a\u8bbf\u95ee\u5230\u57fa\u7c7b\u7684\u90a3\u4e00\u4e2a\u3002 - \u5b50\u7c7b\u7236\u7c7b\u5b58\u5728\u76f8\u540c\u65b9\u6cd5\u65f6\uff0c\u5b50\u7c7b\u7684\u8986\u76d6\u7236\u7c7b\u7684\u3002 - \u6240\u6709\u7c7b\u578b\u6700\u7ec8\u90fd\u6709\u5171\u540c\u57fa\u7c7b object \uff0c\u4e0d\u5199\u57fa\u7c7b\u9ed8\u8ba4\u5c31\u662f object \u3002 print(isinstance(1, object)) # True print(isinstance(None, object)) # True print(isinstance(\"hello\", object)) # True print(isinstance(True, object)) # True \u7c7b\u65b9\u6cd5\uff08\u4e5f\u5c31\u662f\u5176\u4ed6\u8bed\u8a00\u4e2d\u6240\u8bf4\u7684\u9759\u6001\u65b9\u6cd5\uff09\u4e0d\u4f1a\u7ee7\u627f\uff0c\u53ea\u80fd\u901a\u8fc7\u81ea\u5df1\u7684\u7c7b\u540d\u8bbf\u95ee\u3002 \u9e2d\u5b50\u7c7b\u578b\uff1a - \u52a8\u6001\u8bed\u8a00\u662f\u9e2d\u5b50\u7c7b\u578b\u7684\uff0c\u5c31\u51b3\u5b9a\u4e86\u5b9e\u73b0\u591a\u6001\u4e0d\u5fc5\u50cf\u9759\u6001\u7c7b\u578b\u4e00\u6837\u5fc5\u987b\u7ee7\u627f\uff0c\u53ea\u8981\u5b9e\u73b0\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u89c6\u4e3a\u5b9e\u73b0\u4e86\u591a\u6001\u3002 \u5bf9\u8c61\u4fe1\u606f\uff1a - \u7c7b\u578b\uff1a type(obj) \uff0c\u5f97\u5230\u7684 type \u7c7b\u578b\u5bf9\u8c61\u3002 - \u53ef\u4ee5\u7406\u89e3 int str bytes \u7b49\u7c7b\u578b\u90fd\u662f\u8fd9\u4e2a type \u7c7b\u578b\u5b9e\u4f8b\u3002\u6240\u4ee5\u5185\u7f6e\u7c7b\u578b\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837\u5224\u65ad\u7c7b\u578b type(1) == int - \u51fd\u6570\u5219\u53ef\u4ee5\u4f7f\u7528 types \u4e2d\u5b9a\u4e49\u7684\u5e38\u91cf\uff1a def f(): pass # all True print(type(1) == int) print(type(type) == type) print(type(object) == type) print(type(int) == type) print(type(f) == types.FunctionType) print(type(abs) == types.BuiltinFunctionType) print(type(x for x in range(100)) == types.GeneratorType) print(type([].append) == types.BuiltinMethodType) print(type(lambda x : x) == types.LambdaType) type \u662f\u786e\u5b9a\u5bf9\u8c61\u7684\u4e25\u683c\u7c7b\u578b\uff0c isinstance \u5219\u662f\u53ef\u4ee5\u5339\u914d\u5bf9\u8c61\u7c7b\u578b\u6216\u8005\u5176\u57fa\u7c7b\u7c7b\u578b\u3002 isinstance \u7b2c\u4e8c\u4e2a\u53c2\u6570\u53ef\u4ee5\u662f\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u662f\u7c7b\u578b\u5143\u7ec4\uff0c\u7528\u4e8e\u5339\u914d\u591a\u4e2a\u7c7b\u578b\uff0c\u53ea\u6709\u6709\u4e00\u4e2a\u5339\u914d\uff0c\u5c31\u8fd4\u56de True \u3002 \u4e00\u822c\u6765\u8bf4\u4e3a\u4e86\u652f\u6301\u591a\u6001\u603b\u662f\u4f18\u5148\u4f7f\u7528 isinstance \u3002 \u83b7\u53d6\u4e00\u4e2a\u5bf9\u8c61\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\uff1a dir(obj) \uff0c\u5f97\u5230\u4e00\u4e2a\u5217\u8868\u3002 \u524d\u540e\u53cc\u4e0b\u5212\u7ebf\u7684\u7279\u6b8a\u65b9\u6cd5\u90fd\u662f\u6709\u7528\u9014\u7684\uff0c\u6bd4\u5982 __len__ \u65b9\u6cd5\uff0c\u5c31\u7528\u4e8e\u5185\u5efa\u7684 len \u51fd\u6570\uff0c len \u51fd\u6570\u5b9e\u9645\u4e0a\u5c31\u662f\u8c03\u7528 __len__ \u65b9\u6cd5\u3002\u53ea\u8981\u5b9e\u73b0\u4e86 __len__ \u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u7528\u4e8e len \u51fd\u6570\u3002 \u9664\u4e86\u5217\u51fa\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u914d\u5408 getattr() \u3001 setattr() \u4ee5\u53ca hasattr() \uff0c\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u4e00\u4e2a\u5bf9\u8c61\u7684\u72b6\u6001\u3002 # dir, getattr(), setattr(), hasattr() class Person(): def __init__(self, name) -> None: self.name = name def sayHi(self): print(f\"hi, {self.name}\") def sayHello(): print(\"hello\") p = Person(\"Adam\") print(dir(p)) print(hasattr(p, \"name\")) setattr(p, \"age\", 10) print(p.age) print(getattr(p, \"age\")) print(getattr(p, \"nonexist\", \"default value\")) f = getattr(Person, \"sayHello\") f() print(f) # <function Person.sayHello at 0x0000023E6318C670> f = getattr(p, \"sayHi\") f() print(f) # <bound method Person.sayHi of <__main__.Person object at 0x000001AC29507E50>> \u4e5f\u53ef\u4ee5\u83b7\u53d6\u65b9\u6cd5\uff0c\u83b7\u53d6\u5230\u540e\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b9e\u4f8b\u65b9\u6cd5\u5c31\u901a\u8fc7\u5bf9\u8c61\u83b7\u53d6\uff0c\u76f8\u5f53\u4e8e\u7b2c\u4e00\u4e2a\u53c2\u6570\u5df2\u7ecf\u4f20\u9012\u3002\u800c\u7c7b\u65b9\u6cd5\uff0c\u5c31\u901a\u8fc7\u7c7b\u540d\uff08\u5176\u5b9e\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff09\u6765\u83b7\u53d6\u3002 \u901a\u8fc7\u5185\u7f6e\u51fd\u6570\uff0c\u53ef\u4ee5\u5bf9Python\u5bf9\u8c61\u8fdb\u884c\u5256\u6790\uff0c\u62ff\u5230\u5bf9\u8c61\u4fe1\u606f\uff0c\u4e00\u822c\u53ea\u6709\u4e0d\u77e5\u9053\u5bf9\u8c61\u4fe1\u606f\u65f6\u624d\u8fd9\u6837\u505a\u3002 \u52a8\u6001\u7ed1\u5b9a\u5c5e\u6027\uff1a - \u52a8\u6001\u7c7b\u578b\u5177\u6709\u9759\u6001\u7c7b\u578b\u4e0d\u5177\u6709\u7684\u7075\u6d3b\u6027\uff0c\u4f8b\u5982\u52a8\u6001\u7ed9\u5bf9\u8c61\u6216\u8005\u7c7b\u6dfb\u52a0\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 class Person: def __init__(self, *args, **kwargs) -> None: self.age = kwargs.pop(\"age\") def setAge(self, age): self.age = age def getAge(self): return self.age # bind to a single Person object p = Person(age = 20) p.setAge = MethodType(setAge, p) p.getAge = MethodType(getAge, p) p.setAge(10) print(p.age) # 10 print(p.getAge()) # 10 # bind to Person class (instance of type class) Person.setAge = MethodType(setAge, Person) Person.getAge = MethodType(getAge, Person) Person.setAge(18) print(Person.getAge()) # 18 print(Person.age) # 18 # bind instance method to class, just assignment Person.setAge = setAge p = Person(age = 10) p.setAge(100) print(p.age) # 100 print(p.getAge()) # 18, Person has no instance method call getAge(), so will call Person.getAge() -> 18 Person.getAge = getAge print(p.getAge()) # 100 \u6ce8\u610f\u5c31\u7b97\u5b9a\u4e49\u4e86 self \uff0c MethodType \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u6dfb\u52a0\u65b9\u6cd5\u7684\u5b9e\u4f8b\uff0c\u6240\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u7ed1\u5b9a\u65b9\u6cd5\u5230\u7c7b\u5176\u5b9e\u662f\u6210\u4e3a\u7c7b\u65b9\u6cd5\u800c\u4e0d\u662f\u6210\u4e3a\u5b9e\u4f8b\u65b9\u6cd5\u3002\u3010Python\u4e2d\u7c7b\u4e5f\u662f\u5bf9\u8c61( type \u7c7b\u7684\u5b9e\u4f8b)\uff01\uff01\uff01\u3011 \u8981\u7ed1\u5b9a\u7c7b\u7684\u5b9e\u4f8b\u65b9\u6cd5\u5230\u7c7b\u4e0a\uff0c\u76f4\u63a5\u8d4b\u503c\u5c31\u53ef\u4ee5\u641e\u5b9a\uff01 \u603b\u7ed3\uff1a \u901a\u8fc7 MethodType \u7ed1\u5b9a\uff0c \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f5c\u4e3a self \u88ab\u4f20\u5165\u65b9\u6cd5 \uff0c\u65b9\u6cd5\u5fc5\u987b\u6709 self \u53c2\u6570\u3002 \u901a\u8fc7\u8d4b\u503c\u7ed1\u5b9a\u7684\u4e0d\u4f1a\u4f20\u5165\u4e00\u4e2a\u9ed8\u8ba4\u7684 self \u3002 \u901a\u8fc7\u8d4b\u503c\u76f4\u63a5\u7ed1\u5b9a\u5230\u7c7b\u4e0a\u5c31\u548c\u76f4\u63a5\u5b9a\u4e49\u5728\u7c7b\u91cc\u9762\u6ca1\u6709\u533a\u522b\uff0c\u7ed1\u5b9a\u5230\u7c7b\u4e0a\u901a\u8fc7\u5b9e\u4f8b\u8c03\u7528\u5219\u4f1a\u5c06\u5b9e\u4f8b\u4f5c\u4e3a self \u4f20\u5165\u3002 \u901a\u8fc7\u8d4b\u503c\u7ed1\u5b9a\u5230\u5bf9\u8c61\u4e0a\u4e5f\u53ef\u4ee5\uff0c\u4e0d\u80fd\u6709 self \u53c2\u6570\u3002 MethodType \u7684\u7ed3\u679c\u7ed9\u4eba\u611f\u89c9\u5c31\u50cf\u662f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u504f\u51fd\u6570(\u7c7b\u578b\u672c\u8eab\u6253\u5370\u51fa\u6765\u5e76\u4e0d\u662f)\uff0c\u7136\u540e\u6307\u5b9a\u4e86 self \u53c2\u6570\u3002 \u7c7b\u65b9\u6cd5\u548c\u5b9e\u4f8b\u65b9\u6cd5\u5e76\u4e0d\u50cf\u5176\u4ed6\u8bed\u8a00\u533a\u5206\u90a3\u4e48\u4e25\u683c\uff08\u6216\u8bb8\u5c31\u4e0d\u8be5\u8fd9\u4e48\u533a\u5206\uff09\uff1a\u901a\u8fc7\u5b9e\u4f8b\u8c03\u7528\u4f1a\u9690\u5f0f\u4f20 self \uff0c\u540c\u65f6\u901a\u8fc7\u7c7b\u4e5f\u53ef\u4ee5\u8c03\u7528\uff0c\u53ea\u8981\u628a\u5b9e\u4f8b\u653e\u5728 self \u4f4d\u7f6e\uff0c\u6548\u679c\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002 class Student(object): __slots__ = (\"name\", \"age\", \"getName\") def getAge(self): return self.age s = Student() s.age = 10 f = s.getAge print(f) # <bound method Student.getAge of <__main__.Student object at 0x000001993E72F800>> print(Student.getAge) # <function Student.getAge at 0x000001A601B2CAF0> print(f()) # 10 print(Student.getAge(s)) # 10 \u9700\u8981\u5206\u6e05\u695a\u7ed1\u5b9a\u65b9\u6cd5\u548c\u51fd\u6570\uff1a MethodType \u8fd4\u56de\u7684\u7ed3\u679c\u5c31\u662f\u4e00\u4e2a\u7ed1\u5b9a\u65b9\u6cd5\uff0c\u901a\u8fc7\u5bf9\u8c61\u8c03\u7528\u7684\u5b9e\u4f8b\u65b9\u6cd5\u4e5f\u662f\u4e00\u4e2a\u7ed1\u5b9a\u65b9\u6cd5\u3002 \u4f7f\u7528 __slots__ \uff1a - \u52a8\u6001\u6dfb\u52a0\u5c5e\u6027\u5f88\u65b9\u4fbf\u4e5f\u53ef\u80fd\u88ab\u6ee5\u7528\uff0cPython\u4e2d\u5141\u8bb8\u9650\u5236\u5b9e\u4f8b\u7684\u5c5e\u6027\uff0c\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e2a\u7279\u6b8a\u7684 __slots__ \u53d8\u91cf\uff0c\u9650\u5236\u80fd\u6dfb\u52a0\u7684\u5c5e\u6027\u3002 class Student: __slots__ = (\"name\", \"age\") s = Student() s.age = 10 s.name = \"Adam\" # s.grade = 4.0 # AttributeError \u6b64\u65f6\u518d\u6dfb\u52a0\u5176\u4ed6\u5c5e\u6027\uff0c\u5c31\u4f1a\u5931\u8d25\u3002\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u770b\u505a\u51fd\u6570\u7c7b\u578b\u7684\u5c5e\u6027\uff0c\u6240\u4ee5\u6dfb\u52a0\u540c\u6837\u4f1a\u5931\u8d25\u3002 __slots__ \u5b9a\u4e49\u7684\u5c5e\u6027\u4ec5\u5bf9\u5f53\u524d\u7c7b\u5b9e\u4f8b\u7684\u5c5e\u6027\u8d77\u9650\u5236\u4f5c\u7528\uff0c\u5bf9\u7ee7\u627f\u5b50\u7c7b\u5b9e\u4f8b\u548c\u7c7b\u672c\u8eab\u5c5e\u6027\u4e0d\u8d77\u4f5c\u7528\u3002\u5982\u679c\u7ee7\u627f\u7684\u5b50\u7c7b\u4e2d\u4f7f\u7528 __slots__ \uff0c\u90a3\u4e48\u80fd\u7528\u7684\u5c5e\u6027\u5c31\u662f\u81ea\u8eab\u52a0\u4e0a\u7236\u7c7b\u7684\u3002 \u5982\u679c\u7236\u7c7b\u4e0d\u9650\u5236\uff0c\u4ec5\u5b50\u7c7b\u9650\u5236\uff0c\u90a3\u4e48\u5b50\u7c7b\u5b9e\u4f8b\u4e5f\u662f\u53ef\u4ee5\u7ed1\u5b9a\u65b0\u5c5e\u6027\u7684\u3002\u3010\u8fd9\u786e\u5b9e\u6709\u70b9\u8ba9\u4eba\u8ff7\u60d1\uff01\u3011 \u4e5f\u5c31\u662f\u8bf4\u8981\u9650\u5236\u5c5e\u6027\u5fc5\u987b\u8981\u7ee7\u627f\u94fe\u6761\u4e0a\u6240\u6709\u7c7b\u90fd\u6709 __slots__ \u624d\u884c\u3002 @property \uff1a - \u76f4\u63a5\u66b4\u9732\u5c5e\u6027\u7b80\u5355\u4f46\u662f\u5982\u679c\u8981\u505a\u53c2\u6570\u6709\u6548\u6027\u68c0\u67e5\u5c31\u9ebb\u70e6\u4e86\uff0c\u8bbe\u7f6e\u4e3a\u79c1\u6709\u5e76\u6dfb\u52a0\u5bf9\u5e94\u7684getter\u548csetter\u4e5f\u53ef\u4ee5\u4e0d\u8fc7\u8c03\u7528\u8d77\u6765\u5c31\u6709\u70b9\u7e41\u7410\u4e86\u3002 - \u901a\u8fc7Python\u5185\u7f6e\u7684 @property \u88c5\u9970\u5668\u53ef\u4ee5\u628a\u4e00\u4e2agetter\u65b9\u6cd5\u53d8\u6210\u5c5e\u6027\u8c03\u7528\uff0c\u7136\u540e\u672c\u8eab\u53c8\u4f1a\u521b\u5efa\u53e6\u4e00\u4e2a\u88c5\u9970\u5668 @attr.setter \u6dfb\u52a0\u5230 setter \u4e0a\u5c31\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5c5e\u6027\u5f62\u5f0f\u8f6c\u8c03\u65b9\u6cd5\u5b9e\u73b0\u8bfb\u5199\u3002 class Person: __slots__ = (\"_age\") @property def age(self): return self._age @age.setter def age(self, value): if not isinstance(value, int): raise ValueError(\"age must be a integer!\") if value < 0: raise ValueError(\"age must non-negative!\") self._age = value p = Person() p.age = 10 print(p.age) p.age = \"18\" # ValueError: age must be a integer! \u53ea\u5b9a\u4e49getter\u4e0d\u5b9a\u4e49setter\u5c31\u662f\u53ea\u8bfb\u5c5e\u6027\u3002 \u5c5e\u6027\u7684\u65b9\u6cd5\u4e0d\u8981\u548c\u5b9e\u4f8b\u53d8\u91cf\u91cd\u540d\uff0c\u5b9e\u4f8b\u53d8\u91cf\u6700\u597d\u4f7f\u7528 _ \u5f00\u5934\u7684\u79c1\u6709\u8bbf\u95ee\u3002 \u591a\u7ee7\u627f/Mixin\uff1a - class ClassName(BaseClass1, BaseClass2, ...) - \u57fa\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u5982\u679c\u591a\u4e2a\u7c7b\u6709\u540c\u4e00\u4e2a\u65b9\u6cd5\uff0c\u90a3\u4e48\u7ee7\u627f\u987a\u5e8f\u6309\u7167\u987a\u4f4d\u8c03\u7528\u7b2c\u4e00\u4e2a\u3002 - \u591a\u7ee7\u627f\u4e5f\u53eb\u6df7\u5165\uff0c\u4e0d\u540c\u8bed\u8a00\u6709\u4e0d\u540c\u8bed\u8a00\u7684\u53eb\u6cd5\u3002 - __mro__ \u7279\u6b8a\u53d8\u91cf\u662f\u57fa\u7c7b\u7684\u5143\u7ec4\uff0c\u4e00\u4e2a\u5b9e\u4f8b\u7684\u65b9\u6cd5\u89e3\u6790\u671f\u95f4\u57fa\u4e8e\u6b64\u6765\u67e5\u627e\u57fa\u7c7b\u3002 - \u5df2\u77e5 __mro__ \uff0c\u5728\u4f7f\u7528 super \u65f6\u53ef\u4ee5\u5728\u7c7b\u5b9a\u4e49\u4e2d\u8c03\u7528\u57fa\u7c7b\u65b9\u6cd5\u7684\u60c5\u5f62\u4e2d\u4ece __mro__ \u5143\u7ec4\u4e2d\u7684\u7279\u5b9a\u4f4d\u7f6e\u5f00\u59cb\u67e5\u627e\u3002 # -*- coding: utf-8 -*- class A(object): def foo(self): print('A foo') def bar(self): print('A bar') class B(object): def foo(self): print('B foo') def bar(self): print('B bar') class C1(A, B): pass class C2(A, B): def bar(self): print('C2-bar') class D(C1, C2): pass if __name__ == '__main__': print(D.__mro__) # (<class '__main__.D'>, <class '__main__.C1'>, <class '__main__.C2'>, <class '__main__.A'>, <class '__main__.B'>, <class 'object'>) d = D() d.foo() # A foo d.bar() # C2-bar \u83f1\u5f62\u7ee7\u627f\u4e0d\u4f1a\u6709\u591a\u4efd\u6570\u636e\uff0c\u6700\u7ec8\u90fd\u662f\u901a\u8fc7 __mro__ \u4e2d\u7684\u67e5\u627e\u987a\u5e8f\u6765\u786e\u5b9a\u7684\u3002 \u5b9a\u5236\u7c7b\uff1a - \u901a\u8fc7\u5b9a\u4e49\u7279\u6b8a\u53d8\u91cf\u548c\u65b9\u6cd5\u53ef\u4ee5\u5b9a\u5236\u7279\u5b9a\u7684\u529f\u80fd\u3002 - __xxx__ \u7279\u6b8a\u53d8\u91cf\u7684\u7528\u9014\uff1a - __slots__ - __len__() \u7528\u4e8e len \u51fd\u6570\u3002 - __str__() \u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u8c03\u7528 print \u6253\u5370\u5bf9\u8c61\u65f6\u4f1a\u6253\u5370\u8fd9\u4e2a\u5b57\u7b26\u4e32\u3002 - __repr__() \u4e3a\u8c03\u8bd5\u670d\u52a1\uff0cpython\u4ea4\u4e92\u73af\u5883\u4e2d\u8f93\u5165\u53d8\u91cf\u6253\u5370\u51fa\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\uff0c\u901a\u5e38 __repr__ \u548c __str__ \u662f\u4e00\u6837\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5 __repr__ = __str__ \u3002 - __iter__() \u8fd4\u56de\u8fed\u4ee3\u5668( Iterator )\uff0c\u8981\u5728 for in \u5faa\u73af\u4e2d\u4f7f\u7528\u5fc5\u987b\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\uff0c for \u5faa\u73af\u62ff\u5230\u8fed\u4ee3\u5668\u540e\u4f1a\u8c03\u7528\u5668 __next__() \u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u76f4\u5230 StopIteration \u3002 collections.abc.Iterable \u662f\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u65b9\u6cd5\u7684\u62bd\u8c61\u57fa\u7c7b\u3002 iter(obj) \u5185\u7f6e\u51fd\u6570\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002 - __next__() \u8fd4\u56de\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c Iterator \u7c7b\u578b\u662f\u63d0\u4f9b\u4e86 __iter__() \u548c __next__() \u7684\u62bd\u8c61\u57fa\u7c7b\u3002 next(obj) \u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002 - __getitem__() \u7528\u4e8e\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee [] \uff0c\u53ef\u80fd\u4f20\u5165\u6574\u6570\u4e0b\u6807\uff0c\u53ef\u80fd\u4f20\u5165\u5207\u7247\u5bf9\u8c61\uff08 slice \uff09\uff0c\u6bd4\u5982\u5bf9\u4e8e dict \uff0c\u53ef\u80fd\u4f20\u5165\u7684\u662f\u4e00\u4e2a\u4f5c\u4e3akey\u7684\u5bf9\u8c61\u3002\u89c6\u652f\u6301\u60c5\u51b5\u5b9e\u73b0\u3002 - __setitem__() \u901a\u8fc7\u4e0b\u6807\u8bbe\u7f6e\u5143\u7d20 [] \u3002 - __delitem__() \u5220\u9664\u5143\u7d20\u3002 - __getattr__() \u52a8\u6001\u8fd4\u56de\u5c5e\u6027\uff0c\u53ea\u6709\u7c7b\u4e2d\u6ca1\u6709\u7684\u624d\u4f1a\u5c1d\u8bd5\u901a\u8fc7\u8fd9\u4e2a\u65b9\u6cd5\u83b7\u53d6\uff0c\u7c7b\u4f3c\u4e8e method_missing() \u7684\u529f\u80fd\u3002 - __call__() \u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u53ef\u4ee5\u6709\u81ea\u5df1\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5b9a\u4e49 __call__() \u4e4b\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u5bf9\u5b9e\u4f8b\u8fdb\u884c\u8c03\u7528\uff0c\u53ef\u4ee5\u7c7b\u6bd4\u4e3aC++\u4e2d\u7684\u51fd\u6570\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6709\u53c2\u6570\u3002\u8fd9\u6837\u5176\u5b9e\u51fd\u6570\u548c\u5bf9\u8c61\u7684\u8fb9\u754c\u5c31\u5f88\u6a21\u7cca\u4e86\u3002 callable(obj) \u4f1a\u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u53ef\u8c03\u7528\u3002\u6bd4\u5982\u5176\u5b9e\u81ea\u5b9a\u4e49\u7c7b\u4e5f\u662f\u4e00\u4e2a type \u7684\u5bf9\u8c61\uff0c\u521b\u5efa\u65f6\u8c03\u7528 className() \u5176\u5b9e\u5c31\u662f\u8c03\u7528\u4e86 type \u7684 __call__() \u7136\u540e\u53ef\u80fd\u662f\u8f6c\u8c03\u4e86\u81ea\u5b9a\u4e49\u7c7b\u7684 __init__ \u3002 - \u6bcf\u79cd\u5185\u7f6e\u7c7b\u578b\u90fd\u4f1a\u5b9a\u4e49\u5f88\u591a\u7684\u7279\u6b8a\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u901a\u8fc7\u5b9e\u73b0\u540c\u6837\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u6a21\u62df\u8fd9\u4e9b\u884c\u4e3a\uff0c\u751a\u81f3\u4e0d\u9700\u8981\u53bb\u7ee7\u627f\u62bd\u8c61\u7c7b\uff0c\u56e0\u4e3aPython\u662f\u9e2d\u5b50\u7c7b\u578b\u7684\uff0c\u4f9d\u8d56\u65b9\u6cd5\u800c\u4e0d\u4f9d\u8d56\u63a5\u53e3\u3002 - \u5f88\u591a\u5185\u7f6e\u51fd\u6570\u90fd\u662f\u4f9d\u8d56\u4e8e\u7279\u6b8a\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\uff0c\u5c06\u6240\u6709 \u7279\u6b8a\u5c5e\u6027\u3001\u65b9\u6cd5 \u548c \u5185\u7f6e\u51fd\u6570 \u90fd\u7406\u89e3\u4e00\u904d\u662f\u6709\u5fc5\u8981\u7684\u3002 \u679a\u4e3e\u7c7b\uff1a from enum import Enum WeekDay = Enum('WeekDay', ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')) \u66f4\u7cbe\u786e\u7684\u63a7\u5236\u53ef\u4ee5\u6d3e\u751f Enum \uff1a @unique \u88c5\u9970\u5668\u68c0\u67e5\u6ca1\u6709\u91cd\u590d\u503c\u3002 @unique class WeekD(Enum): Sun = 0 Mon = 1 Tue = 2 Wed = 3 Thu = 4 Fri = 5 Sat = 6 print(WeekD) # <enum 'WeekD'> print(WeekD.Sun) print(WeekD[\"Tue\"]) print(WeekD(1)) print(WeekD.Fri.value) for name, member in WeekD.__members__.items(): print(name, \"->\", member) \u8bbf\u95ee\uff1a EnumClassName.member EnumClassName[\"membername\"] EnumClass(valueofenum) \u4ece\u5e38\u91cf\u6784\u5efa\u679a\u4e3e\u503c\u3002 EnumClass.__members__ \u83b7\u53d6\u679a\u4e3e\u540d\u5230\u679a\u4e3e\u5e38\u91cf\u7684\u5b57\u5178\u3002 EnumClass.member.value \u679a\u4e3e\u5e38\u91cf\u7684\u503c\u3002 type \uff1a - \u52a8\u6001\u8bed\u8a00\u548c\u9759\u6001\u8bed\u8a00\u6700\u5927\u7684\u4e0d\u540c\uff0c\u5c31\u662f\u51fd\u6570\u548c\u7c7b\u7684\u5b9a\u4e49\uff0c\u4e0d\u662f\u7f16\u8bd1\u65f6\u5b9a\u4e49\u7684\uff0c\u800c\u662f\u8fd0\u884c\u65f6\u52a8\u6001\u521b\u5efa\u7684\u3002 - \u5f53Python\u89e3\u91ca\u5668\u8f7d\u5165\u4e00\u4e2a\u6a21\u5757\u65f6\uff0c\u5c31\u4f1a\u4f9d\u6b21\u6267\u884c\u8be5\u6a21\u5757\u7684\u6240\u6709\u8bed\u53e5\uff0c\u6267\u884c\u7ed3\u679c\u5c31\u662f\u52a8\u6001\u521b\u5efa\u51fa\u4e00\u4e2a\u5176\u4e2d\u7c7b\u7684class\u5bf9\u8c61\u3002 - type \u51fd\u6570\u67e5\u770b\u4e00\u4e2a\u7c7b\u578b\u6216\u8005\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u7528\u7c7b\u540d\u8868\u793a\u7684\u90a3\u4e2a type \u7c7b\u578b\u5b9e\u4f8b\u3002\u4f20\u5165\u7c7b\u540d\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f type \uff0c\u81ea\u5b9a\u4e49\u7684\u7c7b\u5176\u5b9e\u5c31\u662f type \u7c7b\u578b\u7684\u5b9e\u4f8b\u3002 - type \u51fd\u6570\u8fd8\u53ef\u4ee5\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\u3002\u4f9d\u6b21\u4f20\u5165\uff1a - \u7c7b\u540d\u3002 - \u7ee7\u627f\u7236\u7c7b\u7684\u5143\u7ec4\u3002 - \u65b9\u6cd5\u540d\u79f0\u4e0e\u51fd\u6570\u7ed1\u5b9a\u7684\u5b57\u5178\u3002 def fn(self, name = \"world\"): print(f\"hello, {name}!\") Hello = type(\"Hello\", (object, ), dict(hello = fn)) h = Hello() h.hello() print(type(h)) # <class '__main__.Hello'> print(Hello) # <class '__main__.Hello'> \u901a\u8fc7 type \u521b\u5efa\u7c7b\u76f4\u63a5\u901a\u8fc7 calss \u5173\u952e\u5b57\u521b\u5efa\u65f6\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u4e5f\u975e\u5e38\u7b80\u5355\u3002\u800c\u5728\u9759\u6001\u8bed\u8a00\u4e2d\u521b\u5efa\u7c7b\u5fc5\u987b\u901a\u8fc7\u5404\u79cd\u65b9\u5f0f\u52a8\u6001\u7f16\u8bd1\u624d\u80fd\u505a\u5230\u3002 \u5143\u7c7bmetaclass\uff1a - \u9664\u4e86 type \u8fd8\u53ef\u4ee5\u901a\u8fc7\u5143\u7c7b\u6765\u7ba1\u7406\u7c7b\u7684\u521b\u5efa\u884c\u4e3a\u3002 - \u53ef\u4ee5\u5c06\u7c7b\u7406\u89e3\u4e3a\u5143\u7c7b\u7684\u5b9e\u4f8b\uff0c\u8981\u901a\u8fc7\u5143\u7c7b\u6765\u521b\u5efa\u7c7b\uff0c\u5c31\u9700\u8981\u5148\u5b9a\u4e49\u5143\u7c7b\u3002\u53ef\u4ee5\u901a\u8fc7\u5143\u7c7b\u6765\u521b\u5efa\u6216\u8005\u4fee\u6539\u7c7b\u3002 - \u5143\u7c7b\u662fPython\u9762\u5411\u5bf9\u8c61\u4e2d\u6700\u96be\u7406\u89e3\u3001\u6700\u96be\u4f7f\u7528\u7684\u9b54\u6cd5\u4ee3\u7801\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u78b0\u5230\u3002 - \u5143\u7c7b\u662f\u7c7b\u7684\u6a21\u677f\uff0c\u6240\u4ee5\u9700\u8981\u4ece type \u6d3e\u751f\u3002 # create class dynamically using metaclass # first define metaclass, derived from type class ListMetaClass(type): def __new__(cls, name, bases, attrs): attrs['add'] = lambda self, value: self.append(value) return type.__new__(cls, name, bases, attrs) # create class using metaclass class MyList(list, metaclass = ListMetaClass): pass print(MyList) # <class '__main__.MyList'> print(type(MyList)) # <class '__main__.ListMetaClass'> # create instance using calss l = MyList() l.add(10) l.add(100) print(l) # [10, 100] \u5b9a\u4e49\u7c7b\u65f6\u4f20\u5165 metaclass \u5173\u952e\u5b57\u53c2\u6570\u5373\u53ef\u4f7f\u7528\u5143\u7c7b\u3002 \u6b64\u65f6\u521b\u5efa\u51fa\u7684 MyList \u7c7b\uff08\u5bf9\u8c61\uff09\u7684\u7c7b\u578b\u4e0d\u518d\u662f type \uff0c\u800c\u662f\u81ea\u5b9a\u4e49\u7684\u4ece type \u6d3e\u751f\u7684\u5143\u7c7b\uff0c\u5728\u5176\u4e2d\u91cd\u5199 __new__ \u5e76\u6dfb\u52a0\u65b9\u6cd5\uff0c\u8c03\u7528 __type__ \u7684 __new__ \u5e76\u4e14\u6dfb\u52a0\u4e86\u81ea\u5b9a\u4e49\u7684 add \u65b9\u6cd5\u3002 __new__ \u63a5\u6536\u53c2\u6570\uff1a \u5f53\u524d\u51c6\u5907\u521b\u5efa\u7684\u7c7b\u5bf9\u8c61\u3002 \u7c7b\u540d\u5b57\u3002 \u7c7b\u7236\u7c7b\u96c6\u5408\u3002 \u7c7b\u65b9\u6cd5\u96c6\u5408\u3002 \u6700\u7ec8 MyList \u662f list \u5b50\u7c7b\uff0c\u540c\u65f6\u7c7b\u578b\u662f ListMetaClass \uff08 type \u5b50\u7c7b\uff09\u3002 \u90a3\u4e48\u53ef\u4ee5\u7406\u89e3\u4e3a type \u5c31\u662f\u4e00\u4e2a\u5143\u7c7b\uff0c\u5e76\u4e14\u5e94\u8be5\u4f5c\u4e3a\u81ea\u5b9a\u4e49\u5143\u7c7b\u7684\u57fa\u7c7b\u3002\u6709\u4e00\u70b9\u70b9\u62bd\u8c61\uff0c\u53ef\u80fd\u9700\u8981\u6df1\u5165\u4e86\u89e3\u4e00\u4e2a\u7c7b\u7684\u5177\u4f53\u521b\u5efa\u8fc7\u7a0b\u624d\u7406\u89e3\u3002 __new__ __init__ \u533a\u522b\u662f\u524d\u8005\u662f\u521b\u5efa\u8fc7\u7a0b\uff0c\u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5b9e\u4f8b\uff0c\u540e\u8005\u662f\u5df2\u7ecf\u521b\u5efa\u597d\u4e86\u540e\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u5b9e\u4f8b\u65b9\u6cd5\uff0c\u6784\u9020\u65f6\u4f7f\u7528\u524d\u8005\u8fd4\u56de\u7684\u5b9e\u4f8b\u8c03\u7528 __init__ \uff0c\u8fd4\u56de None \u3002\u4e24\u8005\u52a0\u8d77\u6765\u662f\u5b9e\u4f8b\u5316\u8fc7\u7a0b\u3002 \u5143\u7c7b\u53ef\u4ee5\u9690\u5f0f\u7ee7\u627f\u5230\u5b50\u7c7b\u4e2d\u3002 \u5143\u7c7b\u4f7f\u7528\u4f8b\u5b50\uff1a - \u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684ORM\uff08Object Relational Mapping\uff0c\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff09\u6846\u67b6\uff0c\u5c06\u6570\u636e\u5e93\u7684\u4e00\u5f20\u8868\u6620\u5c04\u4e3a\u4e00\u4e2a\u7c7b\uff0c\u6bcf\u4e00\u884c\u6620\u5c04\u4e3a\u4e00\u4e2a\u5b9e\u4f8b\u3002\u901a\u8fc7\u5b9a\u4e49\u8c03\u7528\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0 update insert delete \u7b49\u64cd\u4f5c\u3002 - \u4ee3\u7801\u5728Python\u5206\u652f \u603b\u7ed3\uff1a - Python\u9762\u5411\u5bf9\u8c61\u5b9e\u73b0\u76f8\u5f53\u81ea\u7531\u4e0e\u7b80\u5355\uff0c\u4f46\u52a8\u6001\u7c7b\u578b\u7684\u786e\u662f\u8fd9\u6837\u7684\u3002 - \u5199\u60ef\u4e86\u9759\u6001\u7c7b\u578b\u5207\u6362\u8fc7\u6765\u611f\u89c9\u786e\u5b9e\u8bf8\u591a\u9b54\u6cd5\u3002 - \u4e07\u7269\u7686\u5bf9\u8c61\uff0c\u751a\u81f3\u7c7b\u4e5f\u662f\u5bf9\u8c61\uff0c\u51fd\u6570\u4e5f\u662f\u5bf9\u8c61\uff0c\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u88ab\u8c03\u7528\u3002 - \u7279\u6b8a\u5c5e\u6027\u975e\u5e38\u6709\u7528\u975e\u5e38\u9b54\u6cd5\uff0c\u81ea\u7531\u5ea6\u53ef\u80fd\u4e0d\u53ca\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0c\u7a0d\u5fae\u7e41\u7410\u4e86\u4e00\u70b9\uff0c\u4f46\u8c03\u7528\u89c4\u5219\u90fd\u662f\u8bed\u6cd5\u5185\u7f6e\u7684\uff0c\u4e0d\u50cf\u8fd0\u7b97\u7b26\u91cd\u8f7d\u8bfb\u8d77\u6765\u90a3\u4e48\u6478\u4e0d\u7740\u5934\u8111\u3002 - \u8fd8\u9700\u8981\u8fdb\u4e00\u6b65\u6df1\u5165\u3002 \u9519\u8bef\u3001\u8c03\u8bd5\u4e0e\u6d4b\u8bd5 \u5404\u79cd\u5404\u6837\u9519\u8bef\uff1a - \u8f93\u5165\u975e\u6cd5\u3002\u6dfb\u52a0\u68c0\u6d4b\u3002 - \u903b\u8f91\u95ee\u9898\uff0c\u4fee\u6539\u903b\u8f91\u3002 - \u8fd0\u884c\u65f6\u9519\u8bef\uff0c\u6bd4\u5982\u78c1\u76d8\u5199\u6ee1\uff0c\u7f51\u7edc\u8fde\u63a5\u4e2d\u65ad\u7b49\u3002\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u5f02\u5e38\u5904\u7406\u3002 \u5f02\u5e38\u5904\u7406\uff1a - \u53ef\u4ee5\u4f7f\u7528\u9519\u8bef\u4ee3\u7801\u8fd4\u56de\u503c\uff0c\u9700\u8981\u5927\u91cf\u4ee3\u7801\u5224\u8bfb\u662f\u5426\u51fa\u9519\u3002\u6ca1\u6267\u884c\u4e00\u4e2a\u51fd\u6570\u90fd\u8981\u68c0\u67e5\u8fd4\u56de\u503c\u3002 - \u5f02\u5e38\u5904\u7406\uff1a try...except...finally... \uff0c\u5c06\u53ef\u80fd\u51fa\u9519\u7684\u903b\u8f91\u653e\u5728 try \u4e2d\u8fd0\u884c\uff0c\u51fa\u9519\u5219\u4f1a\u8df3\u8f6c\u5230 except \uff0c\u7136\u540e\u6267\u884c finally \uff08finally\u4e2d\u8bed\u53e5\u65e0\u8bba\u662f\u5426\u53d1\u751f\u9519\u8bef\u90fd\u4f1a\u6267\u884c\uff0c\u53ef\u4ee5\u6ca1\u6709 finally \uff09\u3002 - \u53ef\u4ee5\u6709\u591a\u4e2a except \u4f9d\u6b21\u6355\u83b7\u4e0d\u540c\u7c7b\u578b\u7684\u9519\u8bef\uff0c\u76f4\u5230\u6355\u83b7\u5230\u3002\u672a\u6355\u83b7\u5230\u5219\u4f1a\u7ee7\u7eed\u5411\u4e0a\u629b\uff0c\u76f4\u5230\u88abPython\u89e3\u91ca\u5668\u6355\u83b7\uff0c\u6253\u5370\u51fa\u8c03\u7528\u6808\uff0c\u7ed3\u675f\u7a0b\u5e8f\u8fd0\u884c\u3002 - \u6240\u6709\u9519\u8bef\u7684\u57fa\u7c7b BaseException \u3002 - Python\u5185\u7f6e\u7684\u5f02\u5e38\u7684\u6d3e\u751f\u7ed3\u6784\u5c42\u6b21 \u3002 \u8bb0\u5f55\u9519\u8bef\uff1a - \u4f7f\u7528 logging \u6a21\u5757\uff0c\u6355\u83b7\u9519\u8bef\u8bb0\u5f55\u4e0b\u540e\u7ee7\u7eed\u6267\u884c\u3002 - import logging - \u6355\u83b7\u9519\u8bef\u65f6\uff1a logging.exception(e) \u629b\u51fa\u9519\u8bef\uff1a - \u9519\u8bef\u4e0d\u662f\u51ed\u7a7a\u4ea7\u751f\u7684\uff0c\u800c\u662f\u6709\u610f\u521b\u5efa\u5e76\u629b\u51fa\u7684\u3002Python\u7684\u5185\u7f6e\u51fd\u6570\u4f1a\u629b\u51fa\u5f88\u591a\u9519\u8bef\uff0c\u81ea\u5df1\u7f16\u5199\u7684\u51fd\u6570\u4e5f\u53ef\u4ee5\u629b\u51fa\u9519\u8bef\u3002 - \u53ef\u4ee5\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\uff0c\u9009\u62e9\u597d\u7ee7\u627f\u5173\u7cfb\uff0c\u4f7f\u7528 raise AnExceptionInstance \u629b\u51fa\u3002 - \u5728\u6355\u83b7\u4e00\u4e2a\u9519\u8bef\u540e\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u9519\u8bef\uff0c\u5982\u679c\u65e0\u6cd5\u5904\u7406\uff0c\u518d\u5411\u5916\u629b\u51fa\u3002\u76f4\u63a5 raise \u53ef\u4ee5\u539f\u6837\u629b\u51fa\uff0c\u4e5f\u53ef\u4ee5\u629b\u51fa\u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u9519\u8bef\uff08\u9700\u8981\u6709\u9053\u7406\u53ef\u8a00\u6bd4\u5982\u8bf4\u628a\u591a\u79cd\u9519\u8bef\u5408\u5e76\u6210\u4e00\u79cd\u516c\u5171\u7684\u9519\u8bef\uff0c\u4e0d\u80fd\u8bf4\u8f6c\u6362\u6210\u4e00\u79cd\u4e0d\u76f8\u5e72\u7684\u9519\u8bef\uff0c\u90a3\u6837\u4f1a\u5e72\u6270\u9519\u8bef\u8bca\u65ad\uff09\u3002 - \u51fa\u9519\u90fd\u662f\u5e0c\u671b\u5f97\u5230\u5904\u7406\u7684\uff0c\u5206\u6790\u9519\u8bef\u4fe1\u606f\u5e76\u5b9a\u4f4d\u9519\u8bef\u53d1\u751f\u7684\u4ee3\u7801\u4f4d\u7f6e\u5e76\u4fee\u6b63\u9519\u8bef\u624d\u662f\u6700\u5173\u952e\u7684\u3002 - \u5982\u679c\u7a0b\u5e8f\u7ed9\u522b\u4eba\u7528\uff0c\u5e94\u5f53\u8bf4\u660e\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u629b\u54ea\u4e9b\u9519\u8bef\uff0c\u4ee5\u5e2e\u52a9\u4f7f\u7528\u8005\u7f16\u5199\u9519\u8bef\u5904\u7406\u903b\u8f91\u3002 \u8c03\u8bd5\uff1a - print \u5927\u6cd5\u6c38\u8fdc\u53ef\u884c\uff0c\u4f46\u662f\u8c03\u5b8c\u540e\u5f97\u5220\uff0c\u5176\u5b9e\u5c31\u662f\u7b80\u7565\u7248\u65e5\u5fd7\u3002 - \u65ad\u8a00\uff1a assert assertionCondition, errinfoString \uff0c\u65ad\u8a00\u5931\u8d25\u4f1a\u629b\u51fa AssertionError \u3002\u542f\u52a8\u65f6\u52a0\u4e0a -O \u9009\u9879\u5173\u95ed\u65ad\u8a00\u3002 - \u65e5\u5fd7\uff1a import logging \u3002 - \u4e0d\u540c\u7ea7\u522b\uff1a NOTSET DEBUG INFO WARNING/WARN ERROR FATAL/CRITICAL - \u8bbe\u7f6e\u8f93\u51fa\u7ea7\u522b\uff1a logging.basicConfig(level = logging.INFO) - \u5bf9\u5e94\u8f93\u51fa\u65b9\u6cd5\uff1a debug info warning error/exception critical/fatal - \u6307\u5b9a level = INFO \u65f6 debug \u5c31\u4e0d\u8d77\u4f5c\u7528\u4e86\u3002 - \u9ed8\u8ba4\u65e5\u5fd7\u7ea7\u522b\u4e3a WARNING \u3002 - \u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\uff0c\u4e00\u6761\u8bed\u53e5\u53ef\u4ee5\u8f93\u51fa\u5230\u4e0d\u540c\u5730\u65b9\uff0c\u6bd4\u5982\u63a7\u5236\u53f0\u548c\u6587\u4ef6\u3002 - \u65e5\u5fd7\u662f\u6bd4\u8f83\u65b9\u4fbf\u7684\u5de5\u5177\u3002 - pdb \u5355\u6b65\u8c03\u8bd5\uff1a python -m pdb xxx.py - l \u67e5\u770b\u4ee3\u7801\u3002 - n \u5355\u6b65\u6267\u884c\u3002 - p variable \u67e5\u770b\u53d8\u91cf\u3002 - a \u67e5\u770b\u5f53\u524d\u51fd\u6570\u6240\u6709\u53d8\u91cf\u3002 - q \u9000\u51fa\u7a0b\u5e8f\u3002 - c \u7ee7\u7eed\u6267\u884c\u3002 - pdb \u8bbe\u7f6e\u65ad\u70b9\uff1a - import pdb - pdb.set_trace() \u8bbe\u7f6e\u65ad\u70b9\u3002 - \u547d\u4ee4\u884c\u8c03\u8bd5\u8fd8\u662f\u592a\u9ebb\u70e6\u4e86\uff0c\u4f7f\u7528VsCode\u6216\u8005PyCharm\u5c31\u884c\u3002 - \u4f7f\u7528IDE\u8c03\u8bd5\u867d\u7136\u65b9\u4fbf\uff0c\u4f46\u5230\u6700\u540e logging \u624d\u662f\u7ec8\u6781\u6b66\u5668\u3002\u5bf9\u4e8e\u5927\u578b\u7cfb\u7edf\u5355\u6b65\u8c03\u8bd5\u5173\u6ce8\u5c40\u90e8\uff0c\u5927\u91cf\u65e5\u5fd7\u5206\u6790\u66f4\u5173\u6ce8\u6574\u4f53\uff0c\u90fd\u5fc5\u4e0d\u53ef\u5c11\u3002 \u5355\u5143\u6d4b\u8bd5\uff1a - \u5355\u5143\u6d4b\u8bd5\u662f\u5bf9\u4e00\u4e2a\u6a21\u5757\u3001\u4e00\u4e2a\u7c7b\u6216\u8005\u4e00\u4e2a\u51fd\u6570\u8fdb\u884c\u6b63\u786e\u6027\u68c0\u9a8c\u7684\u6d4b\u8bd5\u5de5\u4f5c\u3002 - \u601d\u8def\uff0c\u6bd4\u5982\u5bf9\u4e8e\u51fd\u6570 abs() \uff1a - \u8f93\u5165\u6b63\u6570\u671f\u5f85\u4e0e\u8f93\u5165\u76f8\u540c\u3002 - \u8f93\u5165\u8d1f\u6570\u671f\u5f85\u4e0e\u8f93\u5165\u76f8\u53cd\u3002 - \u8f93\u51650\u671f\u5f85\u8fd4\u56de0\u3002 - \u8f93\u5165\u975e\u6570\u503c\u7c7b\u578b\uff0c\u6bd4\u5982 [] () {} None \u671f\u5f85\u629b\u51fa TypeError \u3002 - \u4ee5\u4e0a\u6d4b\u8bd5\u653e\u5230\u4e00\u4e2a\u6a21\u5757\u4e2d\u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u9488\u5bf9 abs \u51fd\u6570\u7684\u5355\u5143\u6d4b\u8bd5\u3002 - \u5982\u679c\u6d4b\u8bd5\u672a\u901a\u8fc7\uff0c\u9700\u8981\u786e\u5b9a\u662f\u5355\u5143\u6d4b\u8bd5\u7f16\u5199\u5f97\u6709\u95ee\u9898\u8fd8\u662f\u51fd\u6570\u6709bug\uff0c\u6709\u5219\u4fee\u590d\uff0c\u4f7f\u4e4b\u80fd\u591f\u6d4b\u8bd5\u901a\u8fc7\u3002 - \u5355\u5143\u6d4b\u8bd5\u7684\u610f\u4e49\uff1a\u5728\u6211\u4eec\u4fee\u6539\u4e86 abs() \u4ee3\u7801\u4e4b\u540e\uff0c\u518d\u8dd1\u4e00\u8fb9\u6d4b\u8bd5\u7528\u4f8b\uff0c\u901a\u8fc7\u5219\u8bf4\u660e\u4fee\u6539\u5bf9\u73b0\u6709 abs() \u51fd\u6570\u539f\u6709\u7684\u884c\u4e3a\u672a\u9020\u6210\u5f71\u54cd\u3002\u4e0d\u901a\u8fc7\u7684\u8bdd\uff0c\u8981\u4e48\u4fee\u6539\u4ee3\u7801\u4e0e\u539f\u6765\u9700\u6c42\u4e00\u81f4\uff0c\u8981\u4e48\u4fee\u6539\u6d4b\u8bd5\u51fd\u6570\u529f\u80fd\u53d1\u751f\u53d8\u5316\uff08\u4f7f\u7528\u7684\u5730\u65b9\u540c\u6837\u9700\u8981\u6ce8\u610f\uff09\u3002 - \u8fd9\u79cd\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\u7684\u597d\u5904\u5c31\u662f\u786e\u4fdd\u7a0b\u5e8f\u6a21\u5757\u884c\u4e3a\u7b26\u5408\u8bbe\u8ba1\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5728\u5c06\u6765\u4fee\u6539\u91cd\u6784\u65f6\uff0c\u53ef\u4ee5\u6781\u5927\u7a0b\u5ea6\u4fdd\u8bc1\u8be5\u6a21\u5757\u884c\u4e3a\u4ecd\u7136\u662f\u6b63\u786e\u7684\u3002 - python\u81ea\u5e26\u7684\u5355\u5143\u6d4b\u8bd5\u6a21\u5757\uff1a unittest - \u6d4b\u8bd5\u7c7b\u4ece unittest.TestCase \u7ee7\u627f\uff0c\u5176\u4e2d\u4ee5 test \u5f00\u5934\u7684\u65b9\u6cd5\u5c31\u662f\u6d4b\u8bd5\u65b9\u6cd5\uff0c\u4e0d\u4ee5 test \u5f00\u5934\u7684\u65b9\u6cd5\u4e0d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u6d4b\u8bd5\u65b9\u5f0f\uff0c\u6d4b\u8bd5\u65f6\u4e0d\u4f1a\u88ab\u6267\u884c\u3002 - unittest.TestCase \u63d0\u4f9b\u4e86\u5f88\u591a\u5185\u7f6e\u7684\u6761\u4ef6\u5224\u65ad\uff1a - assertEqual \u6700\u5e38\u7528 - assertTrue - assertRaises \u5904\u7406\u9519\u8bef\u8f93\u5165\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38\u7684\u60c5\u51b5\u3002 - \u6700\u540e\u6267\u884c\u6d4b\u8bd5\u7684\u903b\u8f91\u4e2d\u76f4\u63a5\u6267\u884c unittest.main() \uff08\u653e\u5230 __name__ == \"__main__\" \u4e2d\uff09\u5373\u53ef\u6267\u884c\u8fd9\u4e9b\u6d4b\u8bd5\uff0c\u4e0d\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u6dfb\u52a0\u5230\u4ee3\u7801\u4e2d\u3002 - \u8fd0\u884c\u6d4b\u8bd5\uff1a python xxx.py \u6216\u8005 python -m unittest xxx \u6d4b\u8bd5\u6a21\u5757\u3002 - \u53ef\u4ee5\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\u7f16\u5199\u4e24\u4e2a\u7279\u6b8a\u7684 setUp() \u548c tearDown() \u65b9\u6cd5\u3002\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4f1a\u5206\u522b\u5728\u6bcf\u8c03\u7528\u4e00\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u7684\u524d\u540e\u5206\u522b\u88ab\u6267\u884c\u3002\u8bbe\u60f3\u4f60\u7684\u6d4b\u8bd5\u9700\u8981\u542f\u52a8\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u8fd9\u65f6\uff0c\u5c31\u53ef\u4ee5\u5728 setUp() \u65b9\u6cd5\u4e2d\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u5728 tearDown() \u65b9\u6cd5\u4e2d\u5173\u95ed\u6570\u636e\u5e93\u3002 - \u5355\u5143\u6d4b\u8bd5\u901a\u8fc7\u5e76\u4e0d\u4ee3\u8868\u6ca1\u6709bug\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u901a\u8fc7\u4e00\u5b9a\u5c31\u6709bug\uff0c\u65e0\u8bba\u662f\u6d4b\u8bd5\u4ee3\u7801\u8fd8\u662f\u5177\u4f53\u903b\u8f91\u3002 \u6587\u6863\u6d4b\u8bd5\uff1a - Python\u5185\u7f6e\u7684\u6587\u6863\u6d4b\u8bd5 doctest \u53ef\u4ee5\u76f4\u63a5\u63d0\u53d6\u6ce8\u91ca\u4e2d\u7684\u4ee3\u7801\u5e76\u6267\u884c\u6d4b\u8bd5\u3002 - doctest \u4e25\u683c\u6309\u7167Python\u4ea4\u4e92\u5f0f\u547d\u4ee4\u884c\u7684\u8f93\u5165\u548c\u8f93\u51fa\u6765\u5224\u65ad\u6d4b\u8bd5\u7ed3\u679c\u662f\u5426\u6b63\u786e\u3002\u53ea\u6709\u5728\u6d4b\u8bd5\u5f02\u5e38\u65f6\uff0c\u53ef\u4ee5\u7528 ... \u8868\u793a\u5176\u4e2d\u4e00\u5927\u6bb5\u70e6\u4eba\u7684\u8f93\u51fa\u3002 - \u6267\u884c\u6d4b\u8bd5\uff1a import doctest doctest.testmod() \u4e00\u822c\u540c\u6837\u5199\u5728 __name__ == \"__main__\" \u6761\u4ef6\u4e2d\uff0c\u88ab\u5176\u4ed6\u6a21\u5757\u5bfc\u5165\u65f6\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c\u53ea\u6709\u5355\u72ec\u6267\u884c\u6539\u6587\u4ef6\u624d\u4f1a\u6267\u884c\u3002\u6267\u884c\u5931\u8d25\u4f1a\u6709\u63d0\u793a\uff0c\u6267\u884c\u6210\u529f\u4e0d\u4f1a\u6709\u4efb\u4f55\u63d0\u793a\u3002 IO IO\u5206\u4e3a\u540c\u6b65IO\u548c\u5f02\u6b65IO\uff0c\u56e0\u4e3a\u78c1\u76d8\u8bfb\u5199\u7f51\u7edc\u64cd\u4f5c\u7b49\u90fd\u6bd4CPU\u5904\u7406\u6162\uff0c\u6240\u4ee5\u53d1\u8d77\u4e00\u4e2aIO\u64cd\u4f5cCPU\u53ef\u4ee5\u9009\u62e9\u7b49\u5f85\u5904\u7406\u7ed3\u675f\u518d\u7ee7\u7eed\u6267\u884c\uff0c\u8fd8\u662f\u8bf4\u76f4\u63a5\u7ee7\u7eed\u6267\u884c\uff0c\u4ee5\u5176\u4ed6\u65b9\u5f0f\u5904\u7406IO\uff08IO\u5904\u7406\u7ed3\u675f\u540e\u56de\u8c03\u6216\u8005CPU\u53bb\u8f6e\u8be2IO\u72b6\u6001\uff09\u3002\u5f02\u6b65IO\u590d\u6742\u9ad8\u6548\uff0c\u540c\u6b65IO\u7b80\u5355\u4f46\u662f\u4f4e\u6548\uff0c\u8fd9\u91cc\u4ec5\u5148\u63a2\u8ba8\u540c\u6b65IO\u3002 \u6587\u4ef6\u8bfb\u5199\uff1a - \u6253\u5f00\u6587\u4ef6\uff1a f = open(\"Test.txt\", \"r\") - \u51fd\u6570\u539f\u578b\uff1a open(file, mode='r', buffering=- 1, encoding=None, errors=None, newline=None, closefd=True, opener=None) - \u8bfb\u5199\u6a21\u5f0f\uff1a\u53ef\u4ee5\u8bfb\u6216\u8005\u5199\uff0c\u5199\u65f6\u53ef\u4ee5\u9009\u62e9\u8986\u76d6\u8fd8\u662f\u6dfb\u52a0\u5230\u672b\u5c3e\uff0c\u8bfb\u5199\u53ef\u4ee5\u9009\u62e9\u6587\u672c\u683c\u5f0f\u8fd8\u662f\u4e8c\u8fdb\u5236\u683c\u5f0f\uff0c\u5199\u65f6\u53ef\u4ee5\u9009\u62e9\u6587\u4ef6\u4e0d\u5b58\u5728\u548c\u5b58\u5728\u65f6\u7684\u9ed8\u8ba4\u64cd\u4f5c\uff08\u521b\u5efa\u8fd8\u662f\u62a5\u9519\uff09\u3002 - \u5177\u4f53\u8bfb\u5199\u9009\u9879\uff1a rwxa bt + \u53ef\u4ee5\u6392\u5217\u7ec4\u5408\uff0c\u6839\u636e\u9700\u8981\u6dfb\u52a0\uff0c\u9ed8\u8ba4\u662f rt \u6587\u672c\u683c\u5f0f\u8bfb\u6253\u5f00\u3002 \u5b57\u7b26 \u542b\u610f 'r' \u8bfb\u53d6\uff08\u9ed8\u8ba4\uff09 'w' \u5199\u5165\uff0c\u5e76\u5148\u622a\u65ad\u6587\u4ef6 'x' \u6392\u5b83\u6027\u521b\u5efa\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u5931\u8d25 'a' \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u5199\u5165\uff0c\u5982\u679c\u6587\u4ef6\u5b58\u5728\u5219\u5728\u672b\u5c3e\u8ffd\u52a0 'b' \u4e8c\u8fdb\u5236\u6a21\u5f0f 't' \u6587\u672c\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09 '+' \u6253\u5f00\u7528\u4e8e\u66f4\u65b0\uff08\u8bfb\u53d6\u4e0e\u5199\u5165\uff09 Python\u533a\u5206\u4e8c\u8fdb\u5236\u548c\u6587\u672cIO\uff0c\u4e8c\u8fdb\u5236\u683c\u5f0f\u6253\u5f00\u7684\u5185\u5bb9\u8fd4\u56de bytes \u5bf9\u8c61\uff0c\u4e0d\u8fdb\u884c\u4efb\u4f55\u89e3\u7801\u3002\u6587\u672c\u683c\u5f0f\u6253\u5f00\u5185\u5bb9\u8fd4\u56de str \uff0c\u4f7f\u7528\u6307\u5b9a\u7684 encoding \uff08\u5982\u679c\u6307\u5b9a\u4e86\u7684\u8bdd\uff09\u6216\u8005\u5e73\u53f0\u9ed8\u8ba4\u5b57\u8282\u7f16\u7801\u89e3\u7801\u3002 \u5e73\u53f0\u65e0\u5173\uff0c\u4e0d\u4f9d\u8d56\u64cd\u4f5c\u7cfb\u7edf\u5e95\u5c42\u7684\u6587\u672c\u6587\u4ef6\u6982\u5ff5\uff0c\u6240\u6709\u5904\u7406\u7531python\u81ea\u8eab\u5b8c\u6210\u3002 \u66f4\u591a\u53c2\u6570\u7ec6\u8282\u67e5\u770b \u6587\u6863 \u3002 \u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61\uff0c\u7c7b\u578b\u53d6\u51b3\u4e8e\u6240\u7528\u6a21\u5f0f\uff0c\u6587\u672c\u4e8c\u8fdb\u5236\u3001\u662f\u5426\u4f7f\u7528\u7f13\u51b2\u90fd\u4f1a\u6709\u5f71\u54cd\uff0c\u4e00\u822c\u6587\u672c\u6a21\u5f0f\u8bfb\u6216\u5199\u6253\u5f00\u662f\u8fd4\u56de\u7684\u662f\u4e00\u4e2a io.TextIOBase \u5b50\u7c7b\uff08\u7279\u522b\u662f io.TextIOWrapper \uff09\u3002 \u8c03\u7528 read \u8bfb\u53d6\u5168\u90e8\u5185\u5bb9\uff0c\u5f97\u5230\u7684\u6587\u4ef6\u5bf9\u8c61\u53ef\u4ee5\u8fed\u4ee3\uff0c\u6587\u672c\u6a21\u5f0f\u4e0b\u8fed\u4ee3\u5355\u4f4d\u662f\u884c\u3002 \u4f7f\u7528\u7ed3\u675f\u540e\u9700\u8981 close \u5173\u95ed\u3002 \u6587\u4ef6\u8bfb\u5199\u65f6\u90fd\u6709\u53ef\u80fd\u9519\u8bef\uff0c\u53ef\u4ee5\u4f7f\u7528 try ... finally \u786e\u4fdd\u6587\u4ef6\u4e00\u5b9a\u88ab\u5173\u95ed\u3002 try: f = open(\"Test.txt\", \"r\") print(f.read()) finally: if f: f.close() \u4e3a\u4e86\u7b80\u5316\uff0cPython\u5f15\u5165\u4e86 with \u8bed\u53e5\u6765\u81ea\u52a8\u8c03\u7528 close \u3002 with open(\"Test.txt\", \"r\") as f: print(f.read()) \u6587\u4ef6\u5f88\u5927\u65f6 read \u76f4\u63a5\u8bfb\u53d6\u53ef\u80fd\u5e76\u4e0d\u597d\uff0c\u53ef\u4ee5\u4f7f\u7528 read(size) \u8bfb\u53d6\u6307\u5b9a\u5b57\u8282\u5185\u5bb9\uff0c readline() \u6bcf\u6b21\u8bfb\u53d6\u4e00\u884c\uff0c readlines() \u8bfb\u53d6\u6240\u6709\u884c\u653e\u5230\u5217\u8868\u4e2d\u3002 for line in f.readlines(): # iterate list of lines print(line) for line in f: # iterate line in file print(line) open \u8fd4\u56de\u7684\u5177\u6709 read() \u65b9\u6cd5\u7684\u5bf9\u8c61\u6210\u4e3afile-like object\uff0c\u9664\u4e86\u6587\u4ef6\u8fd8\u53ef\u4ee5\u662f\u5b57\u8282\u6d41\u3001\u7f51\u7edc\u6d41\u3001\u81ea\u5b9a\u4e49\u6d41\u7b49\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u4e0d\u8981\u6c42\u4ece\u7279\u5b9a\u7c7b\u6d3e\u751f\uff0c\u56e0\u4e3a\u662f\u9e2d\u5b50\u7c7b\u578b\u7684\uff0c\u53ea\u9700\u8981\u5b9e\u73b0 read() \u65b9\u6cd5\u5c31\u884c\u3002 \u5199\u6587\u4ef6\u4f7f\u7528 write \u3002\u5199\u65f6\u4f1a\u7f13\u51b2\uff0c\u4e0d\u4f1a\u7acb\u5373\u5199\u5230\u78c1\u76d8\uff0c\u6587\u4ef6\u5173\u95ed\u65f6\u624d\u88ab\u5199\u5230\u78c1\u76d8\u3002 python\u4e2d\u6700\u597d\u4f7f\u7528 with \u8bed\u53e5\u64cd\u4f5c\u6587\u4ef6IO\u3002 StringIO / BytesIO \uff1a - \u5f88\u591a\u65f6\u5019\u6570\u636e\u8bfb\u5199\u4e0d\u4e00\u5b9a\u5c31\u662f\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u5728\u5185\u5b58\u4e2d\u8bfb\u5199\uff0c\u5185\u5b58\u4e2d\u8bfb\u5199 str \u548c bytes \u5206\u522b\u4f7f\u7528 io.StringIO io.BytesIO \u3002 - \u7528\u6cd5\u548c\u6587\u4ef6\u6d41\u4e00\u6837\uff0c\u521b\u5efa\u4e4b\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528\uff0c\u53e6\u5916\u53ef\u4ee5\u4f7f\u7528 getvalue() \u83b7\u53d6\u5185\u5bb9\u3002 - \u9664\u4e86\u8bfb\u5199\uff0c\u5176\u5b9eIO\u5bf9\u8c61\u6709\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5f53\u524d\u7684\u4f4d\u7f6e\uff0c\u4f7f\u7528 tell \u83b7\u53d6\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528 seek(offset, whence) \u79fb\u52a8\uff08\u504f\u79fb\u53ef\u8d1f\u53ef\u6b63\u8868\u5411\u524d\u540e\u79fb\u52a8\uff0c\u540e\u4e00\u4e2a\u53c2\u6570\u8868\u76f8\u5bf9\u7684\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a0\u6587\u4ef6\u5f00\u5934\uff0c1\u5f53\u524d\u4f4d\u7f6e\uff0c2\u6587\u4ef6\u672b\u5c3e\uff09\uff0c\u8bfb\u5199\u3001\u8bfb\u53d6\u884c\u7b49\u64cd\u4f5c\u540e\u6307\u9488\u5c31\u4f1a\u79fb\u52a8\u5230\u5199\u7684\u5185\u5bb9\u672b\u5c3e\u6216\u8005\u4e0b\u4e00\u884c\u3002 - \u641e\u6e05\u695a\u5f53\u524d\u4f4d\u7f6e\uff0c\u540c\u65f6\u53ea\u7528\u6765\u8bfb\u6216\u5199\uff0c\u4e00\u822c\u4e0d\u8981\u540c\u65f6\u8bfb\u6216\u5199\uff0c\u4f1a\u5f88\u8ff7\u60d1\u5bb9\u6613\u51fa\u9519\u3002 \u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3\uff1a - \u4f7f\u7528 os \u6a21\u5757\u76f4\u63a5\u8c03\u7528\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u4e86\u63a5\u53e3\u3002 - import os - os.name \u8868\u660e\u5f53\u524d\u7cfb\u7edf\uff0c\u7c7bUnix\u7cfb\u7edf\u662f posix \uff0cwindows\u7cfb\u7edf\u662f nt \u3002 - os.uname() \u83b7\u53d6\u7cfb\u7edf\u8be6\u7ec6\u4fe1\u606f\u3002windows\u4e0a\u4e0d\u63d0\u4f9b\uff0c\u67d0\u4e9b\u51fd\u6570\u662f\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u7684\u3002 - \u73af\u5883\u53d8\u91cf\uff1a print(os.environ) # environment variables print(os.environ.get(\"path\")) # get specific environment variable \u64cd\u4f5c\u6587\u4ef6\u4e0e\u76ee\u5f55\uff1a - \u63a5\u53e3\u4e00\u90e8\u5206\u5728 os \u6a21\u5757\uff0c os.path \u4e0b\u3002 - os.mkdir() os.rmdir() \u65b0\u5efa\u548c\u5220\u9664\u76ee\u5f55\u3002 - os.path.abspath('.') \u83b7\u53d6\u7edd\u5bf9\u8def\u5f84\u3002 - \u5408\u5e76\u8def\u5f84\u65f6\uff0c\u4f7f\u7528 os.path.join() \u800c\u4e0d\u662f\u4f7f\u7528\u5b57\u7b26\u4e32\u7684 join \uff0c\u8fd9\u4e2a\u63a5\u53e3\u4f1a\u5904\u7406\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u76ee\u5f55\u5206\u9694\u7b26\u3002 print(os.path.join('..', \"test\", \"hello\")) # ../test/hello in Unix-like, ..\\test\\hello in windows \u540c\u7406\u62c6\u5206\u8def\u5f84\u65f6\u4f7f\u7528 os.path.split() \uff0c\u62c6\u6210\u76ee\u5f55\u548c\u6587\u4ef6\u540d\u7684\u5143\u7ec4\u3002 \u62c6\u5206\u6587\u4ef6\u6269\u5c55\u540d os.path.splitext() \u3002 \u8def\u5f84\u62c6\u5206\u4e0d\u8981\u6c42\u6587\u4ef6\u5b58\u5728\uff0c\u4ec5\u5904\u7406\u8def\u5f84\u3002 \u66f4\u591a\u51fd\u6570 os.rename() os.remove() os \u4e2d\u4e0d\u5b58\u5728\u590d\u5236\u6587\u4ef6\u7684\u63a5\u53e3\uff0c\u5728 shutil \u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86 copyfile \u7528\u4e8e\u590d\u5236\uff0c\u8fd9\u4e2a\u6a21\u5757\u53ef\u4ee5\u770b\u505a\u662f os \u6a21\u5757\u7684\u8865\u5145\u3002 \u8fd8\u6709\u66f4\u591a\u63a5\u53e3\uff0c\u53ef\u4ee5\u67e5\u770b\u6807\u51c6\u5e93\u6587\u6863\u3002 \u5e8f\u5217\u5316\uff1a - \u5e8f\u5217\u5316\u5c31\u662f\u5c06\u5bf9\u8c61\u5199\u8fdb\u6587\u4ef6\uff0c\u53cd\u8fc7\u6765\u7684\u8fc7\u7a0b\u79f0\u4e3a\u53cd\u5e8f\u5217\u5316\u3002Python\u4e2d\u79f0\u4e4b\u4e3aPickling\u548cUnpickling\u3002 - Python\u7684\u5bf9\u8c61\u5e8f\u5217\u5316\u53ef\u4ee5\u4f7f\u7528 pickle \u6a21\u5757\uff0c\u4f7f\u7528 pickle.dumps(obj) \u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u8282\u5e8f\u5217 bytes \uff0c\u53ef\u4ee5\u76f4\u63a5\u4fdd\u5b58\u5230\u6587\u4ef6 pickle.dump(obj, fd) \u3002 - \u53cd\u5e8f\u5217\u5316\u5219\u4f7f\u7528 obj = pickle.load(fd) \u4ece\u6587\u4ef6\u52a0\u8f7d\uff0c obj = pickle.loads(s) \u4ece bytes \u52a0\u8f7d\u3002 - \u4f7f\u7528 pickle \u6a21\u5757\u95ee\u9898\u548c\u5176\u4ed6\u8bed\u8a00\u7279\u6709\u7684\u5e8f\u5217\u5316\u95ee\u9898\u4e00\u6837\uff0c\u53ea\u80fd\u7528\u4e8ePython\u8bed\u8a00\uff0c\u4e0d\u540c\u7248\u672c\u53ef\u80fd\u4e0d\u517c\u5bb9\u3002\u6cdb\u7528\u6027\u6709\u9650\u3002 - \u66f4\u4e00\u822c\u7684\u5e8f\u5217\u5316\u65b9\u6cd5\u8fd8\u662f\u4f7f\u7528JSON\u6216\u8005XML\u8fd9\u79cd\u7ed3\u6784\u5316\u63cf\u8ff0\u3002JSON\u8868\u793a\u7684\u5bf9\u8c61\u5c31\u662f\u6807\u51c6\u7684Javascript\u8bed\u8a00\u7684\u5bf9\u8c61\u3002 - JSON\u548cpython\u5185\u7f6e\u7c7b\u578b\u5bf9\u5e94\u5173\u7cfb\u3002 JSON\u7c7b\u578b Python\u7c7b\u578b {} dict [] list \"string\" str 1234.56 int \u6216 float true/false True/False null None - Python\u5185\u7f6e\u7684 json \u6a21\u5757\u63d0\u4f9b\u4e86\u975e\u5e38\u5b8c\u5584\u7684JSON\u683c\u5f0f\u8f6c\u6362\u3002 - json.dumps(obj) -> str json.dump(obj, fd) - json.loads(json_str) -> obj json.load(fd) -> obj - \u5b9e\u9645\u4f7f\u7528\u4e2d\u8fd8\u9700\u8981\u80fd\u5e8f\u5217\u5316\u4e00\u822c\u5bf9\u8c61\uff0c\u4e3a\u6b64\u5bf9\u8c61\u9700\u8981\u662f\u80fd\u591f\u5e8f\u5217\u5316\u4e3aJSON\u7684\u5bf9\u8c61\u624d\u884c\uff0c\u4e3a\u6b64\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u5178\u7684\u65b9\u6cd5\uff0c\u4f5c\u4e3a\u5173\u952e\u5b57\u53c2\u6570 default \u4f20\u5165 dumps dump \u3002 class Person: def __init__(self, name, age): self.name = name self.age = age def __str__(self) -> str: return f\"Person -> name : {self.name}, age : {self.age}\" def person2dict(p): return { \"name\": p.name, \"age\": p.age } def dict2person(d): return Person(d['name'], d['age']) json_str = json.dumps(Person(\"Kim\", 18), default=person2dict) print(json_str) print(json.dumps(Person(\"Jim\", 17), default=lambda x : x.__dict__)) print(json.loads(json_str, object_hook=dict2person)) \u540c\u7406\u53cd\u5e8f\u5217\u5316\u65f6\u4e5f\u53ef\u4ee5\u5b9a\u5236\u4e00\u4e2a\u5c06\u5b57\u5178\u8f6c\u6362\u4e3a\u5bf9\u8c61\u7684\u94a9\u5b50\u65b9\u6cd5\uff0c\u4f5c\u4e3a object_hook \u5173\u952e\u5b57\u53c2\u6570\u4f20\u5165\u3002 \u901a\u5e38\u7684\u5b9e\u4f8b\u90fd\u6709\u4e00\u4e2a __dict__ \u5c5e\u6027\uff0c\u5c31\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u7528\u6765\u5b58\u50a8\u5b9e\u4f8b\u53d8\u91cf\uff0c\u6240\u4ee5\u5e8f\u5217\u5316\u65f6\u53ef\u4ee5\u4f20\u5165 default=lambda x : x.__dict__ \u3002\u4e5f\u6709\u5c11\u6570\u4f8b\u5916\uff0c\u6bd4\u5982\u5b9a\u4e49\u4e86 __slots__ \u7684class\u3002 \u5f53\u9ed8\u8ba4\u7684\u5e8f\u5217\u5316\u6216\u53cd\u5e8f\u5217\u673a\u5236\u4e0d\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42\u65f6\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u4f20\u5165\u66f4\u591a\u7684\u53c2\u6570\u6765\u5b9a\u5236\u5e8f\u5217\u5316\u6216\u53cd\u5e8f\u5217\u5316\u7684\u89c4\u5219\uff0c\u65e2\u505a\u5230\u4e86\u63a5\u53e3\u7b80\u5355\u6613\u7528\uff0c\u53c8\u505a\u5230\u4e86\u5145\u5206\u7684\u6269\u5c55\u6027\u548c\u7075\u6d3b\u6027\u3002 \u6bd4\u5982 ensure_ascii \u53c2\u6570\u53ef\u4ee5\u786e\u4fdd\u5199\u5230Json\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u662f\u5426\u5141\u8bb8\u975eASCII\u5b57\u7b26\uff0c\u9ed8\u8ba4\u662f True \u5219\u4f1a\u5c06\u975eASCII\u7684Unicode\u5b57\u7b26\u7528 \\uxxxx \u8f6c\u4e49\u3002 \u5e76\u53d1\u7f16\u7a0b \u591a\u4efb\u52a1\uff1a - \u5373\u64cd\u4f5c\u7cfb\u7edf\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u4efb\u52a1\uff0c\u8868\u73b0\u4e0a\u5c31\u662f\u5e76\u53d1\u6267\u884c\u7684\u3002 - \u64cd\u4f5c\u7cfb\u7edf\u7684\u4efb\u52a1\u5c31\u662f\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u5185\u90e8\u53ef\u4ee5\u6709\u5b50\u4efb\u52a1\uff0c\u5c31\u662f\u7ebf\u7a0b\u3002 - \u591a\u4efb\u52a1\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a - \u591a\u8fdb\u7a0b\u3002 - \u591a\u7ebf\u7a0b\u3002 - \u591a\u8fdb\u7a0b+\u591a\u7ebf\u7a0b\u3002 - Python\u65e2\u652f\u6301\u591a\u8fdb\u7a0b\uff0c\u53c8\u652f\u6301\u591a\u7ebf\u7a0b\u3002 - \u7ebf\u7a0b\u662f\u6700\u5c0f\u7684\u6267\u884c\u5355\u5143\uff0c\u8fdb\u7a0b\u81f3\u5c11\u7531\u4e00\u4e2a\u7ebf\u7a0b\u7ec4\u6210\u3002\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u8c03\u5ea6\u7531\u64cd\u4f5c\u7cfb\u7edf\u51b3\u5b9a\uff0c\u7a0b\u5e8f\u4e0d\u80fd\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u6267\u884c\uff0c\u6267\u884c\u591a\u957f\u65f6\u95f4\u3002 - \u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\u7684\u7a0b\u5e8f\u6d89\u53ca\u5230\u540c\u6b65\u3001\u6570\u636e\u5171\u4eab\u7b49\u95ee\u9898\uff0c\u7f16\u5199\u8d77\u6765\u66f4\u590d\u6742\u3002 \u7c7bUnix\u7cfb\u7edf\u7684\u591a\u8fdb\u7a0b\uff1a - fork() \u7cfb\u7edf\u8c03\u7528\u4e00\u6b21\uff0c\u8fd4\u56de\u4e24\u6b21\uff0c\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u628a\u5f53\u524d\u8fdb\u7a0b\uff08\u7236\u8fdb\u7a0b\uff09\u590d\u5236\u4e86\u4e00\u4efd\uff08\u5b50\u8fdb\u7a0b\uff09\uff0c\u7136\u540e\u5728\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u5185\u5206\u522b\u8fd4\u56de\u3002 - \u5b50\u8fdb\u7a0b\u6c38\u8fdc\u8fd4\u56de0\uff0c\u7236\u8fdb\u7a0b\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684ID\u3002\u4e00\u4e2a\u7236\u8fdb\u7a0b\u53ef\u4ee5 fork \u51fa\u591a\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u6240\u4ee5\u7236\u8fdb\u7a0b\u8981\u8bb0\u4e0b\u5b50\u8fdb\u7a0b\u7684ID\uff0c\u5b50\u8fdb\u7a0b\u53ea\u9700\u8981\u8c03\u7528 getppid() \u5c31\u53ef\u4ee5\u62ff\u5230\u7236\u8fdb\u7a0bID\u3002 - Python\u7684 os \u6a21\u5757\u5c01\u88c5\u4e86\u5e38\u89c1\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u5305\u62ec fork \u3002\u4ec5\u5728*nix\u4e0a\u6709\u8fd9\u4e2a\u63a5\u53e3\uff0cwindows\u4e0a\u6ca1\u6709\u3002 # -*- coding: utf-8 -*- import os print(f\"porcess {os.getpid()} start ...\") # only works on *nix(Linux/Unix/MacOS) pid = os.fork() if pid == 0: print(f\"This is child process {os.getpid()}, and parent is {os.getppid()}.\") else: print(f\"This is parent process {os.getpid()}, and just created a child process {pid}\") \u8de8\u5e73\u53f0\u7684\u591a\u7ebf\u7a0b\uff1a - \u5982\u679c\u662f\u6253\u7b97\u7f16\u5199\u591a\u8fdb\u7a0b\u7684\u670d\u52a1\u7a0b\u5e8f\uff0c\u8fd0\u884c\u5728Linux\u5e73\u53f0\u663e\u7136\u662f\u6700\u4f73\u7684\u9009\u62e9\u3002 - Python\u662f\u8de8\u5e73\u53f0\u7684\uff0c\u6240\u4ee5\u4e5f\u5c01\u88c5\u4e86\u8de8\u5e73\u53f0\u7684\u591a\u7ebf\u7a0b\u6a21\u5757 multiprocessing \u3002 - \u5176\u4e2d\u63d0\u4f9b\u4e86 Process \u7c7b\u4ee3\u8868\u4e00\u4e2a\u8fdb\u7a0b\u3002 from multiprocessing import Process import os # subprocess will execute def run_proc(name): print(f\"Run child process {name} ({os.getpid()})...\") if __name__ == \"__main__\": print(f\"Parent process {os.getpid()}.\") p = Process(target = run_proc, args = ('test', )) print(\"Child process will start.\") p.start() p.join() print(\"Child process end.\") \u521b\u5efa\u5b50\u8fdb\u7a0b\u65f6\uff0c\u4f20\u5165\u4e00\u4e2a\u6267\u884c\u51fd\u6570\u548c\u51fd\u6570\u53c2\u6570\u6784\u9020\u65b0\u7684 Process \u5bf9\u8c61\uff0c\u4f7f\u7528 start \u65b9\u6cd5\u542f\u52a8\uff0c join() \u65b9\u6cd5\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f\u540e\u518d\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c\uff0c\u901a\u5e38\u7528\u4e8e\u8fdb\u7a0b\u95f4\u540c\u6b65\u3002 \u8fdb\u7a0b\u6c60\uff1a - \u5982\u679c\u8981\u521b\u5efa\u5927\u91cf\u5b50\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fdb\u7a0b\u6c60 multiprocessing.Pool \u6279\u91cf\u521b\u5efa\u5b50\u8fdb\u7a0b\u3002 from multiprocessing import Pool, Process import os, time, random def long_time_task(name): print(f\"Run task {name} ({os.getpid()})...\") start = time.time() time.sleep(random.random() * 3) end = time.time() print(f\"Task {name} runs {end-start:0.2f} seconds.\") if __name__ == \"__main__\": print(f\"Parent process {os.getpid()}.\") p = Pool(4) for i in range(5): p.apply_async(long_time_task, args = (i, )) print(\"Waiting for all subprocess done...\") p.close() p.join() print(\"All subprocess done.\") \u901a\u8fc7 Pool \u5bf9\u8c61\u521b\u5efa\u8fdb\u7a0b\u6c60\uff0c\u8c03\u7528 apply_async \u6dfb\u52a0\u5b50\u8fdb\u7a0b\uff0c\u8c03\u7528 join() \u4f1a\u7b49\u5f85\u8fdb\u7a0b\u6c60\u5185\u6240\u6709\u5b50\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u4e4b\u524d\u5fc5\u987b\u8c03\u7528 close() \uff0c\u8c03\u7528 close() \u4e4b\u540e\u4fbf\u4e0d\u80fd\u518d\u6dfb\u52a0\u65b0\u7684\u5b50\u8fdb\u7a0b\u4e86\u3002 \u67d0\u4e00\u6b21\u8fd0\u884c\u7ed3\u679c\uff1a\u5b50\u8fdb\u7a0b0,1,2,3\u662f\u7acb\u5373\u6267\u884c\u7684\uff0c\u800c\u5b50\u8fdb\u7a0b4\u8981\u7b49\u5f85\u524d\u9762\u67d0\u4e2a\u5b50\u8fdb\u7a0b\u6267\u884c\u5b8c\u540e\u624d\u6267\u884c\uff0c\u8fd9\u662f\u56e0\u4e3a Pool(4) \u6307\u5b9a\u4e86\u540c\u65f6\u6267\u884c\u7684\u5b50\u8fdb\u7a0b\u6570\u91cf\u662f4\uff0c\u56e0\u6b64\u6700\u591a\u540c\u65f6\u6267\u884c4\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u8fd9\u662f\u523b\u610f\u7684\u8bbe\u8ba1\u3002\u5982\u679c\u6539\u6210 Pool(5) \u5c31\u80fd\u540c\u65f6\u6267\u884c5\u4e2a\u8fdb\u7a0b\u4e86\u3002\u5982\u679c\u4e0d\u6307\u5b9a\u7684\u8bdd\uff0c\u9ed8\u8ba4\u5927\u5c0f\u662fCPU\u7684\u6838\u5fc3\u6570\u91cf\uff08\u903b\u8f91\u6838\u5fc3\u800c\u975e\u7269\u7406\u6838\u5fc3\u6570\u91cf\uff0c\u6bd4\u5982Intel\u7684\u56db\u6838\u516b\u7ebfCPU\uff0c\u903b\u8f91\u6838\u5fc3\u6570\u91cf\u5c31\u662f8\uff09\u3002 Parent process 7400. Waiting for all subprocess done... Run task 0 (17464)... Run task 1 (10520)... Run task 2 (1504)... Run task 3 (5836)... Task 2 runs 0.20 seconds. Run task 4 (1504)... Task 3 runs 0.89 seconds. Task 1 runs 1.23 seconds. Task 0 runs 1.31 seconds. Task 4 runs 1.58 seconds. All subprocess done. \u548c\u5916\u90e8\u8fdb\u7a0b\u901a\u4fe1\uff1a - \u5f88\u591a\u65f6\u5019\u5b50\u8fdb\u7a0b\u53ef\u80fd\u662f\u5916\u90e8\u8fdb\u7a0b\uff0c\u8fd9\u65f6\u5019\u5982\u679c\u8981\u901a\u4fe1\uff0c\u53ef\u4ee5\u4f7f\u7528 subprocess \u6a21\u5757\u8c03\u7528\u5916\u90e8\u547d\u4ee4\u3002 - \u901a\u8fc7 Popen \u8c03\u7528\uff0c\u901a\u8fc7 communicate \u901a\u4fe1\uff0c\u4f20\u5165\u8f93\u5165\u4fe1\u606f\uff0c\u5f97\u5230\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u3002 import subprocess p = subprocess.Popen(['python', '-c', 'print(\"hello,world!\")'], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE) out, err = p.communicate() print(out.decode(\"utf-8\"), err.decode(\"utf-8\")) print(\"exit code: \", p.returncode) \u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\uff1a - Process \u9700\u8981\u901a\u4fe1\u7684\u8bdd\uff0cpython\u7684 multiprocessing \u6a21\u5757\u5c01\u88c5\u4e86\u5e95\u5c42\u673a\u5236\uff0c\u63d0\u4f9b\u4e86 Queue Pipes \u591a\u79cd\u65b9\u5f0f\u7528\u6765\u4ea4\u6362\u6570\u636e\u3002 - \u4ee5 Queue \u4e3a\u4f8b\uff0c\u7236\u8fdb\u7a0b\u4e2d\u521b\u5efa\u4e24\u4e2a\u5b50\u8fdb\u7a0b\u3002\u4e00\u4e2a\u5f80\u961f\u5217\u4e2d\u5199\u6570\u636e\uff0c\u53e6\u4e00\u4e2a\u8bfb\u53d6\u6570\u636e\u3002 from multiprocessing import Process, Queue import os, time, random # write to queue def write(q): print(f\"Process to write : {os.getpid()}\") for value in ['A', 'B', 'C']: print(f\"Put {value} in queue...\") q.put(value) time.sleep(random.random()) # read from queue def read(q : Queue): print(f\"Process to read : {os.getpid()}\") while True: value = q.get(True) # block = True print(f\"Get value {value} from queue.\") if __name__ == \"__main__\": # create queue and pass to subprocess q = Queue() pw = Process(target=write, args=(q,)) pr = Process(target=read, args=(q,)) # start subprocess to write pw.start() # start subprocess to read pr.start() # wait pw end pw.join() # pr is infinite loop, can not end by itself, must be terminated. pr.terminate() \u5728Unix/Linux\u4e0b\uff0c multiprocessing \u6a21\u5757\u5c01\u88c5\u4e86 fork() \u8c03\u7528\uff0c\u4f7f\u6211\u4eec\u4e0d\u9700\u8981\u5173\u6ce8 fork() \u7684\u7ec6\u8282\u3002\u7531\u4e8eWindows\u6ca1\u6709 fork \u8c03\u7528\uff0c\u56e0\u6b64\uff0c multiprocessing \u9700\u8981\u201c\u6a21\u62df\u201d\u51fa fork \u7684\u6548\u679c\uff0c\u7236\u8fdb\u7a0b\u6240\u6709Python\u5bf9\u8c61\u90fd\u5fc5\u987b\u901a\u8fc7 pickle \u5e8f\u5217\u5316\u518d\u4f20\u5230\u5b50\u8fdb\u7a0b\u53bb\uff0c\u6240\u4ee5\uff0c\u5982\u679c multiprocessing \u5728Windows\u4e0b\u8c03\u7528\u5931\u8d25\u4e86\uff0c\u8981\u5148\u8003\u8651\u662f\u4e0d\u662f pickle \u5931\u8d25\u4e86\u3002 Pipe \u5c31\u662f\u7ba1\u9053\uff0c\u6bcf\u7aef\u90fd\u6709 send() \u548c recv() \u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u53d1\u9001\u548c\u63a5\u6536\uff0c\u5982\u679c\u4e24\u4e2a\u8fdb\u7a0b\u8bd5\u56fe\u5728\u540c\u4e00\u65f6\u95f4\u7684\u540c\u4e00\u7aef\u8fdb\u884c\u8bfb\u53d6\u548c\u5199\u5165\u90a3\u4e48\uff0c\u8fd9\u53ef\u80fd\u4f1a\u635f\u574f\u7ba1\u9053\u4e2d\u7684\u6570\u636e\u3002 \u591a\u7ebf\u7a0b \uff1a - \u8fdb\u7a0b\u662f\u7531\u82e5\u5e72\u7ebf\u7a0b\u7ec4\u6210\u7684\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u6709\u4e00\u4e2a\u7ebf\u7a0b\u3002\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u76f4\u63a5\u652f\u6301\u7684\u6267\u884c\u5355\u5143\uff0c\u9ad8\u7ea7\u8bed\u8a00\u90fd\u6709\u5185\u7f6e\u591a\u7ebf\u7a0b\u652f\u6301\u3002Python\u7684\u7ebf\u7a0b\u662f\u771f\u6b63\u7684Posix Thread\uff0c\u800c\u4e0d\u662f\u6a21\u62df\u51fa\u6765\u7684\u7ebf\u7a0b\u3002 - Python\u7684\u591a\u7ebf\u7a0b\u6a21\u5757\uff1a _thread \u548c threading \uff0c _thread \u662f\u4f4e\u7ea7\u6a21\u5757\uff0c threading \u662f\u9ad8\u7ea7\u6a21\u5757\uff0c\u5bf9 _thread \u8fdb\u884c\u4e86\u5c01\u88c5\u3002\u7edd\u5927\u591a\u6570\u60c5\u51b5\u8bdd\u90fd\u662f\u76f4\u63a5\u4f7f\u7528 threading \u6a21\u5757\u3002 - \u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\uff1a\u521b\u5efa\u4e00\u4e2a Thread \u5b9e\u4f8b\uff0c\u4f20\u5165\u51fd\u6570\uff0c\u8c03\u7528 start() \u5f00\u59cb\u6267\u884c\u3002 import time, threading def loop(): print(f\"thread {threading.current_thread().name} is running...\") for i in range(5): print(f\"thread {threading.current_thread().name} >>> {i}\") time.sleep(1) print(f\"thread {threading.current_thread().name} end.\") if __name__ == \"__main__\": print(f\"thread {threading.current_thread().name} is running...\") t = threading.Thread(target=loop, name=\"LoopThread\") t.start() t.join() print(f\"thread {threading.current_thread().name} end.\") \u4e3b\u7ebf\u7a0b\u540d\u79f0\u9ed8\u8ba4\u662f MainThread \u3002 \u591a\u8fdb\u7a0b\u4e2d\uff0c\u540c\u4e00\u4e2a\u53d8\u91cf\u6709\u591a\u4efd\u62f7\u8d1d\uff0c\u4e92\u4e0d\u5f71\u54cd\uff0c\u4ea4\u4e92\u4e00\u822c\u901a\u8fc7\u6587\u4ef6\u6216\u8005\u7ba1\u9053\u3002\u800c\u5728\u591a\u7ebf\u7a0b\u4e2d\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u662f\u4e00\u4e2a\u8c03\u7528\u6808\uff0c\u53d8\u91cf\u662f\u5171\u4eab\u7684\u3002\u800c\u7ebf\u7a0b\u4e4b\u95f4\u6267\u884c\u987a\u5e8f\u4e0d\u662f\u786e\u5b9a\u7684\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u53d8\u91cf\u4e4b\u540e\u4f1a\u5f71\u54cd\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u7684\u6267\u884c\u3002\u6240\u4ee5\u5fc5\u987b\u5bf9\u8fd9\u79cd\u884c\u4e3a\u52a0\u4ee5\u9650\u5236\u3002 \u8c03\u7528 threading.active_count() \u83b7\u53d6\u5f53\u524d\u6d3b\u8dc3\u7684\u7ebf\u7a0b\u6570\u91cf\uff08\u4e3b\u7ebf\u7a0b\u6216\u8005\u5b50\u7ebf\u7a0b\uff09\u3002 Thread.setDaemon(True) \u8bbe\u7f6e\u5f53\u524d\u7ebf\u7a0b\u4e3a\u4e3b\u7ebf\u7a0b\u7684\u5b88\u62a4\u7ebf\u7a0b\uff0c\u5b88\u62a4\u7ebf\u7a0b\u4e0d\u5fc5\u88ab\u5168\u90e8\u6267\u884c\u5b8c\u6bd5\uff0c\u5f53\u4e3b\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\u65f6\uff0c\u5b83\u7684\u5b88\u62a4\u7ebf\u7a0b\u5c31\u4f1a\u81ea\u52a8\u505c\u6b62\u7ed3\u675f\uff0c\u76f4\u63a5\u9000\u51fa\u3002 \u9501\uff1a - \u4e3a\u4e86\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u5fc5\u987b\u7ed9\u591a\u4e2a\u7ebf\u7a0b\u4f7f\u7528\u6216\u8005\u4fee\u6539\u4e86\u5171\u4eab\u53d8\u91cf\u7684\u4ee3\u7801\u52a0\u9501\u3002\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u65f6\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4e0d\u5f97\u540c\u65f6\u8fdb\u5165\uff0c\u5fc5\u987b\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f\u4e4b\u540e\u624d\u80fd\u8fdb\u5165\u3002 - \u901a\u8fc7 threading.Lock() \u521b\u5efa\u4e92\u65a5\u9501\u3002 - \u4f7f\u7528 lock.acquire() \u83b7\u53d6\u9501\uff0c lock.release() \u91ca\u653e\u9501\u3002\u83b7\u53d6\u9501\u65f6\u5982\u679c\u5df2\u7ecf\u88ab\u5176\u4ed6\u7ebf\u7a0b\u83b7\u53d6\uff0c\u90a3\u4e48\u5c31\u4f1a\u6302\u8d77\u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u6267\u884c\u5b8c\u91ca\u653e\u9501\u4e4b\u540e\u518d\u624d\u80fd\u83b7\u53d6\u3002\u5982\u679c\u52a0\u9501\u7684\u4ee3\u7801\u53ef\u80fd\u53ef\u80fd\u4f1a\u629b\u5f02\u5e38\uff0c\u53ef\u4ee5\u4f7f\u7528 try ... finally \u786e\u4fdd\u4e00\u5b9a\u80fd\u591f\u91ca\u653e\u9501\u3002 - \u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u83b7\u53d6\u9501\u65f6\uff0c\u53ea\u8981\u4e00\u4e2a\u80fd\u83b7\u53d6\u6210\u529f\u3002\u52a0\u4e86\u9501\u7684\u90e8\u5206\u5728\u7ebf\u7a0b\u5185\u53ef\u662f\u89c6\u4e3a\u539f\u5b50\u7684\u64cd\u4f5c\uff0c\u4e00\u5b9a\u80fd\u591f\u987a\u5e8f\u5730\u5b8c\u6574\u6267\u884c\u5b8c\u3002 - \u83b7\u53d6\u9501\u4e4b\u540e\u4e00\u5b9a\u8981\u91ca\u653e\uff0c\u5426\u5219\u5176\u4ed6\u9700\u8981\u83b7\u53d6\u8be5\u9501\u7684\u7ebf\u7a0b\u5c31\u4f1a\u82e6\u82e6\u7b49\u5f85\uff0c\u6210\u4e3a\u6b7b\u7ebf\u7a0b\u3002 - \u9501\u7684\u7684\u5b58\u5728\u5b9e\u9645\u4e0a\u963b\u6b62\u4e86\u591a\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\uff0c\u5305\u542b\u9501\u7684\u4ee3\u7801\u4e5f\u53ea\u80fd\u540c\u65f6\u5728\u4e00\u4e2a\u7ebf\u7a0b\u5185\u6267\u884c\u3002 - \u53ef\u4ee5\u5b58\u5728\u591a\u4e2a\u9501\uff0c\u5f53\u4e0d\u540c\u7ebf\u7a0b\u62e5\u6709\u4e0d\u540c\u9501\uff0c\u5e76\u5c1d\u8bd5\u53bb\u83b7\u53d6\u5bf9\u65b9\u7684\u9501\u65f6\uff0c\u5c31\u4f1a\u9020\u6210\u6b7b\u9501\u3002 - Python\u4e2d\u7684\u591a\u7ebf\u7a0b\u6709\u4e00\u4e2a\u5168\u5c40\u7684GIL\u9501\uff08Global Interpreter Lock\uff0c\u5b98\u65b9\u89e3\u91ca\u5668CPython\u7684\u5386\u53f2\u9057\u7559\u95ee\u9898\uff09\uff0c\u4efb\u4f55Python\u4ee3\u7801\u6267\u884c\u524d\u5fc5\u987b\u5148\u83b7\u5f97GIL\u9501\u3002\u7136\u540e\uff0c\u6bcf\u6267\u884c100\u6761\u5b57\u8282\u7801\uff0c\u89e3\u91ca\u5668\u5c31\u81ea\u52a8\u91ca\u653eGIL\u9501\uff0c\u8ba9\u522b\u7684\u7ebf\u7a0b\u6709\u673a\u4f1a\u6267\u884c\u3002\u6240\u4ee5\u5176\u5b9ePython\u4e2d\u591a\u7ebf\u7a0b\u4e5f\u53ea\u80fd\u4ea4\u66ff\u6267\u884c\uff0c\u800c\u65e0\u6cd5\u5728\u591a\u6838CPU\u7684\u591a\u4e2a\u6838\u5fc3\u4e0a\u540c\u65f6\u6267\u884c\u3002PyPy\u548cJpython\u4e2d\u662f\u6ca1\u6709GIL\u7684\u3002 - Python\u867d\u7136\u4e0d\u80fd\u5229\u7528\u591a\u7ebf\u7a0b\u5b9e\u73b0\u591a\u6838\u4efb\u52a1\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u591a\u8fdb\u7a0b\u5b9e\u73b0\u591a\u6838\u4efb\u52a1\u3002\u591a\u4e2aPython\u8fdb\u7a0b\u6709\u5404\u81ea\u72ec\u7acb\u7684GIL\u9501\uff0c\u4e92\u4e0d\u5f71\u54cd\u3002 - \u5982\u679c\u4e00\u5b9a\u8981\u5728Python\u591a\u7ebf\u7a0b\u4e2d\u5229\u7528\u591a\u6838\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7C\u6269\u5c55\u5b9e\u73b0\u3002 - \u9501\u672c\u8eab\u5c5e\u4e8e\u5171\u4eab\u53d8\u91cf\uff0c\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u8fd9\u91cc\u7684\u8bf4\u7684\u9501\u4e3b\u8981\u662f threading.Lock() \u4e92\u65a5\u9501\uff0c\u8fd8\u6709\u5176\u4ed6\u9501\u7c7b\u578b\u3002 ThreadLocal \uff1a - \u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u7ebf\u7a0b\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\u66f4\u597d\uff08\u8fd9\u6837\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u6709\u4e00\u4efd\uff09\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5171\u4eab\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u5168\u5c40\u53d8\u91cf\u4f7f\u7528\u5fc5\u987b\u52a0\u9501\u3002 - \u8981\u5728\u4e00\u4e2a\u7ebf\u7a0b\u5185\u5c40\u90e8\u53d8\u91cf\uff0c\u9ebb\u70e6\u7684\u662f\uff0c\u5982\u679c\u53e6\u4e00\u4e2a\u51fd\u6570\u9700\u8981\u4f7f\u7528\u8be5\u53d8\u91cf\u5c31\u5fc5\u987b\u4f5c\u4e3a\u53c2\u6570\u4f20\u8fdb\u53bb\u3002\u8fd9\u6837\u591a\u8c03\u7528\u51e0\u5c42\u540e\u53c2\u6570\u4f1a\u8d8a\u6765\u8d8a\u591a\u3002 - \u8fd8\u6709\u4e00\u4e2a\u65b9\u6cd5\u5c31\u662f\u5728\u4e00\u4e2a\u5168\u5c40\u7684\u5b57\u5178\u4e2d\u6839\u636e\u7ebf\u7a0bID\u4f5c\u4e3akey\uff0c\u4fdd\u5b58\u5c5e\u4e8e\u4e0d\u540c\u7ebf\u7a0b\u7684\u540c\u7c7b\u578b\u5bf9\u8c61\uff0c\u7ebf\u7a0b\u4e2d\u6839\u636eID\u53bb\u83b7\u53d6\u3002\u8fd9\u6837\u7406\u8bba\u4e0a\u867d\u7136\u53ef\u884c\uff0c\u4f46\u662f\u592a\u9ebb\u70e6\u4e86\uff0c\u5e76\u4e14\u8fd8\u9700\u8981\u6ce8\u610f\u5b57\u5178\u7684\u5e76\u53d1\u8bbf\u95ee\u3002 - \u4e3a\u4e86\u5e94\u5bf9\u8fd9\u79cd\u95ee\u9898\uff0c\u5c31\u51fa\u73b0\u4e86 ThreadLocal \u5bf9\u8c61\u3002 import threading class Student(): def __init__(self, name) -> None: self.name = name def __str__(self) -> str: return f\"Student {self.name}\" # create global ThreadLocal object local_shool = threading.local() def process_student(): std = local_shool.student print(f\"hello, {std} in thread {threading.current_thread().name}\") def process_thread(name): local_shool.student = Student(name) # bind thread local object to atrribute of global threading.local object process_student() if __name__ == \"__main__\": t1 = threading.Thread(target=process_thread, args=(\"Alice\",), name=\"Thread-A\") t2 = threading.Thread(target=process_thread, args=(\"Bob\",), name=\"Thread-B\") t1.start() t2.start() t1.join() t2.join() \u521b\u5efa\u5168\u5c40\u7684 thread.local() \u5bf9\u8c61\u4e4b\u540e\uff0c\u5c06\u7ebf\u7a0b\u5c40\u90e8\u7684\u53d8\u91cf\u7ed1\u5b9a\u5230\u5176\u4e0a\uff0c\u5c31\u53ef\u4ee5\u5728\u7ebf\u7a0b\u5185\u90e8\u8bbf\u95ee\u8be5\u7ebf\u7a0b\u5bf9\u5e94\u7684\u5bf9\u8c61\u4e86\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u6709\u8be5\u5bf9\u8c61\uff0c\u4f46\u662f\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u4e0d\u4e00\u6837\u3002 ThreadLocal \u6700\u5e38\u89c1\u7684\u7528\u6cd5\u662f\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u7ed1\u5b9a\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\uff0cHTTP\u8bf7\u6c42\uff0c\u7528\u6237\u8eab\u4efd\u4fe1\u606f\u7b49\u3002 \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\uff1a - \u4e3a\u4e86\u5b9e\u73b0\u591a\u4efb\u52a1\uff0c\u6211\u4eec\u901a\u5e38\u4e3a\u4f7f\u7528Master-Worker\u6a21\u5f0f\uff0c\u4e00\u4e2a\u4e3b\u8fdb\u7a0b/\u7ebf\u7a0b\u8d1f\u8d23\u4efb\u52a1\u5206\u53d1\uff0c\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b/\u7ebf\u7a0b\u8d1f\u8d23\u4efb\u52a1\u6267\u884c\u3002 - \u591a\u8fdb\u7a0b\u6a21\u5f0f\u4f18\u70b9\u662f\u7a33\u5b9a\u6027\u9ad8\uff0c\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u5d29\u6e83\uff0c\u4e0d\u4f1a\u5f71\u54cd\u4e3b\u8fdb\u7a0b\u548c\u5176\u4ed6\u5b50\u8fdb\u7a0b\u3002\uff08\u5f53\u7136\u4e3b\u8fdb\u7a0b\u5d29\u6e83\u5176\u4ed6\u8fdb\u7a0b\u4e5f\u65e0\u6cd5\u5e78\u514d\uff0c\u4f46\u662f\u4e3b\u8fdb\u7a0b\u53ea\u8d1f\u8d23\u4efb\u52a1\u5206\u53d1\u4e00\u822c\u5d29\u6e83\u6982\u7387\u6bd4\u8f83\u4f4e\uff09\u3002 - \u591a\u8fdb\u7a0b\u7684\u7f3a\u70b9\u662f\u521b\u5efa\u8fdb\u7a0b\u7684\u4ee3\u4ef7\u8f83\u5927\uff0c\u7c7bUnix\u4e0b\uff0c fork \u8fd8\u884c\uff0c\u4f46Windows\u4e0b\uff0c\u8fdb\u7a0b\u521b\u5efa\u7684\u5f00\u9500\u5f88\u5927\u3002\u64cd\u4f5c\u7cfb\u7edf\u80fd\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u91cf\u4e5f\u662f\u6709\u9650\u7684\u3002 - \u591a\u7ebf\u7a0b\u6a21\u5f0f\u7684\u8bdd\uff0c\u7ebf\u7a0b\u521b\u5efa\u7684\u5f00\u9500\u4f1a\u6bd4\u8fdb\u7a0b\u5c0f\u4e00\u4e9b\u3002\u591a\u7ebf\u7a0b\u4e0b\u4efb\u4f55\u4e00\u4e2a\u5b50\u7ebf\u7a0b\u5d29\u6e83\u90fd\u53ef\u80fd\u5bfc\u81f4\u6574\u4e2a\u7a0b\u5e8f\u5d29\u6e83\uff0c\u56e0\u4e3a\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u5185\u5b58\u3002 - \u65e0\u8bba\u662f\u7ebf\u7a0b\u8fd8\u662f\u8fdb\u7a0b\uff0c\u5207\u6362\u90fd\u662f\u6709\u5f00\u9500\u7684\uff0c\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u591a\u5230\u4e00\u5b9a\u7a0b\u5ea6\uff0c\u5149\u662f\u5207\u6362\u53ef\u80fd\u5c31\u4f1a\u6d88\u8017\u5927\u91cfCPU\u8d44\u6e90\uff0c\u5f97\u4e0d\u507f\u5931\u3002 - \u8003\u8651\u91c7\u7528\u591a\u4efb\u52a1\u5904\u7406\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u5c06\u4efb\u52a1\u5206\u4e3aIO\u5bc6\u96c6\u578b\u8fd8\u662f\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u3002\u8ba1\u7b97\u5bc6\u96c6\u578b\u5927\u91cf\u6d88\u8017CPU\u8d44\u6e90\uff0c\u5bf9\u7a0b\u5e8f\u6027\u80fd\u6709\u8981\u6c42\uff0cPython\u8fd9\u79cd\u811a\u672c\u8bed\u8a00\u8fd0\u884c\u6548\u7387\u4f4e\u4e0b\uff0c\u4e0d\u9002\u5408\u7528\u6765\u7f16\u5199\u8ba1\u7b97\u5bc6\u96c6\u578b\u7a0b\u5e8f\u3002IO\u5bc6\u96c6\u578b\u4efb\u52a1\u6d89\u53ca\u7f51\u7edc\u6587\u4ef6\u7b49IO\uff0cCPU\u6d88\u8017\u5c11\uff0c\u5927\u90e8\u5206\u65f6\u95f4\u7528\u4e8e\u7b49\u5f85IO\u64cd\u4f5c\uff0c\u5bf9\u4e8eIO\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u5e76\u884c\u7684\u4efb\u52a1\u8d8a\u591a\uff0cCPU\u6548\u7387\u8d8a\u9ad8\uff0c\u4f46\u4e5f\u6709\u4e00\u4e2a\u9650\u5ea6\u3002\u5e38\u89c1\u7684\u5927\u90e8\u5206\u4efb\u52a1\u90fd\u662fIO\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u6bd4\u5982Web\u5e94\u7528\u3002\u5bf9\u4e8eIO\u5bc6\u96c6\u578b\u8bed\u8a00\uff0c\u4f7f\u7528Python\u8fd9\u6837\u7684\u811a\u672c\u8bed\u8a00\u5f00\u53d1\u6bd4\u8f83\u5408\u9002\uff0c\u5f00\u53d1\u6548\u7387\u9ad8\uff0c\u8fd0\u884c\u6548\u7387\u4e5f\u4e0d\u5dee\u3002 - \u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u5982\u679c\u6d89\u53ca\u5230IO\u5bc6\u96c6\u64cd\u4f5c\uff0c\u5982\u679c\u91c7\u7528\u5355\u8fdb\u7a0b/\u7ebf\u7a0b\u6a21\u578b\u53ef\u80fd\u4f1a\u5bfc\u81f4IO\u65f6\u5176\u4ed6\u4efb\u52a1\u65e0\u6cd5\u5e76\u884c\u6267\u884c\uff0c\u9700\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u7b49\u5f85IO\u7684\u60c5\u51b5\u3002\u4e3a\u6b64\u624d\u9700\u8981\u591a\u8fdb\u7a0b\u548c\u591a\u7ebf\u7a0b\u6a21\u578b\u6765\u652f\u6301\u5e76\u884c\u3002 - \u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5bf9IO\u64cd\u4f5c\u505a\u4e86\u5de8\u5927\u6539\u8fdb\uff0c\u6700\u5927\u7684\u7279\u70b9\u5c31\u662f\u652f\u6301\u5f02\u6b65IO\uff0c\u5982\u679c\u5145\u5206\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f02\u6b65IO\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u8fdb\u7a0b/\u7ebf\u7a0b\u6765\u6267\u884c\u591a\u4efb\u52a1\u3002\u8fd9\u79cd\u5168\u65b0\u7684\u6a21\u578b\u6210\u4e3a \u4e8b\u4ef6\u9a71\u52a8\u6a21\u578b \u3002Nginx\u5c31\u662f\u652f\u6301\u5f02\u6b65IO\u7684Web\u670d\u52a1\u5668\uff0c\u5b83\u5728\u5355\u6838CPU\u4e0a\u91c7\u7528\u5355\u8fdb\u7a0b\u6a21\u578b\u5c31\u53ef\u4ee5\u9ad8\u6548\u5730\u652f\u6301\u591a\u4efb\u52a1\u3002\u5728\u591a\u6838CPU\u4e0a\uff0c\u53ef\u4ee5\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\uff08\u6570\u91cf\u4e0eCPU\u6838\u5fc3\u6570\u76f8\u540c\uff09\uff0c\u5145\u5206\u5229\u7528\u591a\u6838CPU\u3002 - \u5728Python\u8bed\u8a00\u4e2d\uff0c\u5355\u7ebf\u7a0b\u7684\u5f02\u6b65\u6a21\u578b\u6210\u4e3a\u534f\u7a0b\uff08\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u6709\u5bf9\u534f\u7a0b\u7684\u652f\u6301\uff09\uff0c\u6709\u4e86\u534f\u7a0b\u7684\u652f\u6301\uff0c\u5c31\u53ef\u4ee5\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7f16\u5199\u9ad8\u6548\u7684\u591a\u4efb\u52a1\u7a0b\u5e8f\u3002\u540e\u7eed\u63a2\u8ba8\u534f\u7a0b\uff08\u5b9e\u8df5\u4e2d\u771f\u6b63\u7528\u5f97\u591a\u7684\u4e1c\u897f\uff09\u3002 \u534f\u7a0b\uff1aTODO\u3002 - \u5bf9\u4e8e\u591a\u7ebf\u7a0b\u5e94\u7528\uff0cCPU\u901a\u8fc7\u5207\u7247\u7684\u65b9\u5f0f\u6765\u5207\u6362\u7ebf\u7a0b\u95f4\u7684\u6267\u884c\uff0c\u7ebf\u7a0b\u5207\u6362\u65f6\u9700\u8981\u8017\u65f6\u3002\u534f\u7a0b\uff0c\u5219\u53ea\u4f7f\u7528\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5206\u89e3\u4e00\u4e2a\u7ebf\u7a0b\u6210\u4e3a\u591a\u4e2a\u201c\u5fae\u7ebf\u7a0b\u201d\uff0c\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u89c4\u5b9a\u67d0\u4e2a\u4ee3\u7801\u5757\u7684\u6267\u884c\u987a\u5e8f\u3002 - \u9002\u7528\u573a\u666f\uff1a\u5f53\u7a0b\u5e8f\u4e2d\u5b58\u5728\u5927\u91cf\u4e0d\u9700\u8981CPU\u7684\u64cd\u4f5c\u65f6\uff08IO\uff09 \u5e38\u7528\u7b2c\u4e09\u65b9\u6a21\u5757 gevent \u548c greenlet \uff0c\u524d\u8005\u662f\u540e\u8005\u7684\u5c01\u88c5\uff0c\u5e38\u7528\u524d\u8005\u3002 \u5206\u5e03\u5f0f\u8fdb\u7a0b\uff1a - \u521b\u5efa\u591a\u4efb\u52a1\u7a0b\u5e8f\u65f6\uff0c\u5e94\u8be5\u9996\u9009\u591a\u8fdb\u7a0b\uff0c\u591a\u8fdb\u7a0b\u66f4\u7a33\u5b9a\uff0c\u800c\u4e14\u591a\u8fdb\u7a0b\u53ef\u4ee5\u90e8\u7f72\u5230\u4e0d\u540c\u7684\u673a\u5668\u4e0a\uff0c\u800c\u591a\u7ebf\u7a0b\u6700\u591a\u53ea\u80fd\u90e8\u7f72\u5230\u540c\u4e00\u673a\u5668\u7684\u591a\u4e2aCPU\u4e0a\u3002\u4f55\u51b5CPython\u7684\u591a\u7ebf\u7a0b\u4e0d\u80fd\u5e76\u884c\u3002 - Python\u7684 multiprocessing \u4e0d\u4ec5\u652f\u6301\u591a\u7ebf\u7a0b\uff0c\u5176\u4e2d\u7684\u5b50\u6a21\u5757 managers \u8fd8\u652f\u6301\u628a\u591a\u8fdb\u7a0b\u5206\u5e03\u5230\u591a\u53f0\u673a\u5668\u4e0a\uff0c\u4e00\u4e2a\u670d\u52a1\u8fdb\u7a0b\u4f5c\u4e3a\u8c03\u5ea6\u8005\uff0c\u4f9d\u9760\u7f51\u7edc\u901a\u4fe1\u5c06\u4efb\u52a1\u5206\u5e03\u5230\u5176\u4ed6\u591a\u4e2a\u8fdb\u7a0b\u3002\u5c01\u88c5\u5f88\u597d\uff0c\u4e0d\u5fc5\u4e86\u89e3\u7f51\u7edc\u901a\u4fe1\u7684\u7ec6\u8282\u3002 - \u4f8b\u5b50\uff1a\u901a\u8fc7 Queue \u901a\u4fe1\uff0c\u591a\u8fdb\u7a0b\uff0c\u53d1\u9001\u4efb\u52a1\u7684\u8fdb\u7a0b\u548c\u5904\u7406\u4efb\u52a1\u7684\u8fdb\u7a0b\u5206\u5e03\u5230\u4e0d\u540c\u673a\u5668\u4e0a\u3002\u901a\u8fc7 managers \u6a21\u5757\u628a Queue \u901a\u8fc7\u7f51\u7edc\u66b4\u9732\u51fa\u53bb\uff0c\u5c31\u53ef\u4ee5\u8ba9\u5176\u4ed6\u673a\u5668\u7684\u8fdb\u7a0b\u8bbf\u95ee Queue \u4e86\u3002 - \u4e3b\u8fdb\u7a0b\uff1a # -*- coding: utf-8 -*- # TaskMaster.py # distributed multi process, task manager import random, time, queue from multiprocessing.managers import BaseManager # queue that send tasks task_queue = queue.Queue() # queue that receive tasks result_queue = queue.Queue() class QueueManager(BaseManager): pass def get_task_q(): return task_queue def get_result_q(): return result_queue if __name__ == '__main__': # register two queues to network QueueManager.register('get_task_queue', callable=get_task_q) QueueManager.register('get_result_queue', callable=get_result_q) # bind to port 5000, authentication code abc manager = QueueManager(address=('127.0.0.1', 5000), authkey=b'abc') # start the manager manager.start() # get Queue object through network task = manager.get_task_queue() result = manager.get_result_queue() # put some tasks to task queue for i in range(10): n = random.randint(0, 10000) print(f\"Put task {n}\") task.put(n) # read result from result queue print(\"Try get results...\") for i in range(10): try: r = result.get(timeout=10) print(f\"Result : {r}\") except queue.Empty: print(\"The queue is empty...\") # shudown manager manager.shutdown() print(\"Master exit.\") \u5de5\u4f5c\u8fdb\u7a0b\uff1b # -*- coding: utf-8 -*- # TaskWorker.py # distributed multi process, task wroker import time, sys, queue from multiprocessing.managers import BaseManager class QueueManager(BaseManager): pass if __name__ == '__main__': QueueManager.register('get_task_queue') QueueManager.register('get_result_queue') server_addr = \"127.0.0.1\" print(f\"Connect to server {server_addr}...\") m = QueueManager(address=(server_addr, 5000), authkey=b'abc') # connect to server m.connect() # get Queue from network task = m.get_task_queue() result = m.get_result_queue() # get task from task queue, calculate and put result to result queue for i in range(10): try: n = task.get(timeout=1) print(f\"Run task {n} * {n}...\") r = f\"{n} * {n} = {n * n}\" time.sleep(1) result.put(r) except queue.Empty: print(\"task queue is empty.\") # end wrok process print(\"Worker exit.\") \u52a0\u4e86\u591a\u4f59\u7684\u5faa\u73af\u4fdd\u8bc15\u6b21\u4efb\u52a1\u80fd\u6267\u884c\u5b8c\uff0c\u6267\u884c\u65f6\u5728\u4e24\u4e2a\u7ec8\u7aef\u4e2d\u5206\u522b\u4f9d\u6b21\u6267\u884c python TaskMaster.py \u548c python TaskWorker.py \u3002\u5c06\u4f1a\u901a\u8fc7\u672c\u673a\u76845000\u7aef\u53e3\u8fdb\u884c\u7f51\u8def\u4ea4\u4e92\uff0c\u5b8c\u6210\u4efb\u52a1\u5206\u53d1\u3001\u6267\u884c\u548c\u7ed3\u679c\u83b7\u53d6\u3002\u4fee\u6539\u5730\u5740\u4e3a\u5c40\u57df\u7f51IP\u540e\u8fd8\u53ef\u4ee5\u5728\u865a\u62df\u673a/WSL\u548c\u672c\u673a\u4e2d\u6267\u884c\u3002 \u6ca1\u6709\u5bf9\u7f51\u7edc\u8fde\u63a5\u662f\u5426\u6210\u529f\u505a\u68c0\u67e5\uff0c\u9700\u8981\u5728\u4e3b\u7ebf\u7a0b\u8fde\u63a5\u8fd8\u5b58\u5728\u65f6\u6267\u884c\u5de5\u4f5c\u7ebf\u7a0b\u3002 QueueManager \u7ed9\u4efb\u52a1\u548c\u7ed3\u679c\u961f\u5217\u90fd\u6ce8\u518c\u4e86\u7f51\u7edc\u8c03\u7528\u63a5\u53e3\uff0c\u5728\u5de5\u4f5c\u8fdb\u7a0b\u4e2d\u8c03\u7528\u5c31\u80fd\u591f\u83b7\u53d6\u5230\u4e86\u3002 authkey \u662f\u6821\u9a8c\u7801\uff0c\u4fdd\u8bc1\u4e24\u53f0\u673a\u5668\u901a\u4fe1\u4e0d\u53d7\u5e72\u6270\u3002\u5982\u679c\u4e0d\u4e00\u81f4\uff0c\u7f51\u7edc\u8fde\u63a5\u4f1a\u5931\u8d25\u3002 \u603b\u7ed3\uff1a Python\u7684\u5206\u5e03\u5f0f\u8fdb\u7a0b\u63a5\u53e3\u7b80\u5355\u3001\u5c01\u88c5\u826f\u597d\uff0c\u9002\u5408\u628a\u7e41\u91cd\u4efb\u52a1\u5206\u5e03\u5230\u591a\u53f0\u673a\u5668\u3002 \u6ce8\u610f Queue \u7684\u4f5c\u7528\u662f\u7528\u6765\u4f20\u9012\u548c\u63a5\u6536\u7ed3\u679c\uff0c\u6bcf\u4e2a\u4efb\u52a1\u7684\u63cf\u8ff0\u5e94\u8be5\u5c3d\u91cf\u5c0f\u3002\u6bd4\u5982\u53d1\u9001\u4e00\u4e2a\u5904\u7406\u65e5\u5fd7\u6587\u4ef6\u7684\u4efb\u52a1\uff0c\u5c31\u4e0d\u8981\u53d1\u9001\u51e0\u767e\u5146\u7684\u65e5\u5fd7\u6587\u4ef6\u672c\u8eab\uff0c\u800c\u662f\u53d1\u9001\u65e5\u5fd7\u6587\u4ef6\u5b58\u653e\u7684\u5b8c\u6574\u8def\u5f84\uff0c\u7531Worker\u8fdb\u7a0b\u518d\u53bb\u5171\u4eab\u7684\u78c1\u76d8\u4e0a\u8bfb\u53d6\u6587\u4ef6\u3002 \u9605\u8bfb\uff1a - \u641e\u5b9apython\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b \u6b63\u5219\u8868\u8fbe\u5f0f \u6b63\u5219\u8868\u8fbe\u5f0f\uff1a - \u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u4e00\u79cd\u7528\u6765\u5339\u914d\u5b57\u7b26\u4e32\u7684\u5f3a\u6709\u529b\u7684\u6b66\u5668\u3002\u5b83\u7684\u8bbe\u8ba1\u601d\u60f3\u662f\u7528\u4e00\u79cd\u63cf\u8ff0\u6027\u7684\u8bed\u8a00\u6765\u7ed9\u5b57\u7b26\u4e32\u5b9a\u4e49\u4e00\u4e2a\u89c4\u5219\uff0c\u51e1\u662f\u7b26\u5408\u89c4\u5219\u7684\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u5c31\u8ba4\u4e3a\u5b83\u201c\u5339\u914d\u201d\u4e86\uff0c\u5426\u5219\uff0c\u8be5\u5b57\u7b26\u4e32\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u3002 - \u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u662f\u5408\u6cd5\u7684\u6b63\u5219\u7684\u65b9\u6cd5\uff0c\u521b\u5efa\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u8be5\u6b63\u5219\u8868\u8fbe\u5f0f\u53bb\u5339\u914d\u7528\u6237\u8f93\u5165\u3002 \u89c4\u5219\uff1a - \u6b63\u5219\u8868\u8fbe\u5f0f\u4e5f\u662f\u7528\u5b57\u7b26\u4e32\u6765\u8868\u793a\u7684\uff0c\u8868\u793a\u89c4\u5219\uff1a - \u76f4\u63a5\u7ed9\u51fa\u5b57\u7b26\u5219\u7cbe\u786e\u5339\u914d\u5b57\u7b26\u3002 - \\d \u5339\u914d\u6570\u5b57\u3002 - \\w \u5339\u914d\u6570\u5b57\u6216\u8005\u5b57\u6bcd\u3002 - \\b \u5339\u914d\u5355\u8bcd\u7684\u5f00\u59cb\u6216\u8005\u7ed3\u675f\u3002 - \\s \u5339\u914d\u7a7a\u767d\u7b26\uff0cTab\u7a7a\u683c\u7b49\u3002 - \u4e0a\u9762\u51e0\u4e2a\u7684\u5927\u5199\u7248\u672c\u8868\u53cd\u4e49\uff1a \\D \\W \\B \\S \u3002 - . \u5339\u914d\u9664\u6362\u884c\u7b26\u4ee5\u5916\u7684\u4efb\u610f\u5b57\u7b26\u3002 - \u53d8\u957f\u5b57\u7b26\uff1a\u8ddf\u5728\u4e00\u4e2a\u89c4\u5219\u540e\u3002 - * \u5339\u914d\u4efb\u610f\u5b57\u7b26\uff0c\u5305\u62ec0\u4e2a\u3002 - + \u5339\u914d\u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26\u3002 - ? \u5339\u914d0\u4e2a\u62161\u4e2a\u5b57\u7b26\u3002 - {m} \u5339\u914dm\u4e2a\u5b57\u7b26\u3002 - {n,} \u5339\u914dn\u4e2a\u6216\u66f4\u591a\u4e2a\u5b57\u7b26\u3002 - {n,m} \u5339\u914dn\u5230m\u4e2a\uff08\u5305\u62ecm\uff09\u5b57\u7b26\u3002 - \u7279\u6b8a\u5b57\u7b26 .*+?,;-\\_{}()|^$ \u9700\u8981\u4f7f\u7528 \\ \u8f6c\u4e49\u3002 - \u8868\u793a\u8303\u56f4\uff1a [] \uff0c\u5176\u4e2d\u53ef\u4ee5\u4f7f\u7528 - \u524d\u540e\u8ddf\u6570\u5b57\u6216\u5b57\u6bcd\uff0c\u8868\u793a\u67d0\u4e2a\u5b57\u7b26\u5230\u67d0\u4e2a\u5b57\u7b26\u3002 - \u5982 [a-zA-Z0-9_] \u5339\u914d\u6570\u5b57\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\u3002 [a-z0-9A-Z_] \u7b49\u4ef7\u4e8e \\w - \u5339\u914d\u4e00\u4e2a\u8303\u56f4\u4e2d\u7684\u67d0\u5b57\u7b26\u65f6\u524d\u9762\u52a0 ^ \u8868\u53cd\u4e49\uff1a [^a-z] \u5339\u914d\u6240\u6709\u975e\u5c0f\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u3002 - \u5339\u914d\u4e24\u8005\u4e2d\u4e00\u8005 | \uff0c A|B \u3002 - ^ \u8868\u884c\u5f00\u5934\uff0c ^\\d \u8868\u793a\u4ee5\u6570\u5b57\u5f00\u5934\u3002 - $ \u8868\u884c\u7ed3\u675f\uff0c \\d$ \u8868\u793a\u4ee5\u6570\u5b57\u7ed3\u675f\u3002\u5339\u914d\u4e00\u6574\u884c\u53ef\u4ee5\u7528 ^ \u5f00\u5934\uff0c $ \u7ed3\u5c3e\u3002 Python\u4e2d\u7684\u6b63\u5219\u8868\u793a\u5f0f\uff1a - Python\u5b57\u7b26\u4e32\u4e2d\u672c\u8eab\u5b58\u5728\u8f6c\u4e49\uff0c\u800c\u6b63\u5219\u5b57\u7b26\u4e32\u67d0\u4e9b\u5b57\u7b26\u4e5f\u5b58\u5728\u8f6c\u4e49\uff0c\u4e3a\u4e86\u907f\u514d\u6df7\u6dc6\uff0c\u5b9e\u8df5\u4e2d\u5efa\u8bae\u5168\u90e8\u4f7f\u7528 r \u524d\u7f00\u539f\u59cb\u5b57\u7b26\u4e32\u8868\u793a\u6b63\u5219\u5b57\u7b26\u4e32\u3002\u5982\u6b64\u4fbf\u53ea\u9700\u8981\u8003\u8651 '\" \u7684\u8f6c\u4e49\u4e86\u3002 - import re - re.match(pattern, string) \u5339\u914d\u6210\u529f\u5219\u8fd4\u56de\u4e00\u4e2a Match \u5bf9\u8c61\uff0c\u5931\u8d25\u8fd4\u56de None \u3002 - re.split() \u53ef\u4ee5\u5207\u5206\u5b57\u7b26\u4e32\uff0c - \u9664\u4e86\u7b80\u5355\u5730\u5224\u65ad\u662f\u5426\u5339\u914d\u4e4b\u5916\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u8fd8\u6709\u63d0\u53d6\u5b50\u4e32\u7684\u5f3a\u5927\u529f\u80fd\u3002\u7528 () \u8868\u793a\u7684\u5c31\u662f\u8981\u63d0\u53d6\u7684\u5206\u7ec4\uff08Group\uff09\u3002\u7528 re.Match.group(index) \u65b9\u6cd5\u3002 group(0) \u6c38\u8fdc\u662f\u539f\u59cb\u5b57\u7b26\u4e32\uff0c group(1) \u3001 group(2) \u3001...\u8868\u793a\u7b2c1\u30012\u3001...\u4e2a\u5b50\u4e32\u3002 - \u6b63\u5219\u5339\u914d\u9ed8\u8ba4\u662f\u8d2a\u5a6a\u5339\u914d\uff0c\u4e5f\u5c31\u662f\u5339\u914d\u5c3d\u53ef\u80fd\u591a\u7684\u5b57\u7b26\u3002\u4e3a\u4e86\u91c7\u7528\u975e\u8d2a\u5a6a\u5339\u914d\uff0c\u53ef\u4ee5\u5728\u8868\u6570\u91cf\u7684\u5b57\u7b26\u540e\u7f00\u540e\u518d\u52a0\u4e00\u4e2a ? \u3002 \u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\uff1a - \u5728Python\u4e2d\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\uff0c\u5185\u90e8\u4f1a\u5148\u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5982\u679c\u6b63\u5219\u8868\u8fbe\u5f0f\u672c\u8eab\u4e0d\u5408\u6cd5\u4f1a\u62a5\u9519\uff0c\u7136\u540e\u518d\u7528\u7f16\u8bd1\u540e\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u53bb\u5339\u914d\u5b57\u7b26\u4e32\u3002 - \u5982\u679c\u8981\u5339\u914d\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u591a\u6b21\uff0c\u53ef\u4ee5\u7f16\u8bd1\u540e\u518d\u53bb\u5339\u914d\uff0c\u63d0\u5347\u6267\u884c\u6548\u7387\u3002 - \u4f7f\u7528 re.compile(pattern) \u7f16\u8bd1\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a re.Pattern \u5bf9\u8c61\uff0c\u4f7f\u7528\u8fd9\u4e2a\u5bf9\u8c61\u53bb\u5339\u914d\u5b57\u7b26\u4e32\u4e0d\u9700\u8981\u518d\u4f20\u5165\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u66f4\u591a\u6b63\u5219\u8868\u8fbe\u5f0f\u5185\u5bb9\uff1a - \u6355\u83b7\u3001\u96f6\u5bbd\u65ad\u8a00\u3001\u8d1f\u5411\u96f6\u5bbd\u65ad\u8a00\u3001\u6ce8\u91ca\u3001\u5e73\u8861\u7ec4\u3001\u9012\u5f52\u5339\u914d\u7b49\u6709\u673a\u4f1a\u63a5\u89e6\u5230\u518d\u8be6\u7ec6\u4e86\u89e3\u3002 \u5e38\u7528\u5185\u5efa\u6a21\u5757 datetime - from datetime import datetime \uff0c\u524d\u8005\u662f\u6a21\u5757\uff0c\u540e\u8005\u662f\u7c7b\u8868\u793a\u65e5\u671f\u548c\u65f6\u95f4\u3002 - \u5f53\u524d\u65f6\u533a\u65f6\u95f4 datetime.now() \uff0c\u6807\u51c6\u65f6\u533a\u65f6\u95f4 datetime.utcnow() \u3002 - \u6784\u9020\u6307\u5b9a\u65e5\u671f\u65f6\u95f4\uff1a datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]]) - \u65f6\u95f4\u6233\uff1a datetimeInstance.timestamp() \uff0c\u4eceUTC+00:00\u65f6\u533a\u76841970\u5e741\u67081\u65e500:00:00\u65f6\u523b\uff08Epoch Time\uff09\u5230\u73b0\u5728\u7684\u65f6\u523b\u7684\u79d2\u6570\u6210\u4e3a\u65f6\u95f4\u6233\uff0c\u5355\u4f4d\u662f\u79d2\uff0c\u6d6e\u70b9\u6570\uff0c\u7cbe\u786e\u5230\u5fae\u5999\uff08\u5c0f\u6570\u70b9\u540e6\u4f4d\uff09\u3002\u65f6\u95f4\u6233\u548c\u65f6\u533a\u3001\u95f0\u5e74\u95f0\u79d2\u7b49\u65e0\u5173\u3002 - \u65f6\u95f4\u6233\u8f6c datetime \uff1a datetime.fromtimestamp(stamp) \uff0c\u7ed3\u679c\u662f\u672c\u5730\u65f6\u533a\u3002 - \u65f6\u95f4\u6233\u8f6cUTC\u6807\u51c6\u65f6\u533a\uff08UTC+00:00\uff09\u65f6\u95f4\uff1a datetime.utcfromtimestamp(stamp) \u3002 - \u5b57\u7b26\u4e32\u8f6c datetime \uff1a datetime.strptime(\"2021-1-1 10:00:01\", \"%Y-%m-%d %H:%M:%S\") \uff0c\u65f6\u95f4\u5b57\u7b26\u4e32\u548c\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u683c\u5f0f\u8981\u543b\u5408\uff0c\u8be6\u89c1 \u6587\u6863 \u3002\u5f97\u5230\u7684\u65f6\u95f4\u6ca1\u6709\u65f6\u533a\u4fe1\u606f\u3002 - datetime \u8f6c\u5b57\u7b26\u4e32\uff1a datetime.now().strftime('%a, %b %d %H:%M') \u3002\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u540c\u4e0a\u89c1\u6587\u6863\u3002 - \u8868\u65f6\u95f4\u95f4\u9694\u7684\u7c7b\uff1a timedelta \uff0c\u652f\u6301\u52a0\u51cf\u3001\u6b63\u8d1f\u53f7\u7edd\u5bf9\u503c\u3001\u548c timedelta \u6bd4\u8f83\uff0c\u4e0e\u6574\u6570\u505a\u4e58\u9664\u6cd5\u3002\u6784\u9020\uff1a timdelta(days, seconds, microseconds) \u3002\u4e24\u4e2a datetime \u76f8\u51cf\u4f1a\u5f97\u5230\u4e00\u4e2a timedelta \u3002 - \u65f6\u533a\u4fe1\u606f\uff1a timezone \u7c7b\u3002 - \u521b\u5efaUTC+8:00\u65f6\u533a\uff1a timezone(timedelta(hours=8)) - datetime \u6709 tzinfo \u5c5e\u6027\uff0c\u9ed8\u8ba4\u662f None \u65f6\u8868\u793a\u5f53\u524d\u65f6\u533a\u3002 - \u5f3a\u5236\u66ff\u6362\u65f6\u533a\uff1a datetimeinstance.replace(tzinfo=timezone(timedelta(hours=7))) \uff0c\u65f6\u95f4\u65e5\u671f\u4e0d\u4f1a\u53d8\uff0c\u53ea\u662f\u5f3a\u5236\u6539\u53d8\u65f6\u533a\u3002 - \u65f6\u533a\u8f6c\u6362\uff1a - astimezone(self, tz=None) \u65b9\u6cd5\u5207\u6362\u5230\u67d0\u4e00\u65f6\u533a\uff0c\u9ed8\u8ba4\u5f53\u524d\u65f6\u533a\u3002 - \u5982\u679c\u4ee5\u524d\u6ca1\u6709\u65f6\u533a\u4fe1\u606f None \uff0c\u90a3\u4e48\u5c31\u662f\u4ece\u5f53\u524d\u65f6\u533a\u8f6c\u5230\u7279\u5b9a\u65f6\u533a\u3002 - \u5173\u952e\u5728\u4e8e\u8981\u77e5\u9053\u62ff\u5230\u4e00\u4e2a datetime \u65f6\u5b83\u7684\u65f6\u533a\uff0c\u4e00\u822c\u6bd4\u5982 datetime.now() \u662f\u4e0d\u5305\u542b\u65f6\u533a\u4fe1\u606f\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7 tzinfo \u5c5e\u6027\u8bbe\u7f6e\u6216\u8005\u5148\u8c03\u7528\u4e00\u6b21\u52a0\u4e0a\u65f6\u533a\u4fe1\u606f\u3002 collections - \u547d\u540d\u5143\u7ec4\uff1a namedtuple \u51fd\u6570\uff0c\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u547d\u540d\u4e86\u7684\u5143\u7ec4\uff0c\u5143\u7d20\u4e2a\u6570\u56fa\u5b9a\uff0c\u5e76\u53ef\u4ee5\u6307\u5b9a\u5c5e\u6027\u540d\u79f0\uff0c\u9664\u4e86\u4e0b\u6807\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u540d\u79f0\u6765\u8bbf\u95ee\u5143\u7d20\u3002 Point = namedtuple('Point', ['x', 'y']) \u3002 - \u53cc\u5411\u5217\u8868\uff1a deque \uff0c\u4f7f\u7528 list \u63d2\u5165\u5220\u9664\u6548\u7387\u4e0d\u9ad8\uff0c deque \u53ef\u4ee5\u7528\u4f5c\u961f\u5217\u548c\u6808\uff0c\u63d0\u4f9b\u9ad8\u6548\u5934\u5c3e\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u3002\u65b9\u6cd5 append pop appendleft popleft \u3002 - defaultdict \uff1a\u4f7f\u7528 dict \u65f6\uff0c\u5982\u679ckey\u4e0d\u5b58\u5728\uff0c\u4f1a\u629b\u51fa KeyError \uff0c\u5982\u679c\u5e0c\u671bkey\u4e0d\u5b58\u5728\u65f6\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u503c\uff0c\u53ef\u4ee5\u7528 defaultdict \u3002 - OrderedDict \uff1a\u6709\u5e8f\u5b57\u5178\uff0c\u5143\u7d20\u4f1a\u6309\u7167key\u63d2\u5165\u987a\u5e8f\u6392\u5217\u3002 - ChainMap \uff1a\u5c06\u591a\u4e2a dict \u6709\u5e8f\u5730\u7ec4\u5408\u8d77\u6765\uff0c\u6784\u6210\u4e00\u4e2a\u903b\u8f91\u4e0a\u7684\u5b57\u5178\uff0c\u67e5\u627e\u65f6\u4f1a\u6309\u7167\u987a\u5e8f\u4f9d\u6b21\u67e5\u627e\u6bcf\u4e00\u4e2a\u5b57\u5178\uff0c\u548c\u591a\u4e2a\u5b57\u5178\u53d6\u5e76\u96c6\u6709\u533a\u522b\u3002\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u5c42\u6b21\u4f18\u5148\u7ea7\u67e5\u627e\uff0c\u6bd4\u5982\u5e94\u7528\u7a0b\u5e8f\u5f80\u5f80\u90fd\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u53c2\u6570\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u4f20\u5165\uff0c\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u4f20\u5165\uff0c\u8fd8\u53ef\u4ee5\u6709\u9ed8\u8ba4\u53c2\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u7528ChainMap\u5b9e\u73b0\u53c2\u6570\u7684\u4f18\u5148\u7ea7\u67e5\u627e\u3002 - Counter \uff1a\u8ba1\u6570\u5668\uff0c dict \u5b50\u7c7b\uff0cvalue\u7c7b\u578b\u662f\u6574\u6570\uff0c\u7528\u6765\u8ba1\u6570\u3002 - Python\u547d\u540d\u611f\u89c9\u6709\u70b9\u6df7\u4e71\uff0c\u6709\u65f6\u5927\u9a7c\u5cf0\u6709\u65f6\u5168\u5c0f\u5199\u3002 base64 - Base64\u7f16\u7801\u662f\u4e00\u79cd\u752864\u4e2a\u5b57\u7b26\u6765\u7f16\u7801\u4efb\u610f\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u65b9\u6cd5\u3002 - \u4f17\u6240\u5468\u77e5\u6587\u672c\u7f16\u8f91\u5668\u65e0\u6cd5\u5904\u7406\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u56e0\u4e3a\u7f16\u7801\u4e0d\u4e00\u81f4\uff0c\u7528ASCII\u7684\u8bdd\u53ef\u80fd\u5b58\u5728\u975eASCII\u7684\u5b57\u7b26\uff0c\u5176\u4ed6\u7f16\u7801\u5b57\u7b26\u7f16\u7801\u4e5f\u4e0d\u4e00\u5b9a\u7b26\u5408\u3002\u4e3a\u4e86\u80fd\u7528\u6587\u672c\u5b57\u7b26\u4e32\u6765\u8868\u793a\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u5c31\u53ef\u4ee5\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u7528Base64\u8fdb\u884c\u7f16\u7801\u3002 - \u539f\u7406\uff1a\u51c6\u590764\u4e2a\u5b57\u7b26\u7684\u6570\u7ec4\uff0c\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u6309\u7167\u6bcf6\u4f4d\u7f16\u7801\u4e3a\u4e00\u4e2a8\u4f4d\u7684\u5b57\u7b26\uff08\u8fd96\u4f4d\u7684\u503c\u4f5c\u4e3a\u6570\u7ec4\u4e0b\u6807\u7684\u6570\u7ec4\u5143\u7d20\uff09\uff0c\u6bcf3\u4e2a\u5b57\u8282\u5c31\u4f1a\u7f16\u7801\u4e3a4\u4e2a\u5b57\u8282\u7684\u5b57\u7b26\u4e32\uff0c\u4f53\u79ef\u81a8\u80c033%\u3002\u5982\u679c\u4e8c\u8fdb\u5236\u6570\u636e\u957f\u5ea6\u4e0d\u662f3\u4e2a\u500d\u6570\uff0c\u7528 \\x00 \u5b57\u8282\u5728\u4e8c\u8fdb\u5236\u6570\u636e\u672b\u5c3e\u8865\u8db3\uff0c\u518d\u5728\u7f16\u7801\u672b\u5c3e\u6dfb\u52a0 = \u6216 == \u8868\u793a\u8865\u4e86\u591a\u5c11\u5b57\u8282\u3002 - \u8fd9\u4e2a\u5b57\u7b26\u6570\u7ec4\u662f\uff1a ['A', 'B', ..., 'Z', 'a', 'b', ..., 'z', '0', ..., '9', '+', '/'] \u5b57\u6bcd\u6570\u5b57\u52a0\u4e0a\u52a0\u51cf\u53f7\u517164\u4e2a\u5b57\u7b26\u3002 - \u7f16\u7801\u89e3\u7801\u90fd\u975e\u5e38\u7b80\u5355\uff0c\u7f16\u7801\u5c31\u67e5\u8868\u66ff\u6362\u5c31\u884c\uff0c\u89e3\u7801\u5219\u53cd\u63a8\u7d22\u5f15\uff0c\u6062\u590d\u4e8c\u8fdb\u5236\u6570\u636e\u5373\u53ef\u3002 - Python\u5185\u7f6e base64 \u6a21\u5757\u63d0\u4f9bBase64\u7f16\u89e3\u7801\u529f\u80fd\u3002 - \u7f16\u7801\uff1a base64.b64encode(b'helloworld') - \u89e3\u7801\uff1a base64.b64decode(b'aGVsbG93b3JsZA==') - \u7f16\u89e3\u7801\u662f\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u957f\u5ea6\u4e3a2\u7684\u5b57\u8282\u5e8f\u5217\u5173\u952e\u5b57\u53c2\u6570 altchars \u7528\u6765\u66ff\u6362 +/ \u4ee5\u83b7\u5f97\u5408\u6cd5\u7684url\u6216\u8005\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\u5b57\u7b26\u4e32\u3002 - \u5185\u7f6e\u7684\u7528 - \u548c _ \u6765\u66ff\u6362 +/ \u7684\u7f16\u89e3\u7801\u65b9\u6cd5\uff1a urlsafe_b64encode urlsafe_b64decode \u3002 - \u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e4964\u4e2a\u5b57\u7b26\u7684\u6392\u5217\u987a\u5e8f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u81ea\u5b9a\u4e49Base64\u7f16\u7801\uff0c\u4e0d\u8fc7\u901a\u5e38\u60c5\u51b5\u4e0b\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u3002 - Base64\u53ef\u4ee5\u7528\u4ee5\u7f16\u89e3\u7801\uff0c\u4e0d\u80fd\u7528\u4e8e\u52a0\u5bc6\uff0c\u5373\u4f7f\u4f7f\u7528\u81ea\u5b9a\u4e49\u7f16\u7801\u8868\uff08\u592a\u8fc7\u539f\u59cb\uff0c\u4e0d\u5b89\u5168\uff09\u3002 - Base64\u9002\u7528\u4e8e\u5c0f\u6bb5\u5185\u5bb9\u7684\u7f16\u7801\uff0c\u6bd4\u5982\u6570\u5b57\u8bc1\u4e66\u7b7e\u540d\u3001Cookie\u7684\u5185\u5bb9\u7b49\u3002 - \u4f46 = \u7528\u5728URL\u3001Cookie\u91cc\u9762\u4f1a\u9020\u6210\u6b67\u4e49\uff0c\u6240\u4ee5\uff0c\u5f88\u591aBase64\u7f16\u7801\u540e\u4f1a\u628a = \u53bb\u6389\u3002\u56e0\u4e3aBase64\u662f\u628a3\u5b57\u8282\u53d84\u5b57\u8282\uff0c\u6240\u4ee5\u89e3\u7801\u524d\u53ea\u9700\u8981\u5728Base64\u5b57\u7b26\u4e32\u540e\u52a0\u4e0a = \u4f7f\u957f\u5ea6\u53d8\u62104\u4e2a\u6574\u6570\u500d\u5373\u53ef\u3002 struct - struct \u6a21\u5757\u63d0\u4f9b bytes \u548c\u5176\u4ed6\u4e8c\u8fdb\u5236\u6570\u636e\u7c7b\u578b\u6bd4\u5982\u6574\u6570\u6d6e\u70b9\u6570\u4e4b\u7c7b\u7684\u8f6c\u6362\u3002 - import struct \u3002 - strcut.pack(format, *args) \u5c06\u591a\u4e2a\u6570\u636e\u6253\u5305\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5e8f\u5217\uff0c\u683c\u5f0f\u5b57\u7b26\u89c1 \u6587\u6863 \uff0c\u6bd4\u5982 >I \u5c31\u8868\u793a\u7528\u5927\u7aef\u5e8f\u7f16\u7801\u4e00\u4e2a4\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570\u3002 - Python\u4e0d\u9002\u5408\u7f16\u5199\u5e95\u5c42\u64cd\u4f5c\u5b57\u8282\u6d41\u7684\u4ee3\u7801\uff0c\u4f46\u5728\u5bf9\u6027\u80fd\u8981\u6c42\u4e0d\u9ad8\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u4f7f\u7528 struct \u3002 - \u89e3\u6790\u4e8c\u8fdb\u5236\u5e8f\u5217\uff1a struct.unpack(format, bytes) \uff0c\u5f97\u5230\u5143\u7ec4\u3002 - \u4f7f\u7528\u573a\u666f\uff1a\u4e00\u4e9b\u7279\u5b9a\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\uff08\u6bd4\u5982\u56fe\u7247BMP\u3001JPG\u7b49\uff09\u90fd\u4f1a\u6709\u7279\u5b9a\u7ed3\u6784\uff0c\u6b64\u65f6\u8bfb\u5165\u4e8c\u8fdb\u5236\u6d41\uff0c\u7136\u540e\u4f7f\u7528 struct \u89e3\u6790\u6216\u8005\u6253\u5305\u6587\u4ef6\u5934\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u3002 hashlib - hashlib \u63d0\u4f9b\u4e86\u5e38\u89c1\u7684\u6458\u8981\u7b97\u6cd5\uff0c\u6bd4\u5982MD5\uff0cSHA1\u7b49\u3002 - \u6458\u8981\u7b97\u6cd5\u7684\u76ee\u7684\u4e3b\u8981\u662f\u901a\u8fc7\u6458\u8981\u51fd\u6570\u5bf9\u4efb\u610f\u957f\u5ea6\u7684\u6570\u636e\u8ba1\u7b97\u51fa\u56fa\u5b9a\u957f\u5ea6\u7684\u6458\u8981 digest \uff0c\u53ef\u4ee5\u7528\u4ee5\u786e\u8ba4\u539f\u59cb\u6570\u636e\u662f\u5426\u88ab\u4eba\u7be1\u6539\u8fc7\u3002 import hashlib md5 = hashlib.md5() md5.update('how to use md5 in '.encode('utf-8')) md5.update('python hashlib?'.encode('utf-8')) print(md5.hexdigest()) \u5176\u4ed6\u6bd4\u5982 sha1 sha256 sha512 \u7528\u6cd5\u7c7b\u4f3c\uff0c\u5bf9\u8f83\u957f\u6570\u636e\u505a\u54c8\u5e0c\u65f6\u53ef\u4ee5\u5206\u591a\u6b21\u4f20\u5165 update \uff0c\u548c\u4e00\u6b21\u4f20\u5165\u8ba1\u7b97\u7ed3\u679c\u4e00\u81f4\u3002 MD5\u751f\u6210128\u4f4d\u7684\u5b57\u8282\uff0c\u901a\u5e38\u7528\u957f\u5ea632\u768416\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793a\u3002SHA1\u751f\u6210160\u4f4d\u7684\u5b57\u8282\uff0c\u901a\u5e38\u7528\u957f\u5ea640\u7684\u5b57\u7b26\u4e32\u8868\u793a\u3002\u6bd4SHA1\u66f4\u5b89\u5168\u7684\u7b97\u6cd5\u662fSHA256\u548cSHA512\uff0c\u5206\u522b\u751f\u6210256\u548c512\u4f4d\uff0c\u6458\u8981\u957f\u5ea6\u8d8a\u957f\u8d8a\u5b89\u5168\uff0c\u8ba1\u7b97\u8d77\u6765\u8d8a\u6162\u3002 \u901a\u5e38\u5728\u5f88\u591a\u7f51\u7ad9\u4e0b\u8f7d\u6587\u4ef6\u65f6\u90fd\u4f1a\u7ed9\u4e00\u4e2aSHA256\u68c0\u9a8c\u7801\uff0c\u53ef\u4ee5\u62ff\u5230\u6587\u4ef6\u540e\u8ba1\u7b97\u6587\u4ef6\u7684SHA256\u662f\u5426\u543b\u5408\u4ee5\u786e\u4fdd\u6587\u4ef6\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u88ab\u7be1\u6539\u3002 \u5e94\u7528\uff1a\u5728\u4fdd\u5b58\u7528\u6237\u5bc6\u7801\u65f6\u4fdd\u5b58\u7ecf\u8fc7\u6458\u8981\u4e4b\u540e\u7684\u54c8\u5e0c\uff0c\u800c\u4e0d\u662f\u539f\u59cb\u7684\u5bc6\u7801\u5b57\u7b26\u4e32\uff0c\u7528\u6237\u8f93\u5165\u5bc6\u7801\u540e\u8ba1\u7b97\u51fa\u54c8\u5e0c\u7136\u540e\u5bf9\u6bd4\u54c8\u5e0c\uff0c\u8fd9\u6837\u5373\u4f7f\u8fd0\u7ef4\u4eba\u5458\u80fd\u8bbf\u95ee\u6570\u636e\u5e93\u3001\u6570\u636e\u5e93\u88ab\u9ed1\u5ba2\u653b\u51fb\u7a83\u53d6\uff0c\u4e5f\u65e0\u6cd5\u77e5\u9053\u7528\u6237\u8f93\u5165\u7684\u5bc6\u7801\u660e\u6587\uff0c\u4ece\u800c\u9632\u6b62\u649e\u5e93\u7b49\u653b\u51fb\u624b\u6bb5\u3002\u5f53\u7136\u8fd9\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4e5f\u662f\u53d6\u51b3\u4e8e\u6458\u8981\u7b97\u6cd5\u672c\u8eab\u662f\u5426\u80fd\u591f\u88ab\u7834\u89e3\u7684\uff0c\u8fd9\u5c31\u662f\u53e6\u4e00\u4e2a\u95ee\u9898\u4e86\u3002\u6458\u8981\u5e76\u4e0d\u4e00\u5b9a\u5c31\u662f\u552f\u4e00\u7684\uff0c\u505a\u54c8\u5e0c\u90a3\u5f88\u663e\u7136\u5bf9\u4e0d\u540c\u6570\u636e\u505a\u54c8\u5e0c\u5f97\u5230\u7684\u54c8\u5e0c\u503c\u53ef\u80fd\u662f\u76f8\u540c\u7684\uff0c\u53ea\u662f\u5728\u5b9e\u8df5\u4e2d\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u6982\u7387\u662f\u975e\u5e38\u975e\u5e38\u5c0f\u7684\u3002 \u91c7\u7528MD5\u7b49\u54c8\u5e0c\u5b58\u50a8\u5bc6\u7801\u662f\u5426\u4e00\u5b9a\u5b89\u5168\u5462\uff1f\u4e5f\u4e0d\u4e00\u5b9a\uff0c\u56e0\u4e3a\u7528\u6237\u6781\u6709\u53ef\u80fd\u4f7f\u7528\u5f88\u7b80\u5355\u7684\u5bc6\u7801\u6bd4\u5982123456\uff0cqwerty\u7b49\u8fd9\u79cd\u5e38\u7528\u5bc6\u7801\uff0c\u4ece\u54c8\u5e0c\u503c\u53cd\u63a8\u5bc6\u6587\u662f\u975e\u5e38\u8d39\u52b2\u7684\uff0c\u4f46\u9ed1\u5ba2\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5e38\u89c1\u5bc6\u7801\u5230\u54c8\u5e0c\u503c\u7684\u6570\u636e\u5e93\uff08\u5f69\u8679\u8868\uff09\uff0c\u5982\u679c\u7528\u6237\u5bc6\u7801\u5f88\u7b80\u5355\u5728\u5e93\u4e2d\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u53cd\u63a8\u51fa\u5bc6\u7801\u3002\u6240\u4ee5\u4f5c\u4e3a\u7528\u6237\u6765\u8bf4\uff0c\u4e3a\u4e86\u9632\u6b62\u8fd9\u79cd\u653b\u51fb\uff0c\u4e00\u822c\u4e0d\u8981\u4f7f\u7528\u592a\u7b80\u5355\u7684\u5bc6\u7801\u3002 \u4e3a\u4e86\u4fdd\u62a4\u8f83\u4e3a\u7b80\u5355\u7684\u5bc6\u7801\u88ab\u53cd\u63a8\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u539f\u59cb\u5bc6\u6587\u5b57\u7b26\u4e32\u52a0\u4e0a\u4e00\u4e2a\u590d\u6742\u5b57\u7b26\u4e32\u4e4b\u540e\u518d\u505a\u54c8\u5e0c\uff0c\u4fd7\u79f0\u201c\u52a0\u76d0\u201d\u3002\u7ecf\u8fc7\u52a0\u76d0\u4e4b\u540e\uff0c\u53ea\u8981Salt\u4e0d\u88ab\u9ed1\u5ba2\u77e5\u9053\uff0c\u5c31\u65e0\u6cd5\u63a8\u51fa\u539f\u59cb\u5bc6\u6587\u3002\u751a\u81f3\u8ba1\u7b97\u54c8\u5e0c\u65f6\u5c06\u5bc6\u7801\u52a0\u4e0a\u7528\u6237\u540d\u548c\u76d0\u4e00\u8d77\u8ba1\u7b97\u3002 \u54c8\u5e0c\u7b97\u6cd5\u65e0\u6cd5\u7528\u4e8e\u52a0\u5bc6\uff0c\u56e0\u4e3a\u4fe1\u606f\u662f\u6709\u635f\u7684\u4e14\u65e0\u6cd5\u53cd\u63a8\u660e\u6587\uff0c\u53ea\u80fd\u7528\u4e8e\u9632\u7be1\u6539\u3002\u5b83\u7684\u5355\u5411\u8ba1\u7b97\u7279\u6027\u51b3\u5b9a\u4e86\u53ef\u4ee5\u5728\u4e0d\u5b58\u50a8\u660e\u6587\u53e3\u4ee4\u7684\u60c5\u51b5\u4e0b\u9a8c\u8bc1\u7528\u6237\u53e3\u4ee4\u3002 hmac - \u4e0a\u8ff0\u8ba1\u7b97\u54c8\u5e0c\u65f6\u5982\u679cSalt\u662f\u6211\u4eec\u968f\u673a\u751f\u6210\u7684\uff0c\u90a3\u4e48\u8ba1\u7b97MD5\u901a\u5e38\u91c7\u7528 md5(message+salt) \uff0c\u5982\u679c\u628a\u76d0\u770b\u505a\u53e3\u4ee4\uff0c\u8ba1\u7b97\u6d88\u606f\u7684\u54c8\u5e0c\u65f6\u9700\u8981\u63d0\u4f9b\u8fd9\u4e2a\u53e3\u4ee4\uff0c\u9a8c\u8bc1\u65f6\u4e5f\u5fc5\u987b\u8981\u63d0\u4f9b\u6b63\u786e\u7684\u53e3\u4ee4\u3002 - \u8fd9\u5b9e\u9645\u4e0a\u5c31\u662fHmac\u7b97\u6cd5\uff1aKeyed-Hashing for Message Authentication\u3002\u5b83\u901a\u8fc7\u4e00\u4e2a\u6807\u51c6\u7b97\u6cd5\uff0c\u5728\u8ba1\u7b97\u54c8\u5e0c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u628akey\u6df7\u5165\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u3002\u4e0d\u540c\u4e8e\u6211\u4eec\u81ea\u5df1\u8ba1\u7b97MD5\u52a0\u76d0\uff0cHmac\u7b97\u6cd5\u5bf9\u6240\u6709\u54c8\u5e0c\u7b97\u6cd5\u90fd\u9002\u7528\uff0c\u65e0\u8bbaMD5\u8fd8\u662fSHA1\uff0c\u91c7\u7528Hmac\u7b97\u6cd5\u4ee3\u66ff\u81ea\u5df1\u7f16\u5199\u52a0\u76d0\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7a0b\u5e8f\u66f4\u52a0\u6807\u51c6\u5316\u4e5f\u66f4\u5b89\u5168\u3002 - Python\u7684 hmac \u6a21\u5757\u53ef\u4ee5\u505a\u8fd9\u4ef6\u4e8b\u60c5\u3002 import hmac message = b\"hello,world!\" key = b\"sercet\" h = hmac.new(key, message, digestmod=\"MD5\") print(h.hexdigest()) h = hmac.new(key, message, digestmod=\"SHA1\") # SHA256, SHA512, ... print(h.hexdigest()) \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u9ed1\u5ba2\u77e5\u9053\u4e86\u7528\u6237\u7684\u76d0\uff0c\u90a3\u4e48\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u5df2\u77e5\u5bc6\u7801\u5217\u8868\u548c\u8fd9\u4e2a\u76d0\u7b97\u51fa\u4e00\u4e2a\u5e93\uff0c\u6700\u540e\u548c\u54c8\u5e0c\u503c\u5bf9\u6bd4\uff0c\u5982\u679c\u6709\u90a3\u4e48\u5c31\u7834\u89e3\u6210\u529f\u4e86\u3002\u5b9e\u8df5\u4e2d\u4e00\u822c\u4f1a\u7ed9\u6bcf\u4e2a\u7528\u6237\u751f\u6210\u4e00\u4e2a\u968f\u673a\u7684\u76d0\uff0c\u4fdd\u5b58\u5728\u670d\u52a1\u7aef\uff0c\u8fd9\u6837\u9ed1\u5ba2\u5c31\u65e0\u6cd5\u901a\u8fc7\u6bcf\u6b21\u8ba1\u7b97\u4e00\u4e2a\u76d0\u5f97\u5230\u4e00\u4e2a\u5e93\u6765\u5c1d\u8bd5\u649e\u51fa\u6240\u6709\u7528\u6237\u7684\u5bc6\u7801\uff0c\u800c\u662f\u8981\u5bf9\u6bcf\u4e00\u4e2a\u76d0\u90fd\u5bf9\u5bc6\u7801\u8868\u4e2d\u6240\u6709\u5bc6\u7801\u751f\u6210\u4e00\u4e2a\u5e93\uff0c\u6781\u5927\u5730\u589e\u5927\u4e86\u9ed1\u5ba2\u7684\u8ba1\u7b97\u6210\u672c\uff0c\u4f7f\u62ff\u5230\u6570\u636e\u5e93\u7684\u9ed1\u5ba2\u6279\u91cf\u8ba1\u7b97\u51fa\u5bc6\u7801\u8fd9\u4ef6\u4e8b\u60c5\u53d8\u5f97\u51e0\u4e4e\u4e0d\u53ef\u884c\u4e86\u3002\u4f46\u9ed1\u5ba2\u8fd8\u662f\u53ef\u4ee5\u9488\u5bf9\u4e00\u4e2a\u7279\u5b9a\u7684\u7528\u6237\u53bb\u5c1d\u8bd5\uff0c\u8fd9\u65f6\u5019\u8fd8\u662f\u9700\u8981\u7528\u6237\u8bbe\u7f6e\u66f4\u52a0\u590d\u6742\u7684\u5bc6\u7801\uff0c\u4ee5\u53ca\u4e0d\u5728\u4e0d\u540c\u7f51\u7ad9\u4f7f\u7528\u540c\u6837\u7684\u5bc6\u7801\u624d\u53ef\u4ee5\u5f88\u597d\u5730\u907f\u514d\u3002\u4e00\u822c\u4eba\u5176\u5b9e\u4e5f\u4e0d\u5177\u5907\u88ab\u9ed1\u5ba2\u653b\u51fb\u7684\u4ef7\u503c\uff0c\u4f46\u8fd8\u662f\u8981\u6709\u6700\u57fa\u672c\u7684\u5b89\u5168\u610f\u8bc6\u3002 \u6458\u8981\u7b97\u6cd5\u7684\u8f93\u5165\u662f\u5b57\u8282\u5e8f\u5217\u3002 itertools - \u5176\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7528\u4e8e\u8fed\u4ee3\u7684\u6709\u7528\u7684\u51fd\u6570\u3002 - \u6bd4\u5982Map/Reduce\u76f8\u5173\u64cd\u4f5c\u7684\u8865\u5145\u3002 - \u51e0\u4e2a\u65e0\u9650\u8fed\u4ee3\u5668\uff1a - count(start, step = 1) \u4ecen\u5f00\u59cb\u7684\u65e0\u9650\u8fed\u4ee3\u5668\u3002 - cycle(iterator) \u5faa\u73af\u8fed\u4ee3\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u7ed3\u675f\u540e\u53c8\u4ece\u5934\u5f00\u59cb\u3002 - repeat(elem, times) \u8fed\u4ee3\u4e00\u4e2a\u5143\u7d20\u6307\u5b9a\u6b21\u6570\uff0c\u4e0d\u4f20\u6b21\u6570\u5219\u662f\u65e0\u6570\u6b21\u3002 - \u8fed\u4ee3\u65f6\u624d\u56de\u53bb\u8bbf\u95ee\u5143\u7d20\uff0c\u4e0d\u4f1a\u4e8b\u5148\u521b\u5efa\u65e0\u9650\u7684\u5143\u7d20\u3002 - \u4e32\u8054\u591a\u4e2a\u8fed\u4ee3\u5668\uff0c\u5f62\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u8fed\u4ee3\u5668\uff1a chain(*iters) \u3002 - \u628a\u8fed\u4ee3\u5668\u4e2d\u76f8\u90bb\u7684\u91cd\u590d\u5143\u7d20\u6311\u51fa\u6765\u653e\u5728\u4e00\u8d77\uff1a groupby(iterable, grouprule) \uff0c\u6311\u9009\u89c4\u5219\u4e3a\u4f20\u5165\u7684\u51fd\u6570\uff0c\u53ea\u8981\u4f5c\u7528\u4e8e\u4e24\u4e2a\u5143\u7d20\u8fd4\u56de\u7684\u503c\u76f8\u7b49\u5c31\u88ab\u653e\u5230\u4e00\u7ec4\u3002 - \u8fd8\u6709\u5f88\u591a\u6709\u7528\u7684\u51fd\u6570\u3002 contextlib - Python\u4e2d\u8bfb\u5199\u6587\u4ef6\u8fd9\u79cd\u8d44\u6e90\u5904\u7406\u9700\u8981\u7279\u522b\u6ce8\u610f\uff0c\u9700\u8981\u786e\u4fdd\u5173\u95ed\uff0c\u4e00\u4e2a\u65b9\u6cd5\u662f\u4f7f\u7528 try...finally \uff0c\u4e0d\u8fc7\u5f88\u7e41\u7410\uff0c\u66f4\u5e38\u89c1\u7684\u662f\u4f7f\u7528 with \u8bed\u53e5\u3002 - \u9664\u4e86 open() \u51fd\u6570\u6253\u5f00\u6587\u4ef6\u5bf9\u8c61\uff0c\u5176\u5b9e\u5bf9\u4e8e\u4efb\u4f55\u5bf9\u8c61\uff0c\u53ea\u8981\u6b63\u786e\u5b9e\u73b0\u4e86\u4e0a\u4e0b\u6587\u7ba1\u7406\uff0c\u90fd\u80fd\u7528\u4e8e with \u8bed\u53e5\u3002 - \u5b9e\u73b0\u4e0a\u4e0b\u6587\u7ba1\u7406\u662f\u901a\u8fc7 __enter__ \u548c __exit__ \u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5b9e\u73b0\u7684\u3002 class Query(object): def __init__(self, name) -> None: self.name = name def __enter__(self): print('Begin') return self def __exit__(self, exc_type, exc_value, traceback): if exc_type: print('Error') else: print('End') def query(self): print(f\"Query info about {self.name}\") with Query('Bob') as q: q.query() \u56e0\u4e3a\u662f\u9e2d\u5b50\u7c7b\u578b\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u7ee7\u627f\u4ec0\u4e48\u7c7b\uff0c\u53ea\u9700\u8981\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u5728 with \u8bed\u53e5\u4e2d\u4f7f\u7528\u3002 \u4f7f\u7528 __enter__ __exit__ \u4f9d\u7136\u6bd4\u8f83\u7e41\u7410\uff0cPython\u6807\u51c6\u5e93 contextlib \u63d0\u4f9b\u4e86\u66f4\u7b80\u5355\u7684\u5199\u6cd5\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u6539\u5199\u4e3a\uff1a from contextlib import contextmanager class Query2(object): def __init__(self, name): self.name = name def query(self): print(f\"Query info about {self.name}\") @contextmanager def create_query(name): print(\"Begin\") q = Query2(name) yield q print('End') with create_query('Bob') as q: q.query() \u4f7f\u7528 @contextmanager \u88c5\u9970\u5668\uff0c\u5b9a\u4e49\u51fd\u6570\uff0c\u6267\u884c\u8981\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u5c06\u8981\u653e\u5728 with \u8bed\u53e5\u4e2d\u7684\u5bf9\u8c61 yield \u51fa\u53bb\uff0c\u5c06\u8fdb\u5165\u548c\u79bb\u5f00\u91ca\u653e\u8d44\u6e90\u7684\u903b\u8f91\u5199\u5728\u5176\u4e2d\u5373\u53ef\u3002 \u6267\u884c\u987a\u5e8f\uff1a yield \u524d\u7684\u8bed\u53e5\uff0c with \u5757\u4e2d\u8bed\u53e5\uff0c\u7136\u540e\u662f yield \u540e\u7684\u8bed\u53e5\u3002 \u5f88\u591a\u65f6\u5019\uff0c\u5e0c\u671b\u5728\u67d0\u6bb5\u4ee3\u7801\u6267\u884c\u524d\u540e\u81ea\u52a8\u6267\u884c\u7279\u5b9a\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u7528 @contextmanager \u5b9e\u73b0\u3002 \u6bd4\u5982\u8f93\u51faxml\u65f6\u8f93\u51fa\u5185\u5bb9\u540e\u81ea\u52a8\u8f93\u51fa\u5143\u7d20\u7684\u7ed3\u675f\u6807\u8bb0\u3002 @contextmanager def tag(name): print(f\"<{name}>\") yield print(f\"</{name}>\") with tag(\"h1\"): print(\"hello\") \u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u6ca1\u6709\u5b9e\u73b0\u4e0a\u4e0b\u6587\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u628a\u5b83\u7528\u4e8ewith\u8bed\u53e5\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u53ef\u4ee5\u7528 closing() \u6765\u628a\u8be5\u5bf9\u8c61\u53d8\u4e3a\u4e0a\u4e0b\u6587\u5bf9\u8c61\u3002 \u6548\u679c\u7c7b\u4f3c\u4e8e\uff1a\u7ed3\u675f\u540e\u81ea\u52a8\u8c03\u7528 close \u65b9\u6cd5\u3002 @contextmanager def closing(thing): try: yield thing finally: thing.close() \u8fd9\u4e2a\u5e93\u4e2d\u8fd8\u6709\u8bb8\u591a\u7528\u4e8e\u4e0a\u4e0b\u6587\u7ba1\u7406\u7684\u88c5\u9970\u5668\uff0c\u89c1 \u6587\u6863 \u3002 urllib - \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u64cd\u4f5cURL\u7684\u529f\u80fd\uff0c urllib \u6a21\u5757\u7684 request \u6a21\u5757\u53ef\u4ee5\u65b9\u4fbf\u7684\u6293\u53d6URL\u5185\u5bb9\uff0c\u4e5f\u5c31\u662f\u53d1\u9001\u4e00\u4e2aGET\u8bf7\u6c42\u5230\u6307\u5b9a\u7684\u9875\u9762\uff0c\u7136\u540e\u8fd4\u56deHTTP\u7684\u54cd\u5e94\u3002 from urllib import request with request.urlopen('https://baidu.com') as f: data = f.read() print('Status:', f.status, f.reason) for k, v in f.getheaders(): print('%s: %s' % (k, v)) print('Data:', data.decode('utf-8')) \u5982\u679c\u8981\u6a21\u62df\u6d4f\u89c8\u5668\u53d1\u9001GET\u8bf7\u6c42\uff0c\u5c31\u9700\u8981\u4f7f\u7528 Request \u5bf9\u8c61\uff0c\u6dfb\u52a0HTTP\u5934\uff0c\u5c31\u53ef\u4ee5\u628a\u8bf7\u6c42\u4f2a\u88c5\u6210\u6d4f\u89c8\u5668\uff1a req = request.Request('http://www.douban.com/') req.add_header('User-Agent', 'Mozilla/6.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/8.0 Mobile/10A5376e Safari/8536.25') with request.urlopen(req) as f: print('Status:', f.status, f.reason) for k, v in f.getheaders(): print('%s: %s' % (k, v)) print('Data:', f.read().decode('utf-8')) \u5982\u679c\u8981\u53d1\u9001POST\u8bf7\u6c42\uff0c\u5c31\u9700\u8981\u628a\u53c2\u6570 data \u4ee5bytes\u5f62\u5f0f\u4f20\u5165 \u8fd8\u6709\u66f4\u590d\u6742\u7684\u63a7\u5236\uff0c\u6bd4\u5982\u901a\u8fc7\u4e00\u4e2a\u4ee3\u7406\u53bb\u8bbf\u95ee\u7f51\u7ad9\uff0c\u53ef\u4ee5\u5229\u7528 ProxyHandler \u6765\u5904\u7406\u3002 urlopen \u5f97\u5230\u7684\u5bf9\u8c61\u662f\u4e00\u4e2afile-like\u5bf9\u8c61\uff0c\u53ef\u4ee5\u50cf\u6587\u4ef6\u4e00\u6837\u901a\u8fc7 read \u8bfb\u53d6\u3002 XML - XML\u6bd4JSON\u66f4\u590d\u6742\uff0c\u4e0d\u8fc7\u4f9d\u7136\u8fd8\u6709\u8bb8\u591a\u5730\u65b9\u5728\u4f7f\u7528\u3002 - XML\u6709\u4e24\u79cd\u64cd\u4f5c\u65b9\u6cd5\uff1aDOM(Document Object Model)\u548cSAX(Simple API for XML)\u3002DOM\u4f1a\u628a\u6574\u4e2aXML\u8bfb\u5165\u5185\u5b58\uff0c\u89e3\u6790\u4e3a\u6811\uff0c\u56e0\u6b64\u5360\u7528\u5185\u5b58\u5927\uff0c\u89e3\u6790\u6162\uff0c\u4f18\u70b9\u662f\u53ef\u4ee5\u4efb\u610f\u904d\u5386\u6811\u7684\u8282\u70b9\u3002SAX\u662f\u6d41\u6a21\u5f0f\uff0c\u8fb9\u8bfb\u8fb9\u89e3\u6790\uff0c\u5360\u7528\u5185\u5b58\u5c0f\uff0c\u89e3\u6790\u5feb\uff0c\u7f3a\u70b9\u662f\u6211\u4eec\u9700\u8981\u81ea\u5df1\u5904\u7406\u4e8b\u4ef6\u3002 - \u6b63\u5e38\u60c5\u51b5\u4e0b\u4f18\u5148\u8003\u8651SAX\uff0c\u56e0\u4e3aDOM\u592a\u5360\u7528\u5185\u5b58\u3002 - Python\u4f7f\u7528SAX\uff0c\u901a\u5e38\u6211\u4eec\u5173\u5fc3\u7684\u4e8b\u4ef6\u662f start_element \uff0c end_element \u548c char_data \uff0c\u51c6\u5907\u597d\u8fd93\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u89e3\u6790xml\u4e86\u3002 from xml.parsers.expat import ParserCreate class DefaultSaxHandler(object): def start_element(self, name, attrs): print('sax:start_element: %s, attrs: %s' % (name, str(attrs))) def end_element(self, name): print('sax:end_element: %s' % name) def char_data(self, text): print('sax:char_data: %s' % text) xml = r'''<?xml version=\"1.0\"?> <ol> <li><a href=\"/python\">Python</a></li> <li><a href=\"/ruby\">Ruby</a></li> </ol> ''' handler = DefaultSaxHandler() parser = ParserCreate() parser.StartElementHandler = handler.start_element parser.EndElementHandler = handler.end_element parser.CharacterDataHandler = handler.char_data parser.Parse(xml) \u9664\u4e86\u89e3\u6790\u5b57\u7b26\u4e32\u4e4b\u5916\uff0c\u751f\u6210\u5b57\u7b26\u4e32\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\u5b8c\u6210\u3002\u4e0d\u592a\u5efa\u8bae\u751f\u6210\u5927\u6bb5\u7684XML\uff0c\u6700\u597d\u4f7f\u7528JSON\u3002 HTMLParser - \u5982\u679c\u8981\u5b9e\u73b0\u4e00\u4e2a\u6d4f\u89c8\u5668\uff0c\u5047\u8bbehtml\u9875\u9762\u5df2\u7ecf\u5df2\u7ecf\u722c\u53d6\u5230\u4e86\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u89e3\u6790HTML\u3002 - HTML\u672c\u8d28\u4e0a\u662fXML\u7684\u5b50\u96c6\uff0c\u4f46\u662fHTML\u7684\u8bed\u6cd5\u6ca1\u6709XML\u90a3\u4e48\u4e25\u683c\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528\u6807\u51c6\u7684DOM\u6216SAX\u6765\u89e3\u6790HTML\u3002 - Python\u63d0\u4f9b\u4e86 HTMLParser \u6765\u89e3\u6790HTML\uff0c\u53ea\u9700\u8981\u7b80\u5355\u51e0\u884c\u4ee3\u7801\u3002 from html.parser import HTMLParser from html.entities import name2codepoint class MyHTMLParser(HTMLParser): def handle_starttag(self, tag, attrs): print('<%s>' % tag) def handle_endtag(self, tag): print('</%s>' % tag) def handle_startendtag(self, tag, attrs): print('<%s/>' % tag) def handle_data(self, data): print(data) def handle_comment(self, data): print('<!--', data, '-->') def handle_entityref(self, name): print('&%s;' % name) def handle_charref(self, name): print('&#%s;' % name) parser = MyHTMLParser() parser.feed('''<html> <head></head> <body> <!-- test html parser --> <p>Some <a href=\\\"#\\\">html</a> HTML&nbsp;tutorial...<br>END</p> </body></html>''') \u57fa\u672c\u903b\u8f91\u662f\u4ece HTMLParser \u6d3e\u751f\uff0c\u5b9e\u73b0\u5bf9\u5e94\u65b9\u6cd5\u5373\u53ef\u89e3\u6790\u3002 \u5e38\u7528\u7b2c\u4e09\u65b9\u6a21\u5757 \u9664\u4e86\u5185\u5efa\u6a21\u5757\uff0cPython\u8fd8\u6709\u6570\u91cf\u4f17\u591a\u7684\u7b2c\u4e09\u65b9\u6a21\u5757\u3002\u6240\u6709\u7684\u7b2c\u4e09\u65b9\u6a21\u5757\u90fd\u4f1a\u5728 PyPI - the Python Package Index \u4e0a\u6ce8\u518c\uff0c\u53ea\u8981\u627e\u5230\u5bf9\u5e94\u7684\u6a21\u5757\u540d\u5b57\uff0c\u5373\u53ef\u7528pip\u5b89\u88c5\u3002 Pillow - PIL\uff1aPython Imaging Library\uff0c\u5df2\u7ecf\u662fPython\u5e73\u53f0\u4e8b\u5b9e\u4e0a\u7684\u56fe\u50cf\u5904\u7406\u6807\u51c6\u5e93\u4e86\u3002\u4f46PIL\u4ec5\u652f\u6301\u5230Python2.7\uff0c\u540e\u7eed\u7531\u4e00\u7fa4\u5fd7\u613f\u8005\u5728PIL\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u4e86\u517c\u5bb9\u7684\u7248\u672c\uff0c\u540d\u5b57\u53ebPillow\uff0c\u652f\u6301\u6700\u65b0Python 3.x\uff0c\u53c8\u52a0\u5165\u4e86\u8bb8\u591a\u65b0\u7279\u6027\u3002 - \u5b89\u88c5\uff1a pip install pillow \u3002 - \u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u5b8c\u6210\u7f29\u653e\u548c\u6a21\u7cca\u7684\u64cd\u4f5c\uff1a from PIL import Image, ImageFilter # open an image im = Image.open('nephren.png') # get image size w, h = im.size print('Original image size: %sx%s' % (w, h)) # resize to 50% im.thumbnail((w//2, h//2)) print('Resize image to: %sx%s' % (w//2, h//2)) # save scaled image im.save('thumbnail.png', 'png') # blur an iamge im = Image.open('nephren.png') im2 = im.filter(ImageFilter.BLUR) im2.save('blur.png', 'png') PIL \u7684 ImageDraw \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7ed8\u56fe\u65b9\u6cd5\u8ba9\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7ed8\u56fe\u3002 \u66f4\u591a\u7528\u6cd5\u8be6\u89c1 \u6587\u6863 requests - Python\u5185\u7f6e\u7684 urllib \u53ef\u4ee5\u7528\u4e8e\u8bbf\u95ee\u7f51\u7edc\u8d44\u6e90\uff0c\u4f46\u662f\u7528\u8d77\u6765\u5f88\u9ebb\u70e6\u3002\u800c\u4e14\u7f3a\u5c11\u9ad8\u7ea7\u4e00\u70b9\u7684\u529f\u80fd\u3002 - \u66f4\u597d\u7684\u65b9\u6848\u662f\u4f7f\u7528 requests \u7b2c\u4e09\u65b9\u5e93\uff0c\u5904\u7406URL\u8d44\u6e90\u7279\u522b\u65b9\u4fbf\u3002 - \u5b89\u88c5 pip install requests - \u53d1\u9001GET\u8bf7\u6c42\uff1a import requests r = requests.get('https://baidu.com') print(r.status_code) print(r.text) \u5bf9\u4e8e\u5e26\u53c2\u6570\u7684URL\uff0c\u4f20\u5165\u4e00\u4e2a dict \u4f5c\u4e3a params \u53c2\u6570\u3002 requests \u4f1a\u81ea\u52a8\u68c0\u6d4b\u7f16\u7801\uff0c\u4f7f\u7528 encoding \u5c5e\u6027\u67e5\u770b\u3002 \u65e0\u8bba\u54cd\u5e94\u65f6\u6587\u672c\u8fd8\u662f\u4e8c\u8fdb\u5236\u5185\u5bb9\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528 content \u5c5e\u6027\u83b7\u53d6 bytes \u5bf9\u8c61\u3002 \u5bf9\u4e8e\u7279\u5b9a\u7c7b\u578b\u54cd\u5e94\uff0c\u6bd4\u5982JSON\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 json() \u65b9\u6cd5\u83b7\u53d6\u5230json\u5bf9\u8c61\u3002 \u9700\u8981\u4f20\u5165HTTP\u5934\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 headers \u53c2\u6570\u4f20\u5165\u3002 \u53d1\u9001POST\u8bf7\u6c42\uff0c\u53ea\u9700\u8981\u628a get() \u65b9\u6cd5\u4fdd\u5b58 post() \uff0c\u4f20\u5165 data \u53c2\u6570\u4f5c\u4e3a\u8bf7\u6c42\u6570\u636e\u5373\u53ef\u3002 requests\u9ed8\u8ba4\u4f7f\u7528 application/x-www-form-urlencoded \u5bf9POST\u6570\u636e\u7f16\u7801\u3002\u5982\u679c\u8981\u4f20\u9012JSON\u6570\u636e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165json\u53c2\u6570\u3002 \u4e0a\u4f20\u6587\u4ef6\u9700\u8981\u66f4\u590d\u6742\u7684\u7f16\u7801\u683c\u5f0f\uff0c\u4f46\u662frequests\u628a\u5b83\u7b80\u5316\u6210files\u53c2\u6570\u3002\u8bfb\u53d6\u6587\u4ef6\u65f6\uff0c\u6ce8\u610f\u52a1\u5fc5\u4f7f\u7528'rb'\u5373\u4e8c\u8fdb\u5236\u6a21\u5f0f\u8bfb\u53d6\uff0c\u8fd9\u6837\u83b7\u53d6\u7684bytes\u957f\u5ea6\u624d\u662f\u6587\u4ef6\u7684\u957f\u5ea6\u3002 \u540c\u6837\u8fd8\u53ef\u4ee5 put() delete() \u65b9\u6cd5\u8bf7\u6c42\u8d44\u6e90\u3002 \u9664\u4e86\u83b7\u53d6\u54cd\u5e94\u5185\u5bb9\uff0c\u83b7\u53d6\u54cd\u5e94\u7684\u5176\u4ed6\u4fe1\u606f\u4e5f\u5f88\u8f7b\u677e\uff0c\u6bd4\u5982\u54cd\u5e94\u5934 r.headers['Content-Type'] \u3002 requests\u5bf9Cookie\u505a\u4e86\u7279\u6b8a\u5904\u7406\uff0c\u4f7f\u5f97\u6211\u4eec\u4e0d\u5fc5\u89e3\u6790Cookie\u5c31\u53ef\u4ee5\u8f7b\u677e\u83b7\u53d6\u6307\u5b9a\u7684Cookie\u3002 r.cookies['ts'] \u3002 \u8981\u5728\u8bf7\u6c42\u4e2d\u4f20\u5165Cookie\uff0c\u53ea\u9700\u51c6\u5907\u4e00\u4e2adict\u4f20\u5165 cookies \u53c2\u6570\u3002 \u8981\u6307\u5b9a\u8d85\u65f6\uff0c\u4f20\u5165\u4ee5\u79d2\u4e3a\u5355\u4f4d\u7684 timeout \u53c2\u6570\u3002 \u66f4\u591a\u5185\u5bb9\u8be6\u89c1 \u6587\u6863 \u3002 chardet - \u4f5c\u7528\uff1a\u68c0\u6d4b\u7f16\u7801\u3002 - \u5b89\u88c5\uff1a pip install chardet \u3002 - \u62ff\u5230\u4e00\u4e2a bytes \u68c0\u6d4b\u5b83\u7684\u7f16\u7801\uff1a chardet.detect(b'Hello, world!') \u3002 - \u652f\u6301\u7f16\u7801\u89c1 \u6587\u6863 \u3002 psutil - \u5728Linux\u4e0b\uff0c\u6709\u8bb8\u591a\u7cfb\u7edf\u547d\u4ee4\u53ef\u4ee5\u8ba9\u6211\u4eec\u65f6\u523b\u76d1\u63a7\u7cfb\u7edf\u8fd0\u884c\u7684\u72b6\u6001\uff0c\u5982ps\uff0ctop\uff0cfree\u7b49\u7b49\u3002\u8981\u83b7\u53d6\u8fd9\u4e9b\u7cfb\u7edf\u4fe1\u606f\uff0cPython\u53ef\u4ee5\u901a\u8fc7subprocess\u6a21\u5757\u8c03\u7528\u5e76\u83b7\u53d6\u7ed3\u679c\u3002\u4f46\u8fd9\u6837\u505a\u663e\u5f97\u5f88\u9ebb\u70e6\uff0c\u5c24\u5176\u662f\u8981\u5199\u5f88\u591a\u89e3\u6790\u4ee3\u7801\u3002 - \u5728Python\u4e2d\u83b7\u53d6\u7cfb\u7edf\u4fe1\u606f\u7684\u53e6\u4e00\u4e2a\u597d\u529e\u6cd5\u662f\u4f7f\u7528psutil\u8fd9\u4e2a\u7b2c\u4e09\u65b9\u6a21\u5757\u3002\u987e\u540d\u601d\u4e49\uff0cpsutil = process and system utilities\uff0c\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e24\u884c\u4ee3\u7801\u5b9e\u73b0\u7cfb\u7edf\u76d1\u63a7\uff0c\u8fd8\u53ef\u4ee5\u8de8\u5e73\u53f0\u4f7f\u7528\uff0c\u652f\u6301Linux\uff0fUNIX\uff0fOSX\uff0fWindows\u7b49\uff0c\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\u548c\u8fd0\u7ef4\u5c0f\u4f19\u4f34\u4e0d\u53ef\u6216\u7f3a\u7684\u5fc5\u5907\u6a21\u5757\u3002 - \u4f7f\u7528 psutil \u53ef\u4ee5\u83b7\u53d6CPU\u4fe1\u606f\u3001\u5185\u5b58\u4fe1\u606f\u3001\u78c1\u76d8\u4fe1\u606f\u3001\u8fdb\u7a0b\u4fe1\u606f\u3001\u7528\u6237\u4fe1\u606f\u3001Windows\u670d\u52a1\u7b49\u8bf8\u591a\u6709\u7528\u7684\u7cfb\u7edf\u4fe1\u606f\u3002 - \u6587\u6863 \u3002 - \u793a\u4f8b\uff1a import psutil # CPU info print(psutil.cpu_count()) # logical cpu count print(psutil.cpu_count(logical=False)) # physical cpy count print(psutil.cpu_times()) # print the usage of every cpu core, 5 times in one second for x in range(5): print(psutil.cpu_percent(interval=0.2, percpu=True)) # memory and swap memory info print(psutil.virtual_memory()) print(psutil.swap_memory()) # internet print(psutil.net_io_counters()) print(psutil.net_if_addrs()) # port info print(psutil.net_if_stats()) # port status print(psutil.net_connections()) # process print(psutil.pids()) p = psutil.Process(psutil.pids()[-1]) print(p.exe()) # executable of process print(p.cwd()) # working directory of process print(p.cmdline()) # cmd line of process print(p.ppid()) # parent process id print(p.parent()) # parent process print(p.children()) # children processes print(p.status()) # status print(p.username()) print(p.create_time()) # print(p.terminal()) # Unix only print(p.cpu_times()) print(p.memory_info()) print(p.connections()) # internet connections print(p.num_threads()) print(p.threads()) print(p.environ()) # environment variables of process # like ps command print(psutil.test()) virtualenv & pipenv virtualenv\u53ef\u4ee5\u7528\u6765\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u521b\u5efa\u591a\u4e2a\u9694\u79bb\u7684Python\u8fd0\u884c\u73af\u5883\uff0c\u6bd4\u5982\u4e00\u4e2a\u5e94\u7528\u9700\u8981\u67d0\u4e2a\u5305\u7684\u4e00\u4e2a\u7279\u5b9a\u7248\u672c\uff0c\u800c\u53e6\u4e00\u4e2a\u5e94\u7528\u9700\u8981\u53e6\u4e00\u4e2a\u7248\u672c\uff0c\u800c\u8fd9\u4e24\u4e2a\u5305\u53ef\u80fd\u53c8\u4f9d\u8d56\u53e6\u4e00\u4e2a\u5305\u7684\u4e0d\u540c\u7248\u672c\uff0c\u5c06\u8fd9\u4e24\u4e2a\u7248\u672c\u653e\u5230\u540c\u4e00\u4e2a\u73af\u5883\u4e2d\u52bf\u5fc5\u4f1a\u9020\u6210\u51b2\u7a81\uff0c\u90a3\u4e48\u6b64\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528virtualenv\u3002 - \u5b98\u65b9\u6587\u6863 \u3002 - \u5b89\u88c5\uff1a pip install virtualenv - \u4f7f\u7528\uff1a python -m virtualenv [options] [args] - \u521b\u5efa\u4e00\u4e2a\u65b0\u73af\u5883\uff1a\u5728\u4e00\u4e2a\u76ee\u5f55\u4e2d python -m virtualenv venv \uff0c venv \u5c31\u662f\u8fd9\u4e2a\u65b0\u73af\u5883\u7684\u540d\u79f0\uff0c\u5e76\u4e14\u4f1a\u5728\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a venv/ \u76ee\u5f55\uff0c\u5176\u4e2d\u5b58\u653e\u4e86Python\u53ef\u6267\u884c\u6587\u4ef6\u4ee5\u53ca pip \u5e93\u7684\u4e00\u4efd\u62f7\u8d1d\u3002\u7701\u7565\u540d\u5b57\u5c06\u4f1a\u628a\u6587\u4ef6\u76f4\u63a5\u653e\u5728\u5f53\u524d\u76ee\u5f55\u3002 - \u4f7f\u7528\u865a\u62df\u73af\u5883\u524d\uff0c\u9700\u8981\u5148\u6fc0\u6d3b\uff1a - Unix\u4e2d\uff1a source venv/bin/activate - Windows\u4e2d\u6267\u884c\uff1a .\\venv\\Scripts\\activate.bat - \u6fc0\u6d3b\u6210\u529f\u540e\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u524d\u4f1a\u51fa\u73b0 (venv) \uff0c\u5373\u8868\u793a\u8fdb\u5165\u865a\u62df\u73af\u5883\u3002 - \u76f4\u63a5\u6267\u884c deactivate \u53ef\u4ee5\u505c\u7528\u865a\u62df\u73af\u5883\uff08\u53ef\u4ee5\u4e0d\u7528\u663e\u5f0f\u6307\u660e\u811a\u672c\u8def\u5f84\uff09\uff0c\u5728\u865a\u62df\u73af\u5883\u4e2d\u6682\u65f6\u5b8c\u6210\u4e86\u5de5\u4f5c\u540e\u79bb\u5f00\u65f6\u5c31\u53ef\u4ee5\u505c\u7528\u5b83\uff0c\u8fd9\u662f\u4f1a\u56de\u5230\u7cfb\u7edf\u9ed8\u8ba4\u7684Python\u89e3\u91ca\u5668\u548c\u5b89\u88c5\u7684\u5e93\u3002 - \u5220\u9664\u4e00\u4e2a\u865a\u62df\u73af\u5883\uff0c\u53ea\u9700\u8981\u5220\u9664\u5176\u76ee\u5f55\u3002 - \u8bb0\u5f97\u5c06\u865a\u62df\u73af\u5883\u7684\u76ee\u5f55\u6dfb\u52a0\u5230\u7248\u672c\u63a7\u5236\u7684\u5ffd\u7565\u6587\u4ef6\u4e2d\u3002 - \u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u7b2c\u4e09\u65b9\u5e93\u5c06\u4f1a\u4fdd\u7559\u5728\u8fd9\u4e2a\u73af\u5883\u4e2d\uff0c\u4e0d\u4f1a\u548c\u7cfb\u7edf\u9ed8\u8ba4\u73af\u5883\u53d1\u751f\u51b2\u7a81\u3002 - \u8fd0\u884c\u539f\u7406\uff1a\u5728\u6267\u884c\u4e86 activate \u540e\uff0c\u4f1a\u4fee\u6539\u76f8\u5173\u73af\u5883\u53d8\u91cf\uff0c\u8ba9Python\u548cpip\u6307\u5411\u5f53\u524d\u865a\u62df\u73af\u5883\u3002 \u53e6\u4e00\u79cd\u7ba1\u7406\u865a\u62df\u73af\u5883\u7684\u5de5\u5177Pipenv\uff1a - \u7ed3\u5408\u4e86 pip \u548c virtualenv \uff0c\u4fa7\u91cd\u70b9\u662f\u5305\u73af\u5883\u7ba1\u7406\u3002 - \u5b89\u88c5\uff1a pip install pipenv - Pipenv \u7ba1\u7406\u6bcf\u4e2a\u9879\u76ee\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u8981\u5b89\u88c5\u8f6f\u4ef6\u5305\u65f6\uff0c\u66f4\u6539\u5230\u9879\u76ee\u76ee\u5f55\uff0c\u4e3a\u9879\u76ee\u5b89\u88c5\u4e00\u4e2a\u5305\uff1a pipenv install package \u3002\u4e0d\u52a0\u67d0\u4e00\u4e2a\u5177\u4f53\u7684\u5305\u7684\u8bdd\u5c31\u662f\u5b89\u88c5 Pipfile \u4e2d\u6240\u6709\u5305\u3002 - \u5378\u8f7d\uff1a pipenv uninstall package - \u4f7f\u7528 pipenv \u540e\u4f1a\u751f\u6210\u4e00\u4e2a Pipfile \uff0c\u5176\u4e2d\u6709\u6700\u65b0\u5b89\u88c5\u7684\u5305\u6587\u4ef6\u7684\u4fe1\u606f\uff0c\u5982\u540d\u79f0\u3001\u7248\u672c\u7b49\uff0c\u7528\u6765\u5728\u91cd\u65b0\u5b89\u88c5\u9879\u76ee\u4f9d\u8d56\u6216\u4e0e\u4ed6\u4eba\u5171\u4eab\u9879\u76ee\u65f6\uff0c\u4f60\u53ef\u4ee5\u7528 Pipfile \u6765\u8ddf\u8e2a\u9879\u76ee\u4f9d\u8d56\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f pipenv \u7528\u6765\u66ff\u4ee3 pip \u7684 requirements.txt \u7684\u6587\u4ef6\u3002\u8fd8\u4f1a\u6709\u4e00\u4e2a Pipfile.lock \u5305\u542b\u4f60\u7684\u7cfb\u7edf\u4fe1\u606f\uff0c\u6240\u6709\u5df2\u5b89\u88c5\u5305\u7684\u4f9d\u8d56\u5305\u53ca\u5176\u7248\u672c\u4fe1\u606f\uff0c\u4ee5\u53ca\u6240\u6709\u5b89\u88c5\u5305\u53ca\u5176\u4f9d\u8d56\u5305\u7684 Hash \u6821\u9a8c\u4fe1\u606f\u3002 - \u4f7f\u7528\u65f6\u53ef\u4ee5\u901a\u8fc7 pipenv run python main.py \u53ef\u4ee5\u786e\u4fdd\u4f60\u7684\u5b89\u88c5\u5305\u53ef\u4ee5\u7528\u4e8e\u4f60\u7684\u811a\u672c\uff0c\u5c31\u662f\u8bf4\u53ea\u4f1a\u4f7f\u7528 Pipfile \u4e2d\u7684\u4f9d\u8d56\uff0c\u5982\u679c\u6ca1\u6709\u5728\u76ee\u5f55\u4e2d\u7528 pipenv install \u5b89\u88c5\u7684\u5305\u5c06\u65e0\u6cd5\u4f7f\u7528\u3002 - \u8fd8\u53ef\u4ee5\u4f7f\u7528 pipenv shell \u6765\u751f\u6210\u4e00\u4e2a\u65b0\u7684shell\uff0c\u5c31\u50cf\u8fdb\u5165\u865a\u62df\u73af\u5883\u90a3\u6837\uff0c\u5c31\u4e0d\u7528\u6267\u884c\u524d\u90fd\u52a0\u4e00\u4e2a pipenv run \u4e86\u3002 - \u4f7f\u7528 pipenv run pip list \u5c06\u4f1a\u5f97\u5230\u4f7f\u7528 pipenv run \u6267\u884c\u65f6\u53ef\u7528\u7684\u5305\u5217\u8868\u3002 - \u5176\u5b9e pipenv \u4e5f\u7c7b\u4f3c\u4e8e virtualenv \uff0c\u53ea\u4e0d\u8fc7\u865a\u62df\u73af\u5883\u7684\u6587\u4ef6\u4e0d\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\uff0c\u800c\u662f\u5728\u5bb6\u76ee\u5f55\u4e0b\u7684 ./virtualenvs \u4e0b\u7684\u76ee\u5f55\u4e2d\u3002 pipenv --venv \u53ef\u4ee5\u67e5\u770b\u5176\u865a\u62df\u73af\u5883\u6240\u5728\u76ee\u5f55\u3002 - \u66f4\u591a\u547d\u4ee4\uff1a - pipenv update packge \u66f4\u65b0\u7b2c\u4e09\u65b9\u5305\u3002 - pipenv --where \u67e5\u770b\u9879\u76ee\u6839\u76ee\u5f55\u3002 - pipenv check \u68c0\u67e5\u7b2c\u4e09\u65b9\u5305\u7684\u5b8c\u6574\u6027\u3002 - pipenv graph \u67e5\u770b\u4f9d\u8d56\u6811\u3002 - pipenv \u6362\u6e90\uff1a - \u65b0\u5efa\u7cfb\u7edf\u53d8\u91cf PIPENV_PYPI_MIRROR \u4e3a https://pypi.tuna.tsinghua.edu.cn/simple \uff08\u6216\u5176\u4ed6\u6e90\uff09\u3002\u5bf9\u6240\u6709 pipenv \u73af\u5883\u751f\u6548\u3002 - \u4fee\u6539 Pipfile \u4e2d\u7684 url \u53ef\u4ee5\u66f4\u6539\u8fd9\u4e2a\u9879\u76ee\u5b89\u88c5\u65f6\u7684\u6e90\u3002 \u5b89\u88c5\u4e0e\u751f\u6210\u4f9d\u8d56\uff1a - \u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u548c\u5f00\u53d1\u73af\u5883\u9ad8\u5ea6\u76f8\u5173\uff0c\u5c31\u9700\u8981\u751f\u6210\u4f9d\u8d56\u6587\u4ef6 requirements.txt \u3002 - \u4f7f\u7528 pip freeze \u53ef\u4ee5\u5f97\u5230\u5f53\u524d\u73af\u5883\u6240\u6709\u7684\u5305\uff0c\u76f4\u63a5\u6267\u884c\u4f1a\u5f97\u5230\u5f53\u524d\u5b89\u88c5\u7684\u6240\u6709\u5305\uff0c\u5982\u679c virtualenv \u6216\u8005 pipenv run \u4e0b\u6267\u884c\uff0c\u90a3\u4e48\u53ea\u4f1a\u5f97\u5230\u865a\u62df\u73af\u5883\u4e2d\u53ef\u7528\u7684\u5305\u3002 - \u4f7f\u7528 pip freeze > requirements.txt \u5373\u53ef\u751f\u6210\u4f9d\u8d56\u6587\u4ef6\u3002 - \u91cd\u65b0\u521b\u5efa\u8fd9\u6837\u7684\u73af\u5883\uff1a pip install -r requirements.txt \u3002\u5e2e\u52a9\u786e\u4fdd\u5b89\u88c5\u3001\u90e8\u7f72\u548c\u5f00\u53d1\u8005\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u3002 - \u5982\u679c\u6ca1\u6709\u4f7f\u7528\u865a\u62df\u73af\u5883\uff0c\u6240\u6709\u5305\u90fd\u4f7f\u7528\u7cfb\u7edf\u7684Python\u5305\uff0c\u90a3\u4e48 pip freeze \u5c31\u4f1a\u5f97\u5230\u6240\u6709\u5305\uff0c\u5f53\u53d1\u5e03\u9879\u76ee\u65f6\u4ec5\u9700\u8981\u9879\u76ee\u7684\u4f9d\u8d56\uff0c\u53ef\u4ee5\u4f7f\u7528\u5305 pipreqs \u6765\u67e5\u627e\u5f53\u524d\u9879\u76ee\u7684\u4f9d\u8d56\u5e76\u81ea\u52a8\u751f\u6210 requirements.txt \u3002 - pip install pipreqs - pipreqs ./ \u53e6\u5916\u8fd8\u6709 pyenv \u53ef\u4ee5\u7528\u6765\u7ba1\u7406\u591a\u4e2a\u7248\u672c\u7684Python\uff0c\u8fd9\u70b9Pipenv\u4e5f\u53ef\u4ee5\u505a\u5230\uff0c\u6b64\u5904\u4e0d\u8be6\u8ff0 pyenv \u3002 \u6269\u5c55\u9605\u8bfb\uff1a - Pipenv & \u865a\u62df\u73af\u5883 \uff0c\u66f4\u591a\u5173\u4e8e\u9879\u76ee\u4f9d\u8d56\u4e8e\u865a\u62df\u73af\u5883\u7684\u8bf4\u660e\u3002 \u56fe\u5f62\u754c\u9762 Python\u652f\u6301\u591a\u79cd\u56fe\u5f62\u754c\u9762\u7684\u7b2c\u4e09\u65b9\u5e93\uff1aTk\u3001wxWidgets\u3001Qt\u3001GTK\u3002 Tkinter\uff1a - Python\u81ea\u5e26\u7684\u5e93\u662f\u652f\u6301Tk\u7684Tkinter\uff0c\u4f7f\u7528Tkinter\uff0c\u65e0\u9700\u5b89\u88c5\u4efb\u4f55\u5305\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 - \u7b2c\u4e00\u4e2aTkinter\u7684GUI\u7a0b\u5e8f\uff1a from tkinter import * class Application(Frame): def __init__(self, master = None): Frame.__init__(self, master) self.pack() self.createWidgets() def createWidgets(self): self.helloLabel = Label(self, text='Hello, world!') self.helloLabel.pack() self.quitButton = Button(self, text='Quit', command=self.quit) self.quitButton.pack() app = Application() app.master.title('hello,world') app.mainloop() \u548c\u5176\u4ed6\u8bed\u8a00\u7684GUI\u7a0b\u5e8f\u5dee\u4e0d\u591a\uff0c\u6d3e\u751fFrame\uff0c\u5176\u4e2d\u521b\u5efa\u5404\u79cdWidget\uff0c\u5b9e\u4f8b\u5316\u540e\u542f\u52a8\u6d88\u606f\u5faa\u73af\u3002 GUI\u7a0b\u5e8f\u7684\u4e3b\u7ebf\u7a0b\u8d1f\u8d23\u76d1\u542c\u6765\u81ea\u64cd\u4f5c\u7cfb\u7edf\u7684\u6d88\u606f\uff0c\u5e76\u4f9d\u6b21\u5904\u7406\u6bcf\u4e00\u6761\u6d88\u606f\u3002\u5982\u679c\u6d88\u606f\u5904\u7406\u975e\u5e38\u8017\u65f6\uff0c\u5c31\u9700\u8981\u5728\u65b0\u7ebf\u7a0b\u4e2d\u5904\u7406\u3002 ython\u5185\u7f6e\u7684Tkinter\u53ef\u4ee5\u6ee1\u8db3\u57fa\u672c\u7684GUI\u7a0b\u5e8f\u7684\u8981\u6c42\uff0c\u5982\u679c\u662f\u975e\u5e38\u590d\u6742\u7684GUI\u7a0b\u5e8f\uff0c\u5efa\u8bae\u7528\u64cd\u4f5c\u7cfb\u7edf\u539f\u751f\u652f\u6301\u7684\u8bed\u8a00\u548c\u5e93\u6765\u7f16\u5199\u3002 \u6d77\u9f9f\u7ed8\u56fe turtle \u5e93\uff1a - \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u6307\u6325\u4e00\u4e2a\u6d77\u9f9f\u524d\u8fdb\u8f6c\u5411\u4ee5\u6b64\u6765\u7ed8\u56fe\u7684API\uff0c\u79fb\u690d\u5230Python\u4e0a\u4e4b\u540e\u5c31\u662f\u8fd9\u4e2a\u5e93\uff0c\u4f5c\u7528\u6709\u9650\uff0c\u53ef\u4ee5\u7528\u6765\u4f53\u9a8cGUI\u7684\u4e50\u8da3\u3002\u5185\u7f6e\u4e0d\u9700\u8981\u5b89\u88c5\u3002 - \u6587\u6863 \u3002 \u7f51\u8def\u7f16\u7a0b TCP/IP\u534f\u8bae\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86\uff0cIPv4\u5c31\u662f\u4e00\u4e2a32\u4f4d\u6574\u6570\uff0c\u4e00\u822c\u75284\u4e2a0-255\u7684\u5341\u8fdb\u5236\u7528 . \u5206\u9694\u6765\u8868\u793a\u3002IPv6\u662f128\u4f4d\u6574\u6570\uff0c\u75288\u4e2a4\u4f4d\u5341\u516d\u8fdb\u5236\u6574\u6570 : \u5206\u9694\u8868\u793a\u3002 - TCP\u662f\u53ef\u9760\u4f20\u8f93\uff0c\u4f1a\u8fdb\u884c\u4e09\u6b21\u63e1\u624b\uff0c\u56db\u6b21\u6325\u624b\uff0cUDP\u662f\u4e0d\u53ef\u9760\u4f20\u8f93\u3002\u5176\u4ed6\u5e94\u7528\u5c42\u7684\u534f\u8bae\u5efa\u7acb\u5728TCP\u534f\u8bae\u4e4b\u4e0a\uff0c\u6bd4\u5982\u6d4f\u89c8\u5668\u7684HTTP\u534f\u8bae\u3001\u90ae\u4ef6\u534f\u8baeSMTP\u3002 - TCP\u534f\u8bae\u4f7f\u7528\u4e00\u4e2a\u4e00\u4e2a\u7684\u6570\u636e\u5305\u4f20\u8f93\u6570\u636e\uff0c\u4e00\u4e2aTCP\u62a5\u6587\u9664\u4e86\u5305\u542b\u8981\u4f20\u8f93\u7684\u6570\u636e\u5916\uff0c\u8fd8\u5305\u542b\u6e90IP\u5730\u5740\u548c\u76ee\u6807IP\u5730\u5740\uff0c\u6e90\u7aef\u53e3\u548c\u76ee\u6807\u7aef\u53e3\u3002 - \u7aef\u53e3\u7684\u4f5c\u7528\u662f\u5728\u673a\u5668\u4e0a\u533a\u5206\u5e94\u7528\uff0cIp\u5219\u7528\u6765\u533a\u5206\u673a\u5668\uff0c\u4e00\u4e2aIP:\u7aef\u53e3\u7684\u7ec4\u5408\u88ab\u79f0\u4e3a\u4e00\u4e2a\u5957\u63a5\u5b57\uff0c\u7528\u6765\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u8fde\u63a5\u3002 TCP\u7f16\u7a0b\uff1a - Socket\u662f\u7f51\u7edc\u7f16\u7a0b\u7684\u4e00\u4e2a\u62bd\u8c61\u6982\u5ff5\uff0c\u7528\u4e00\u4e2aSocket\u8868\u793a\u6253\u5f00\u4e86\u4e00\u4e2a\u7f51\u7edc\u94fe\u63a5\uff0c\u6253\u5f00\u4e00\u4e2aSocket\u9700\u8981\u77e5\u9053\u76ee\u6807\u8ba1\u7b97\u673a\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\uff0c\u518d\u6307\u5b9a\u534f\u8bae\u7c7b\u578b\u5373\u53ef\u3002 - \u5927\u591a\u6570\u8fde\u63a5\u90fd\u662f\u53ef\u9760\u7684TCP\u8fde\u63a5\uff0c\u521b\u5efaTCP\u8fde\u63a5\u65f6\uff0c\u53d1\u8d77\u8fde\u63a5\u7684\u53eb \u5ba2\u6237\u7aef \uff0c\u88ab\u52a8\u54cd\u5e94\u8fde\u63a5\u7684\u53eb \u670d\u52a1\u5668 \u3002 \u5ba2\u6237\u7aef\uff1a - \u521b\u5efa\u4e00\u4e2a\u57fa\u4e8eTCP\u7684\u8fde\u63a5\uff1a import socket # create a socket: AF_INET -> ipv4, SOCK_STREAM -> TCP s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect(('www.baidu.com', 80)) \u4f5c\u4e3a\u670d\u52a1\u5668\uff0c\u63d0\u4f9b\u4ec0\u4e48\u670d\u52a1\uff0c\u4f7f\u7528\u4ec0\u4e48\u7aef\u53e3\u53f7\u5fc5\u987b\u56fa\u5b9a\u4e0b\u6765\uff0c80\u7aef\u53e3\u662fWeb\u670d\u52a1\u7684\u6807\u51c6\u7aef\u53e3\u3002\u5176\u4ed6\u670d\u52a1\u90fd\u6709\u5bf9\u5e94\u7684\u6807\u51c6\u7aef\u53e3\u53f7\uff0c\u4f8b\u5982SMTP\u670d\u52a1\u662f25\u7aef\u53e3\uff0cFTP\u670d\u52a1\u662f21\u7aef\u53e3\uff0c\u7b49\u7b49\u3002\u7aef\u53e3\u53f7\u5c0f\u4e8e1024\u7684\u662fInternet\u6807\u51c6\u670d\u52a1\u7684\u7aef\u53e3\uff0c\u7aef\u53e3\u53f7\u5927\u4e8e1024\u7684\uff0c\u53ef\u4ee5\u4efb\u610f\u4f7f\u7528\u3002 \u5efa\u7acb\u8fde\u63a5\u4e4b\u540e\uff0c\u53ef\u4ee5\u53d1\u9001\u8bf7\u6c42\uff1a s.send(b'GET / HTTP/1.1\\r\\nHost: www.baidu.com\\r\\nConnection: close\\r\\n\\r\\n') TCP\u8fde\u63a5\u521b\u5efa\u7684\u662f\u53cc\u5411\u901a\u9053\uff0c\u53cc\u65b9\u90fd\u53ef\u4ee5\u540c\u65f6\u7ed9\u5bf9\u65b9\u53d1\u6570\u636e\u3002\u4f46\u662f\u8c01\u5148\u53d1\u8c01\u540e\u53d1\uff0c\u600e\u4e48\u534f\u8c03\uff0c\u8981\u6839\u636e\u5177\u4f53\u7684\u534f\u8bae\u6765\u51b3\u5b9a\u3002\u4f8b\u5982HTTP\u534f\u8bae\u89c4\u5b9a\u5ba2\u6237\u7aef\u5fc5\u987b\u5148\u53d1\u8bf7\u6c42\u7ed9\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u6536\u5230\u540e\u624d\u53d1\u6570\u636e\u7ed9\u5ba2\u6237\u7aef\u3002 \u63a5\u4e0b\u91cc\u5c31\u53ef\u4ee5\u63a5\u6536\u6570\u636e\u4e86\uff1a # receive data buffer = [] while True: # 1 KB every time d = s.recv(1024) if d: buffer.append(d) else: break data = b''.join(buffer) \u6570\u636e\u63a5\u6536\u5b8c\u6bd5\u4e4b\u540e\uff0c\u8c03\u7528 close \u65b9\u6cd5\u5173\u95edSocket\uff0c\u4e00\u6b21\u5b8c\u6574\u7684\u7f51\u7edc\u901a\u4fe1\u5c31\u7ed3\u675f\u4e86\u3002 s.close() \u63a5\u6536\u5230\u7684\u6570\u636e\u5305\u62ecHTTP\u5934\u548c\u7f51\u9875\u672c\u8eab\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628aHTTP\u5934\u548c\u7f51\u9875\u5206\u79bb\u4e00\u4e0b\uff0c\u628aHTTP\u5934\u6253\u5370\u51fa\u6765\uff0c\u7f51\u9875\u5185\u5bb9\u4fdd\u5b58\u5230\u6587\u4ef6\uff0c\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u8fd9\u4e2a html \u6587\u4ef6\u5c31\u53ef\u4ee5\u770b\u5230\u767e\u5ea6\u7684\u9996\u9875\u4e86\u3002 header, html = data.split(b'\\r\\n\\r\\n') print(header.decode('utf-8')) with open('baidu.html', 'wb') as f: f.write(html) \u670d\u52a1\u5668\u7aef\uff1a - \u670d\u52a1\u5668\u7f16\u7a0b\u6bd4\u5ba2\u6237\u7aef\u8981\u590d\u6742\u4e00\u70b9\u3002 - \u670d\u52a1\u5668\u8fdb\u7a0b\u9700\u8981\u7ed1\u5b9a\u4e00\u4e2a\u7aef\u53e3\u6765\u76d1\u542c\u5176\u4ed6\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\uff0c\u5982\u679c\u67d0\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5\u8fc7\u6765\uff0c\u670d\u52a1\u5668\u5c31\u4e0e\u8be5\u5ba2\u6237\u7aef\u5efa\u7acbSocket\u8fde\u63a5\uff0c\u968f\u540e\u7684\u901a\u4fe1\u5c31\u4f9d\u9760\u8fd9\u4e2aSocket\u8fde\u63a5\u3002 - \u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u6709\u5927\u91cf\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u7531\u670d\u52a1\u5668\u5730\u5740\u3001\u670d\u52a1\u5668\u7aef\u53e3\u3001\u5ba2\u6237\u7aef\u5730\u5740\u3001\u5ba2\u6237\u7aef\u7aef\u53e3\u552f\u4e00\u786e\u5b9a\u4e00\u4e2aSocket\u3002 - \u6bcf\u4e2a\u8fde\u63a5\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\u8fdb\u884c\u5904\u7406\u3002 if __name__ == \"__main__\": # create a socket: Ipv4, TCP s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # bind a port s.bind(('127.0.0.1', 9999)) # listen a port, argument is max connection count s.listen(5) print(\"waiting for connection...\") # accept connection from client while True: # accept a new conection sock, addr = s.accept() # create a new thread to handle TCP connection t = threading.Thread(target=tcplink, args=(sock, addr)) t.start() \u5904\u7406\u903b\u8f91\uff1a\u9996\u5148\u53d1\u9001\u6b22\u8fce\u6d88\u606f\uff0c\u7136\u540e\u63a5\u53d7\u5ba2\u6237\u7aef\u6d88\u606f\uff0c\u5982\u679c\u662f exit \u5b57\u7b26\u4e32\u5c31\u5173\u95ed\u8fde\u63a5\uff0c\u5426\u5219\u5c31\u53d1\u9001\u6d88\u606f\u5230\u5ba2\u6237\u7aef\u3002 def tcplink(sock, addr): print('Accept new connection from %s:%s...' % addr) sock.send(b\"Welcome!\") while True: data = sock.recv(1024) time.sleep(1) if not data or data.decode('utf-8') == 'exit': break sock.send((f\"hello {data.decode('utf-8')}\").encode('utf-8')) sock.close() print(\"Connection from %s:%s closed.\" % addr) \u5728\u5ba2\u6237\u7aef\uff0c\u540c\u6837\u5904\u7406\uff1a # create a socket s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect(('127.0.0.1', 9999)) # send requests print(s.recv(1024).decode('utf-8')) for data in [b\"Alice\", b\"Bob\", b\"Mary\"]: s.send(data) print(s.recv(1024).decode('utf-8')) s.send(b'exit') s.close() \u6267\u884c\u7ed3\u679c\uff1a\u5728\u670d\u52a1\u5668\u7aef\u5148\u6267\u884c\uff0c\u4f1a\u7b49\u5f85\u5ba2\u6237\u7aef\u6765\u8fde\u63a5\uff0c\u6267\u884c\u5ba2\u6237\u7aef\u4ee3\u7801\u540e\u8fde\u63a5\u6210\u529f\u670d\u52a1\u7aef\u65b0\u5efa\u7ebf\u7a0b\u5904\u7406\uff0c\u5ba2\u6237\u7aef\u6536\u5230\u6b22\u8fce\u6d88\u606f\uff0c\u5ba2\u6237\u7aef\u4f9d\u6b21\u53d1\u9001\u5e76\u63a5\u53d7\u6d88\u606f\uff0c\u670d\u52a1\u7aef\u4f9d\u6b21\u63a5\u53d7\u5e76\u53d1\u9001\u6d88\u606f\uff0c\u76f4\u5230\u6536\u5230 exit \u5173\u95ed\u8fde\u63a5\u3002\u670d\u52a1\u7aef\u5904\u7406\u7ebf\u7a0b\u7ed3\u675f\uff0c\u4e3b\u7ebf\u7a0b\u4f9d\u7136\u5904\u4e8e\u7b49\u5f85\u8fde\u63a5\u72b6\u6001\u3002 UDP\u7f16\u7a0b\uff1a - UDP\u662f\u4e0d\u53ef\u9760\u4f20\u8f93\uff0c\u4e0d\u9700\u8981\u5efa\u7acb\u8fde\u63a5\uff0c\u53ea\u9700\u8981\u76f4\u5230\u5bf9\u65b9\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u53d1\u9001\u6570\u636e\u5305\u3002\u4f46\u662f\u80fd\u4e0d\u80fd\u5230\u8fbe\u662f\u4e0d\u77e5\u9053\u7684\u3002 - \u867d\u7136\u4f20\u8f93\u4e0d\u53ef\u9760\uff0c\u4f46\u4f18\u70b9\u662f\u76f8\u6bd4TCP\u66f4\u5feb\u3002 - \u670d\u52a1\u7aef\uff1a\u4e0d\u9700\u8981\u76d1\u542c\uff0c\u53d1\u9001\u4e4b\u524d\u4e5f\u4e0d\u9700\u8981\u8fde\u63a5\uff0c\u8fd9\u91cc\u6bd4\u8f83\u7b80\u5355\uff0c\u4e5f\u4e0d\u7528\u591a\u7ebf\u7a0b\u5904\u7406\u3002 import socket # create a socket: IPv4, UDP s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # bind to port s.bind(('127.0.0.1', 9999)) print(\"Bind UDP on 9999...\") # do not need listen, just receive while True: data, addr = s.recvfrom(1024) print(\"Received from %s:%s\" % addr) s.sendto(b'hello, %s' % data, addr) \u5ba2\u6237\u7aef\uff1a\u4e0d\u9700\u8981\u8fde\u63a5\uff0c\u76f4\u63a5\u7ed9\u670d\u52a1\u5668\u53d1\u9001\u6570\u636e\u3002 import socket # IPv4, UDP s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) for data in [b\"Alice\", b\"Bob\", b\"Mary\"]: s.sendto(data, ('127.0.0.1', 9999)) print(s.recv(1024).decode('utf-8')) s.close() \u670d\u52a1\u5668\u7ed1\u5b9aUDP\u7aef\u53e3\u548cTCP\u7aef\u53e3\u4e92\u4e0d\u51b2\u7a81\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cUDP\u76849999\u7aef\u53e3\u4e0eTCP\u76849999\u7aef\u53e3\u53ef\u4ee5\u5404\u81ea\u7ed1\u5b9a\u3002 \u7535\u5b50\u90ae\u4ef6 \u7535\u5b50\u90ae\u4ef6\u7684\u4f20\u9012\u6d41\u7a0b\uff1a - \u5199\u597d\u4e00\u5c01\u90ae\u4ef6\u4e4b\u540e\uff0c\u4ece\u90ae\u4ef6\u8f6f\u4ef6\uff08\u79f0\u4e4b\u4e3aMUA\uff1aMail User Agent\uff0c\u90ae\u4ef6\u7528\u6237\u4ee3\u7406\uff09\u53d1\u9001\u3002 - \u4eceMUA\u53d1\u51fa\u540e\uff0c\u4e0d\u662f\u76f4\u63a5\u9001\u8fbe\u5bf9\u65b9\u7535\u8111\uff0c\u800c\u662f\u5148\u9001\u5230MTA\uff1aMail Transfer Agent\uff0c\u90ae\u4ef6\u4f20\u8f93\u4ee3\u7406\uff0c\u4e5f\u5c31\u662f\u81ea\u5df1\u7528\u7684\u4ec0\u4e48\u90ae\u4ef6\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u90ae\u4ef6\u5c31\u5230\u54ea\u513f\u3002\u6bd4\u5982 163.com \u90a3\u5c31\u5148\u6295\u9012\u5230\u7f51\u6613\u7684MTA\u3002 - \u7136\u540e\u4ece\u81ea\u5df1\u7684MTA\u5bf9\u65b9\u7684MTA\uff08\u4e2d\u95f4\u53ef\u80fd\u8fd8\u4f1a\u7ecf\u8fc7\u5176\u4ed6MTA\uff09\uff0c\u7136\u540e\u800c\u5bf9\u65b9\u7684MTA\u4f1a\u628a\u90ae\u4ef6\u6295\u9012\u5230\u6700\u7ec8\u76ee\u7684\u5730\uff1aMDA\uff0cMail Delivery Agent\uff0c\u90ae\u4ef6\u6295\u9012\u4ee3\u7406\u3002 - \u56e0\u4e3a\u5bf9\u65b9\u4e0d\u4e00\u5b9a\u5728\u7ebf\uff0c\u6240\u4ee5\u67d0\u4e2a\u65f6\u523b\u5728MUA\u4e0a\u767b\u5f55\u90ae\u7bb1\u4e4b\u540e\u9700\u8981\u4eceMDA\u4e0a\u628a\u90ae\u4ef6\u53d6\u5230\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u3002 - \u6240\u4ee5\u5927\u6982\u7684\u6d41\u7a0b\u662f\uff1a \u53d1\u4ef6\u4eba -> MUA -> MTA -> MTA -> \u82e5\u5e72\u4e2aMTA -> MDA <- MUA <- \u6536\u4ef6\u4eba - \u8981\u7f16\u5199\u7a0b\u5e8f\u6765\u53d1\u9001\u63a5\u6536\u90ae\u4ef6\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\uff1a - \u7f16\u5199MUA\u628a\u90ae\u4ef6\u53d1\u5230MTA\u3002 - \u7f16\u5199MUA\u4eceMDA\u4e0a\u6536\u90ae\u4ef6\u3002 \u90ae\u4ef6\u534f\u8bae\uff1a - \u53d1\u90ae\u4ef6\u65f6\uff0cMUA\u548cMTA\u4f7f\u7528\u7684\u534f\u8bae\u662f SMTP \uff1aSimple Mail Transfer Protocol\uff0cMTA\u5230\u53e6\u4e00\u4e2aMTA\u4e5f\u662fSMTP\u3002 - \u6536\u90ae\u4ef6\u65f6\uff0cMUA\u548cMDA\u4f7f\u7528\u7684\u534f\u8bae\u6709\u4e24\u79cd\u3002\u7b2c\u4e00\u79cdPOP\uff1aPost Office Protocol\uff0c\u76ee\u524d\u7248\u672c\u662f3\uff0c\u4fd7\u79f0 POP3 \u3002\u7b2c\u4e8c\u79cd IMAP \uff1aInternet Message Access Protocol\uff0c\u76ee\u524d\u7248\u672c\u662f4\uff0c\u4e0d\u4f46\u80fd\u53d6\u90ae\u4ef6\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5cMDA\u4e0a\u5b58\u50a8\u7684\u90ae\u4ef6\uff0c\u6bd4\u5982\u4ece\u6536\u4ef6\u7bb1\u79fb\u5230\u5783\u573e\u7bb1\u7b49\u3002 - \u76ee\u524d\u5927\u591a\u6570\u90ae\u4ef6\u670d\u52a1\u5546\u90fd\u9700\u8981\u624b\u52a8\u6253\u5f00SMTP\u53d1\u4fe1\u548cPOP\u6536\u4fe1\u529f\u80fd\uff0c\u5426\u5219\u53ea\u5141\u8bb8\u7f51\u9875\u767b\u5f55\u4f7f\u7528\u3002 SMTP\u53d1\u9001\u90ae\u4ef6\uff1a - Python\u5185\u7f6e\u5bf9SMTP\u7684\u652f\u6301\uff0c\u53ef\u4ee5\u53d1\u9001\u7eaf\u6587\u672c\u90ae\u4ef6\u3001HTML\u90ae\u4ef6\u3001\u5e26\u9644\u4ef6\u7684\u90ae\u4ef6\u3002 - \u4e24\u4e2a\u6a21\u5757 smtplib \u548c email \uff0c\u524d\u8005\u6784\u9020\u90ae\u4ef6\uff0c\u540e\u8005\u53d1\u9001\u90ae\u4ef6\u3002 from email.mime.text import MIMEText from email.header import Header from email.utils import parseaddr, formataddr def _format_addr(s): name, addr = parseaddr(s) return formataddr((Header(name, 'utf-8').encode(), addr)) # input email and passwd from_addr = input('From: ') password = input('password: ') to_addr = input('To: ') # input SMTP server address smtp_server = input('SMTP server: ') # plain text email msg = MIMEText(\"hello, send by Python...\", 'Plain', 'utf-8') msg['From'] = _format_addr('\u6697\u4e4b\u6076\u9b54 <%s>' % from_addr) # \u53d1\u4ef6\u4eba msg['To'] = _format_addr('\u5149\u4e4b\u4f7f\u8005 <%s>' % to_addr) # \u6536\u4ef6\u4eba msg['Subject'] = Header(\"\u63a5\u53d7\u5730\u72f1\u7684\u5ba1\u5224\u5427\uff01\", 'utf-8').encode() # \u4e3b\u9898 # send to MTA import smtplib server = smtplib.SMTP(smtp_server, 25) server.set_debuglevel(1) # print interactive info with the server server.login(from_addr, password) server.sendmail(from_addr, [to_addr], msg.as_string()) server.quit() \u53d1\u4ef6\u4eba\u548c\u6536\u4ef6\u4eba\u683c\u5f0f\u65f6 name <xxx@xxx.com> \uff0c\u4e0d\u80fd\u76f4\u63a5\u53d1\u4e2d\u6587\uff0c\u9700\u8981\u4f7f\u7528 Header \u8fdb\u884c\u7f16\u7801\u3002 \u5bc6\u7801\u5e76\u4e0d\u4e00\u5b9a\u5c31\u662f\u90ae\u7bb1\u5bc6\u7801\uff0c\u6bd4\u5982QQ\u90ae\u7bb1\u5c31\u662f\u5176\u751f\u6210\u7684\u4e00\u4e2a\u7528\u4e8e\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6388\u6743\u7801\u3002 \u4e0a\u8ff0\u4ee3\u7801\u8f93\u5165\u4fe1\u606f\u65f6\u53ef\u4ee5\u4f7f\u7528\u6587\u4ef6\u8f93\u5165\u91cd\u5b9a\u5411\uff0c\u4e0d\u5fc5\u6bcf\u4e00\u6b21\u90fd\u91cd\u65b0\u8f93\u5165\u3002 \u8981\u6709\u53d1\u4ef6\u4eba\u3001\u6536\u4ef6\u4eba\u3001\u4e3b\u9898\u624d\u662f\u4e00\u5c01\u5b8c\u6574\u7684\u90ae\u4ef6\uff0c\u6ca1\u6709\u4e5f\u53ef\u4ee5\u53d1\u3002 \u5982\u679c\u8981\u53d1\u9001\u9644\u4ef6\uff0c\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a MIMEMultipart \uff0c\u5728\u5176\u4e2d\u6dfb\u52a0\u4e00\u4e2a MIMEText \u4f5c\u4e3a\u6b63\u6587\uff0c\u5728\u7ee7\u7eed\u52a0\u4e0a\u8868\u793a\u9644\u52a0\u7684 MIMEBase \u5bf9\u8c61\u5373\u53ef\u3002 \u9664\u4e86\u53d1\u9001\u7eaf\u6587\u672c\uff0c\u4e5f\u53ef\u4ee5\u53d1\u9001html\u90ae\u4ef6\uff0c\u90ae\u4ef6\u5185\u5bb9\u5c31\u662f\u4e00\u4e2a\u7f51\u9875\uff0c\u5982\u679c\u8981\u5728\u5176\u4e2d\u5d4c\u5165\u56fe\u7247\uff0c\u7531\u4e8e\u5927\u90e8\u5206\u90ae\u4ef6\u670d\u52a1\u5546\u4f1a\u81ea\u52a8\u5c4f\u853d\u5e26\u6709\u5916\u94fe\u7684\u56fe\u7247\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053\u662f\u5426\u6307\u5411\u6076\u610f\u7f51\u7ad9\u3002\u53ef\u4ee5\u5728HTML\u4e2d\u901a\u8fc7\u5f15\u7528 src=\"cid:x\" \uff08x\u4e3a\u56fe\u7247\u7f16\u53f7\uff09\u5c31\u53ef\u4ee5\u628a\u9644\u52a0\u4f5c\u4e3a\u56fe\u7247\u63d2\u5165\u4e86\u3002 \u66f4\u591a\u4fe1\u606f\u67e5\u770b\u6587\u6863\u83b7\u53d6\u3002 POP3\u6536\u53d6\u90ae\u4ef6\uff1a - \u5206\u4e24\u6b65\uff1a\u7528 poplib \u628a\u90ae\u4ef6\u539f\u59cb\u6587\u672c\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u7b2c\u4e8c\u6b65\uff0c\u7528 email \u89e3\u6790\u539f\u59cb\u6587\u672c\uff0c\u8fd8\u539f\u4e3a\u90ae\u4ef6\u5bf9\u8c61\u3002 # input email email = input('Email: ') password = input('Password: ') pop3_server = input('POP3 server: ') # connect to POP3 server server = poplib.POP3(pop3_server) server.set_debuglevel(1) print(server.getwelcome().decode('utf-8')) # authentication server.user(email) server.pass_(password) # email number and space print('Message: %s, Size: %s', server.stat()) # get numbers of all mails resp, mails, octets = server.list() print(mails) # get newest mail index = len(mails) resp, lines, octets = server.retr(index) # get raw content of mail msg_content = b'\\r\\n'.join(lines).decode('utf-8') # parse mail content msg = Parser().parsestr(msg_content) server.quit() \u540e\u7eed\u7684\u89e3\u6790\u903b\u8f91\u5c31\u7701\u7565\u4e86\uff0c\u53ef\u67e5\u770bPython\u5206\u652f\u6216\u8005 \u5ed6\u96ea\u5cf0\u7684\u6559\u7a0b \u83b7\u53d6\u3002 \u6570\u636e\u5e93 \u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\uff0c\u6570\u636e\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\uff0c\u4f46\u5f53\u7a0b\u5e8f\u7ed3\u675f\u540e\uff0c\u6570\u636e\u65e0\u8bba\u4ee5\u4f55\u79cd\u5f62\u5f0f\u6700\u7ec8\u90fd\u4f1a\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\uff0c\u5982\u4f55\u5b9a\u4e49\u5b58\u50a8\u683c\u5f0f\u5c31\u6210\u4e3a\u4e86\u95ee\u9898\uff0c\u53ef\u4ee5\u662f\u6807\u51c6\u5316\u7684\u683c\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49\u683c\u5f0f\u3002\u5f53\u518d\u6b21\u8fd0\u884c\u7a0b\u5e8f\u9700\u8981\u8bfb\u5165\u6587\u4ef6\u65f6\uff0c\u5c31\u9700\u8981\u5c06\u6570\u636e\u5168\u90e8\u8bfb\u5165\u5185\u5b58\uff0c\u5982\u679c\u6570\u636e\u8fdc\u8d85\u5185\u5b58\u5927\u5c0f\uff0c\u5c31\u6839\u672c\u65e0\u6cd5\u5168\u90e8\u8bfb\u5165\u5185\u5b58\u3002 - \u6b64\u80cc\u666f\u4e0b\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u6570\u636e\u7684\u4fdd\u5b58\u3001\u8bfb\u53d6\u548c\u65b9\u4fbf\u7684\u67e5\u8be2\uff0c\u5c31\u51fa\u73b0\u4e86\u6570\u636e\u5e93\uff08Database\uff09\u8fd9\u79cd\u4e13\u95e8\u7528\u4e8e\u96c6\u4e2d\u5b58\u50a8\u548c\u67e5\u8be2\u7684\u8f6f\u4ef6\u3002 - \u6570\u636e\u5e93\u8bde\u751f\u5386\u53f2\u5f88\u4e45\u8fdc\uff0c\u65e9\u4e8e1950\u5e74\u5c31\u8bde\u751f\u4e86\uff0c\u7ecf\u5386\u4e86\u7f51\u72b6\u6570\u636e\u5e93\uff0c\u5c42\u6b21\u6570\u636e\u5e93\uff0c\u6211\u4eec\u73b0\u5728\u5e7f\u6cdb\u4f7f\u7528\u7684\u5173\u7cfb\u6570\u636e\u5e93\u662f20\u4e16\u7eaa70\u5e74\u4ee3\u57fa\u4e8e\u5173\u7cfb\u6a21\u578b\u7684\u57fa\u7840\u4e0a\u8bde\u751f\u7684\u3002 - \u5173\u7cfb\u6a21\u578b\u6709\u4e00\u5957\u590d\u6742\u7684\u6570\u5b66\u7406\u8bba\u3002 - \u5173\u7cfb\u6570\u636e\u5e93\u4e2d\uff0c\u57fa\u4e8e\u8868\u7684\u4e00\u5bf9\u591a\u5173\u7cfb\u662f\u57fa\u7840\u3002\u4e00\u4e2a\u8868\u4e2d\u7684\u4e00\u884c\u8bb0\u5f55\u5c31\u67d0\u4e00\u9879\u800c\u8a00\u53ef\u80fd\u5bf9\u5e94\u4e8e\u53e6\u4e00\u5f20\u8868\u7684\u591a\u884c\u8bb0\u5f55\u3002 - \u5173\u7cfb\u6570\u636e\u5e93\u6709\u8bbf\u95ee\u548c\u5904\u7406\u7684\u9886\u57df\u7279\u5b9a\u8bed\u8a00SQL\u3002\u65e0\u8bba\u4ec0\u4e48\u7f16\u7a0b\u8bed\u8a00\uff0c\u6d89\u53ca\u5230\u64cd\u4f5c\u6570\u636e\u5e93\uff0c\u57fa\u672c\u90fd\u662f\u901a\u8fc7SQL\u6765\u5b8c\u6210\uff0c \u5ed6\u96ea\u5cf0\u6559\u7a0b \u3002 - \u76ee\u524d\u4f7f\u7528\u5e7f\u6cdb\u7684\u5546\u7528\u95ed\u6e90\u4ed8\u8d39\u5173\u7cfb\u6570\u636e\u5e93\uff1aOracle\uff0c\u5fae\u8f6f\u7684SQL Server\uff0cIBM\u7684DB2\u7b49\u3002 - \u5f00\u6e90\u6570\u636e\u5e93\u76f8\u5bf9\u6765\u8bf4\u4f7f\u7528\u66f4\u4e3a\u5e7f\u6cdb\uff1a\u4f7f\u7528\u5e7f\u6cdb\u7684MySQL\uff0c\u5b66\u672f\u6c14\u606f\u633a\u91cd\u7684PostgreSQL\uff0c\u9002\u5408\u684c\u9762\u548c\u79fb\u52a8\u5e94\u7528\u7684\u5d4c\u5165\u5f0f\u6570\u636e\u5e93sqlite\u3002 - MySQL\u4f7f\u7528\u6700\u591a\uff0c\u4e00\u822c\u4f5c\u4e3a\u9996\u9009\uff0c MySQL Community Server\u514d\u8d39\u4e0b\u8f7d \u3002\u66f4\u591aMySQL\u4e0eSQL\u8bed\u8a00\u7684\u4e1c\u897f\u53ef\u4ee5\u770b SQL.md \u3002 \u4f7f\u7528SQLite\uff1a - SQLite\u662f\u4e00\u79cd\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\uff0c\u5b83\u7684\u6570\u636e\u5e93\u5c31\u662f\u4e00\u4e2a\u6587\u4ef6\u3002\u7531\u4e8eSQLite\u672c\u8eab\u662fC\u5199\u7684\uff0c\u800c\u4e14\u4f53\u79ef\u5f88\u5c0f\uff0c\u6240\u4ee5\uff0c\u7ecf\u5e38\u88ab\u96c6\u6210\u5230\u5404\u79cd\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u751a\u81f3\u5728iOS\u548cAndroid\u7684App\u4e2d\u90fd\u53ef\u4ee5\u96c6\u6210\u3002 - Python\u5c31\u5185\u7f6e\u4e86SQLite3\uff0c\u6240\u4ee5\uff0c\u5728Python\u4e2d\u4f7f\u7528SQLite\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\u4efb\u4f55\u4e1c\u897f\uff0c\u76f4\u63a5\u4f7f\u7528\u3002 - sqlite3\u5e93\u6587\u6863 \u3002 - \u8bbf\u95ee SQLite\u4e3b\u9875 \u67e5\u8be2\u652f\u6301\u7684SQL\u65b9\u8a00\u8bed\u6cd5\u4e0e\u53ef\u7528\u6570\u636e\u7c7b\u578b\u3002 - \u9996\u5148\u8981\u660e\u786e\u7684\u6982\u5ff5\uff1a - \u8981\u64cd\u4f5c\u5173\u7cfb\u6570\u636e\u5e93\uff0c\u9996\u5148\u9700\u8981\u8fde\u63a5\u5230\u6570\u636e\u5e93\uff0c\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u79f0\u4e3a Connection \u3002 - \u8fde\u63a5\u5230\u6570\u636e\u5e93\u540e\uff0c\u9700\u8981\u6253\u5f00\u6e38\u6807\uff0c\u79f0\u4e4b\u4e3a Cursor \uff0c\u901a\u8fc7 Cursor \u6267\u884cSQL\u8bed\u53e5\uff0c\u7136\u540e\uff0c\u83b7\u5f97\u6267\u884c\u7ed3\u679c\u3002 - Python\u5b9a\u4e49\u4e86\u4e00\u5957\u64cd\u4f5c\u6570\u636e\u5e93\u7684API\u63a5\u53e3\uff0c\u4efb\u4f55\u6570\u636e\u5e93\u8981\u8fde\u63a5\u5230Python\uff0c\u53ea\u9700\u8981\u63d0\u4f9b\u7b26\u5408Python\u6807\u51c6\u7684\u6570\u636e\u5e93\u9a71\u52a8\u5373\u53ef\u3002 - \u7531\u4e8eSQLite\u7684\u9a71\u52a8\u5185\u7f6e\u5728Python\u6807\u51c6\u5e93\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6765\u64cd\u4f5cSQLite\u6570\u636e\u5e93\u3002 import sqlite3 # connect to sqlite3 database, the database is file test.db, if not exist, will create a new file with sqlite3.connect('test.db') as conn: # creat a cursor cursor = conn.cursor() # execute SQL cursor.execute('drop table if exists user') cursor.execute('create table user (id varchar(20) primary key, name varchar(20), score int)') cursor.execute(r'insert into user (id, name, score) values (\"1\", \"Michael\", 90)') cursor.execute(r'insert into user (id, name, score) values (\"2\", \"Kim\", 80)') cursor.execute(r'insert into user (id, name, score) values (\"3\", \"Bob\", 65)') print(cursor.rowcount) # querys cursor.execute('select * from user where id=? or id=?', ('1','2')) values = cursor.fetchall() print(values) # close cursor.close() # not necessary, __del__ will close automatically conn.commit() def get_score_in(con, min, max): cursor = conn.cursor() cursor.execute(r'select name from user where score >= ? and score <= ?', (min, max)) values = cursor.fetchall() cursor.close() return [v[0] for v in values] assert get_score_in(conn, 85, 100) == ['Michael'] assert get_score_in(conn, 70, 100) == ['Michael', 'Kim'] assert get_score_in(conn, 60, 100) == ['Michael', 'Kim', 'Bob'] \u4f7f\u7528Python\u7684DB-API\u65f6\uff0c\u53ea\u8981\u641e\u6e05\u695a Connection \u548c Cursor \u5bf9\u8c61\uff0c\u6253\u5f00\u540e\u4e00\u5b9a\u8bb0\u5f97\u5173\u95ed\uff0c\u5c31\u53ef\u4ee5\u653e\u5fc3\u5730\u4f7f\u7528\u3002 \u4f7f\u7528 Cursor \u5bf9\u8c61\u6267\u884c insert update delete \u8bed\u53e5\uff0c\u6267\u884c\u7ed3\u679c\u7531 rowcount \u8fd4\u56de\u5f71\u54cd\u7684\u884c\u6570\u3002 \u4f7f\u7528 Cursor \u6267\u884c select \u65f6\uff0c\u4f7f\u7528 fetchall \u62ff\u5230\u7ed3\u679c\u96c6\u3002\u7ed3\u679c\u96c6\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5143\u7d20\u662f\u5143\u7ec4\uff0c\u5bf9\u5e94\u4e8e\u6bcf\u4e00\u884c\u8bb0\u5f55\u3002 SQL\u8bed\u53e5\u5e26\u6709\u53c2\u6570\u65f6\u4f7f\u7528 ? \u4f5c\u4e3a\u5360\u4f4d\u7b26\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5143\u7ec4\u5143\u7d20\u5bf9\u5e94\u4f20\u5165\uff0c\u6709\u51e0\u4e2a\u5360\u4f4d\u7b26\u5c31\u9700\u8981\u51e0\u4e2a\u53c2\u6570\u3002\u800c\u4e0d\u5e94\u8be5\u4f7f\u7528Python\u81ea\u5e26\u7684\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u8fd9\u6837\u4f1a\u6709SQL\u6ce8\u5165\u7684\u98ce\u9669\u3002 \u9700\u8981\u786e\u4fdd\u6253\u5f00\u7684 Connection \u5bf9\u8c61\u80fd\u591f\u6b63\u786e\u5173\u95ed\u3002\u53ef\u4ee5\u4f7f\u7528 try...except..finally \u6216\u8005 with \u3002 \u4f7f\u7528MySQL\uff1a - \u786e\u4fdd\u672c\u5730\u5b89\u88c5\u7684MySQL\u914d\u7f6e\u652f\u6301utf-8\u3002 - show variables like '%char%'; \uff0c\u5176\u4e2d\u6709\u5f88\u591a\u9879\uff0c\u5982\u679c\u767b\u5f55 mysql \u7684\u7ec8\u7aef\u4fee\u6539\u4e86\u5b57\u7b26\u9875\u4e3a65001\uff0c\u90a3\u4e48\u6309\u9053\u7406\u6765\u8bf4\u5e94\u8be5\u662f\u5168\u90fd\u662futf-8\u3002\u5177\u4f53\u7f16\u7801\u95ee\u9898\u8fd9\u91cc\u4e0d\u7ec6\u7a76\uff0c\u786e\u4fdd\u652f\u6301\u4e2d\u6587\u5c31\u884c\u3002 mysql> show variables like 'char%'; +--------------------------+---------------------------------------------------------+ | Variable_name | Value | +--------------------------+---------------------------------------------------------+ | character_set_client | utf8mb4 | | character_set_connection | utf8mb4 | | character_set_database | utf8mb4 | | character_set_filesystem | binary | | character_set_results | utf8mb4 | | character_set_server | utf8mb4 | | character_set_system | utf8mb3 | | character_sets_dir | C:\\Program Files\\MySQL\\MySQL Server 8.0\\share\\charsets\\ | +--------------------------+---------------------------------------------------------+ MySQL\u7684utf-8\u5e76\u4e0d\u662f\u5b8c\u6574\u7684utf-8\uff0c\u6700\u591a\u53ea\u652f\u63013\u4e2a\u5b57\u8282\u7f16\u7801\uff0c\u4e0d\u652f\u63014\u4e2a\u5b57\u8282\u7f16\u7801\uff0c\u6700\u65b0\u7684utfmb4\u5219\u662f\u5b8c\u6574\u7684utf-8\u3002 \u5b89\u88c5 MySQL\u5b98\u65b9\u9a71\u52a8 \uff1a pip install mysql-connector \u4f7f\u7528\uff1a\u540c\u6837\u901a\u8fc7Python\u7684DB API\u4f7f\u7528\uff0c\u4f7f\u7528 mysql.connector.connect() \u83b7\u53d6\u8fde\u63a5\u4e4b\u540e\u5373\u53ef\u4f7f\u7528\u3002 import mysql.connector conn = mysql.connector.connect(user = 'root', password = 'password', database = 'test') \u8fde\u63a5\u65f6\u53ef\u80fd\u51fa\u73b0 mysql.connector.errors.NotSupportedError: Authentication plugin 'caching_sha2_password' is not supported \u9519\u8bef\uff0c\u53ef\u4ee5 \u53c2\u8003\u8fd9\u91cc : \u539f\u56e0\u5c31\u662fMySQL8.0\u4e2d\u9a8c\u8bc1\u63d2\u4ef6\u548c\u5bc6\u7801\u52a0\u5bc6\u7684\u65b9\u5f0f\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u7531\u4e4b\u524d\u7248\u672c\u7684 mysql_native_password \u53d8\u66f4\u4e3a\u4e86 caching_sha2_password \u3002 \u89e3\u51b3\u65b9\u68481\u662f\u5b89\u88c5 mysql-connector-python \u63d2\u4ef6\u3002 2\u662f\u4fee\u6539MySQL\u914d\u7f6e my.ini \u4e2d\u9a8c\u8bc1\u65b9\u5f0f\u6539\u56de\u4ee5\u524d\u7684\uff0c\u5e76\u4e14\u5728 connect \u65f6\u6dfb\u52a0\u53c2\u6570 auth_plugin='mysql_native_password' \u3002 \u80fd\u89e3\u51b3\u5373\u53ef\uff0c\u8fd9\u91cc\u9009\u62e91\u3002 \u53ef\u4ee5\u4f7f\u7528 fetchall fetchmany \u7b49\u63a5\u53e3\u83b7\u53d6 cursor \u6267\u884c\u7ed3\u679c\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5bf9 cursor \u8fdb\u884c\u8fed\u4ee3\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528 pymysql \u6a21\u5757\uff0c \u6587\u6863 \uff0c\u540c\u6837\u4f7f\u7528DB API\uff1a import pymysql conn = pymysql.connect(user = 'root', password = 'password', database = 'test') \u4f7f\u7528 SQLAlchemy \uff1a - \u5b89\u88c5\uff1a pip install SQLAlchemy - \u524d\u9762\u7684\u4f7f\u7528Python DB API\u64cd\u4f5c\u7ed3\u679c\u90fd\u662f\u8fd4\u56de\u4e00\u4e2a list \uff0c\u6bcf\u4e00\u6761\u8bb0\u5f55\u662f\u4e00\u4e2a tuple \u4f5c\u4e3a\u5143\u7d20\u3002\u4f7f\u7528\u5143\u7ec4\u5f88\u96be\u770b\u51fa\u8868\u7684\u7ed3\u6784\uff0c\u5982\u679c\u5c06\u4e00\u4e2a\u8bb0\u5f55\u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u8868\u793a\u51fa\u6765\uff0c\u4f1a\u66f4\u52a0\u76f4\u89c2\u4e00\u4e9b\u3002\u4e5f\u5c31\u662f\u4f20\u8bf4\u4e2d\u7684ORM\u6280\u672f\uff08Object-Relational Mapping\uff0c\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff09\u3002\u8fd9\u4e2a\u8f6c\u6362\u7531ORM\u6846\u67b6\u6765\u505a\u3002 - Python\u4e2d\u6700\u6709\u540d\u7684ORM\u6846\u67b6\u5c31\u662f SQLAlchemy \u3002 - \u57fa\u672c\u4f7f\u7528\uff1a from sqlalchemy import Column, String, create_engine from sqlalchemy.orm import sessionmaker from sqlalchemy.ext.declarative import declarative_base from sqlalchemy.sql.ddl import DDLBase # create a base class Base = declarative_base() # define ORM class class User(Base): # table name __tablename__ = 'user' # table structrue di = Column(String(20), primary_key=True) name = Column(String(20)) # initialize database connection # databse+connector://user:password@host:port/database engine = create_engine('mysql+mysqlconnector://root:password@localhost:3306/test') # create DBSession object DDSession = sessionmaker(bind=engine) \u4e0a\u9762\u4ee3\u7801\u5b8c\u6210SQLAlchemy\u521d\u59cb\u5316\u548c\u5177\u4f53\u8868\u7684\u5b9a\u4e49\uff0c\u6709\u591a\u4e2a\u8868\u5c31\u4ece Base \u6d3e\u751f\u5176\u4ed6\u7c7b\u3002 create_engine \u521d\u59cb\u5316\u6570\u636e\u5e93\u8fde\u63a5\u3002\u7528\u4ee5\u5b57\u7b26\u4e32\u8868\u793a\u8fde\u63a5\u4fe1\u606f\uff1a '\u6570\u636e\u5e93\u7c7b\u578b+\u6570\u636e\u5e93\u9a71\u52a8\u540d\u79f0://\u7528\u6237\u540d:\u53e3\u4ee4@\u673a\u5668\u5730\u5740:\u7aef\u53e3\u53f7/\u6570\u636e\u5e93\u540d' \u6709\u4e86ORM\uff0c\u6211\u4eec\u5411\u6570\u636e\u5e93\u8868\u4e2d\u6dfb\u52a0\u4e00\u884c\u8bb0\u5f55\uff0c\u53ef\u4ee5\u89c6\u4e3a\u6dfb\u52a0\u4e00\u4e2aUser\u5bf9\u8c61\u3002 \u6dfb\u52a0\u8bb0\u5f55\u7684\u8bdd\uff0c\u901a\u8fc7\u50cf\u4f1a\u8bdd\u4e2d\u6dfb\u52a0\u5bf9\u8c61\u5373\u53ef\uff1a # create DbSession object session = DBSession() # create new User object new_user = User(id = '5', name = 'Bob') # add to session session.add(new_user) # commit to database session.commit() session.close() \u67e5\u8be2\u4f7f\u7528 session.query() \uff1a session = DBSession() user = session.query(User).filter(User.id == 5).one() print('type: ', type(user)) print('name: ', user.name) session.close() \u5982\u679c\u8fd8\u6ca1\u6709\u8868\u7684\u8bdd\uff0c\u53ef\u4ee5\u5148\u521b\u5efa\u8868\uff0c\u4f1a\u521b\u5efa\u6240\u6709\u4ece Base \u6d3e\u751f\u7684\u7c7b\u5bf9\u5e94\u7684\u8868\uff1a Base.metadata.create_all(engine) \u53ef\u4ee5\u914d\u5408\u53e6\u4e00\u4e2a\u5e93 SQLAlchemy-utils \u4f7f\u7528\uff0c\u4e3aSQLAlchemy\u63d0\u4f9b\u4e86\u4e00\u4e9b\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u548c\u5e93\uff0c \u6587\u6863 \u3002 \u66f4\u591a\u64cd\u4f5c\u8fd8\u9700\u8981\u770b\u6587\u6863\u7814\u7a76\u3002 ORM\u6846\u67b6\u7684\u4f5c\u7528\u5c31\u662f\u628a\u6570\u636e\u5e93\u8868\u7684\u4e00\u884c\u8bb0\u5f55\u4e0e\u4e00\u4e2a\u5bf9\u8c61\u4e92\u76f8\u505a\u81ea\u52a8\u8f6c\u6362\u3002 \u6b63\u786e\u4f7f\u7528ORM\u7684\u524d\u63d0\u662f\u4e86\u89e3\u5173\u7cfb\u6570\u636e\u5e93\u7684\u539f\u7406\u3002 TODO\uff1a - \u6bcf\u4e2a\u5e93\u7684\u4f7f\u7528\u90fd\u4e0d\u80fd\u8bf4\u7b80\u5355\uff0c\u90fd\u4f7f\u7528DB API\u7684\u64cd\u4f5c\u8fd8\u8fd8\u8bf4\uff0c\u4f46SqlAlchemy\u8981\u4f7f\u7528\u65f6\u9700\u8981\u4e0b\u529f\u592b\u7684\u3002\u8fd9\u91cc\u53ea\u662f\u6700\u57fa\u672c\u64cd\u4f5c\uff0c\u8981\u719f\u7ec3\u5728\u9879\u76ee\u4e2d\u4f7f\u7528\u90fd\u9700\u8981\u9605\u8bfb\u6587\u6863\u8e29\u5751\u3002\u5177\u4f53\u6709\u5b9e\u8df5\u9700\u6c42\u65f6\u518d\u6765\u505a\u8fd9\u4e9b\u4e8b\u60c5\u3002 Web\u5f00\u53d1 Web\u5e94\u7528\uff1a - \u8f6f\u4ef6\u8fd0\u884c\u5728\u684c\u9762\u5ba2\u6237\u7aef\u4e0a\uff0c\u800c\u6570\u636e\u5e93\u8fd9\u79cd\u670d\u52a1\u578b\u7684\u8f6f\u4ef6\u8fd0\u884c\u5728\u670d\u52a1\u5668\u7aef\uff0c\u8fd9\u79cdClient/Server\u6a21\u5f0f\u79f0\u4e3aCS\u67b6\u6784\u3002 - \u4e92\u8054\u7f51\u5174\u8d77\u540e\uff0cWeb\u5e94\u7528\u7a0b\u5e8f\u56e0\u4e3a\u8981\u5feb\u901f\u8fed\u4ee3\u4fee\u6539\u548c\u5347\u7ea7\uff0c\u5982\u679c\u4f7f\u7528\u684c\u9762\u5ba2\u6237\u7aef\u5c31\u9700\u8981\u9010\u4e2a\u9891\u7e41\u5347\u7ea7\uff0c\u56e0\u6b64\u6d41\u884c\u8d77\u4e86\u5c06\u5ba2\u6237\u7aef\u8fd0\u884c\u5728\u6d4f\u89c8\u5668\u4e0a\u7684Browser/Server\u6a21\u5f0f\uff0c\u79f0BS\u67b6\u6784\u3002 - Web\u5e94\u7528\u7684\u51e0\u4e2a\u9636\u6bb5\uff1a - \u9759\u6001Web\u9875\u9762\uff0c\u9759\u6001HTML\u9875\u9762\uff0c\u4fee\u6539\u9875\u9762\u5185\u5bb9\u5c31\u9700\u8981\u7f16\u8f91HTML\u6e90\u6587\u4ef6\u3002\u65e9\u671f\u7684\u4e92\u8054\u7f51Web\u9875\u9762\u5c31\u662f\u9759\u6001\u7684\u3002 - CGI\uff1a\u9759\u6001Web\u9875\u9762\u65e0\u6cd5\u4e0e\u7528\u6237\u4ea4\u4e92\uff0c\u5982\u679c\u7528\u6237\u586b\u4e86\u4e00\u4e2a\u6ce8\u518c\u8868\u5355\uff0c\u9759\u6001Web\u9875\u9762\u5c31\u65e0\u6cd5\u5904\u7406\u3002\u8981\u5904\u7406\u7528\u6237\u53d1\u9001\u7684\u52a8\u6001\u6570\u636e\uff0c\u51fa\u73b0\u4e86Common Gateway Interface\uff0c\u7b80\u79f0CGI\uff0c\u7528C/C++\u7f16\u5199\u3002 - ASP/JSP/PHP\uff1aWeb\u5e94\u7528\u7531\u4e8e\u4fee\u6539\u9891\u7e41\uff0c\u7528C/C++\u8fd9\u79cd\u66f4\u504f\u5e95\u5c42\u7684\u8bed\u8a00\u975e\u5e38\u4e0d\u9002\u5408Web\u5f00\u53d1\uff0c\u800c\u811a\u672c\u8bed\u8a00\u7531\u4e8e\u5f00\u53d1\u6548\u7387\u9ad8\uff0c\u4e0eHTML\u7ed3\u5408\u7d27\u5bc6\uff0c\u56e0\u6b64\uff0c\u8fc5\u901f\u53d6\u4ee3\u4e86CGI\u6a21\u5f0f\u3002ASP\u662f\u5fae\u8f6f\u63a8\u51fa\u7684\u7528VBScript\u811a\u672c\u7f16\u7a0b\u7684Web\u5f00\u53d1\u6280\u672f\uff0c\u800cJSP\u7528Java\u6765\u7f16\u5199\u811a\u672c\uff0cPHP\u672c\u8eab\u5219\u662f\u5f00\u6e90\u7684\u811a\u672c\u8bed\u8a00\u3002 - MVC\uff1a\u4e3a\u4e86\u89e3\u51b3\u76f4\u63a5\u7528\u811a\u672c\u8bed\u8a00\u5d4c\u5165HTML\u5bfc\u81f4\u7684\u53ef\u7ef4\u62a4\u6027\u5dee\u7684\u95ee\u9898\uff0cWeb\u5e94\u7528\u4e5f\u5f15\u5165\u4e86Model-View-Controller\u7684\u6a21\u5f0f\uff0c\u6765\u7b80\u5316Web\u5f00\u53d1\u3002ASP\u53d1\u5c55\u4e3aASP.Net\uff0cJSP\u548cPHP\u4e5f\u6709\u4e00\u5927\u5806MVC\u6846\u67b6\u3002 - Python\u6709\u5f88\u591aWeb\u6846\u67b6\uff0c\u6709\u5f88\u591a\u6210\u719f\u7684\u6a21\u677f\u6280\u672f\uff0c\u9009\u62e9Python\u5f00\u53d1\u5e94\u7528\uff0c\u5f00\u53d1\u6548\u7387\u9ad8\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\u3002 HTML: - \u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\u3002 - HTML\u5b9a\u4e49\u4e86\u9875\u9762\u7684\u5185\u5bb9\uff0cCSS\u6765\u63a7\u5236\u9875\u9762\u5143\u7d20\u7684\u6837\u5f0f\uff0c\u800cJavaScript\u8d1f\u8d23\u9875\u9762\u7684\u4ea4\u4e92\u903b\u8f91\u3002 - \u5bf9\u4e8e\u4f18\u79c0\u7684Web\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u7cbe\u901aHTML\u3001CSS\u548cJavaScript\u662f\u5fc5\u987b\u7684\u3002 - \u5b66\u4e60\u7f51\u7ad9\uff1ahttps://www.w3school.com.cn/ - \u5f53\u6211\u4eec\u7528Python\u6216\u8005\u5176\u4ed6\u8bed\u8a00\u5f00\u53d1Web\u5e94\u7528\u65f6\uff0c\u6211\u4eec\u5c31\u662f\u8981\u5728\u670d\u52a1\u5668\u7aef\u52a8\u6001\u521b\u5efa\u51faHTML\uff0c\u8fd9\u6837\uff0c\u6d4f\u89c8\u5668\u5c31\u4f1a\u5411\u4e0d\u540c\u7684\u7528\u6237\u663e\u793a\u51fa\u4e0d\u540c\u7684Web\u9875\u9762\u3002 - \u793a\u4f8b\uff1a <html> <head> <title>Hello</title> <style> h1 { color: #333333; font-size: 48px; text-shadow: 3px 3px 3px #666666; } </style> <script> function change() { document.getElementsByTagName('h1')[0].style.color = '#ff0000'; } </script> </head> <body> <h1 onclick=\"change()\">Hello, world!</h1> </body> </html> WSGI\u63a5\u53e3\uff1a - Web\u5e94\u7528\u7684\u672c\u8d28\uff1a - \u6d4f\u89c8\u5668\u53d1\u9001\u4e00\u4e2aHTTP\u8bf7\u6c42\uff1b - \u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\uff0c\u751f\u6210\u4e00\u4e2aHTML\u6587\u6863\uff1b - \u670d\u52a1\u5668\u628aHTML\u6587\u6863\u4f5c\u4e3aHTTP\u54cd\u5e94\u7684Body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\uff1b - \u6d4f\u89c8\u5668\u6536\u5230HTTP\u54cd\u5e94\uff0c\u4eceHTTP Body\u53d6\u51faHTML\u6587\u6863\u5e76\u663e\u793a\u3002 - \u6700\u7b80\u5355\u7684\u9759\u6001Web\u5e94\u7528\u5c31\u662f\u5c06HTML\u6587\u4ef6\u4fdd\u5b58\u597d\uff0c\u7528\u73b0\u6210\u7684HTTP\u670d\u52a1\u5668\u8f6f\u4ef6\uff0c\u63a5\u53d7\u7528\u6237\u8bf7\u6c42\uff0c\u4ece\u6587\u4ef6\u4e2d\u53d6\u51faHTML\u8fd4\u56de\u3002\u6bd4\u5982Apache\u3001Nginx\u3001Lighttpd\u7b49\u5e38\u89c1\u7684\u9759\u6001\u670d\u52a1\u5668\u3002 - \u800c\u8981\u52a8\u6001\u751f\u6210HTML\uff0c\u5c31\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\u751f\u6210HTML\u7684\u6b65\u9aa4\u3002\u63a5\u53d7HTTP\u8bf7\u6c42\u3001\u89e3\u6790HTTP\u8bf7\u6c42\u3001\u53d1\u9001HTTP\u54cd\u5e94\u90fd\u662f\u82e6\u529b\u6d3b\u3002\u6b63\u786e\u7684\u505a\u6cd5\u662f\u5e95\u5c42\u4ee3\u7801\u7531\u4e13\u95e8\u7684\u670d\u52a1\u5668\u8f6f\u4ef6\u5b9e\u73b0\uff0c\u6211\u4eec\u7528Python\u4e13\u6ce8\u4e8e\u751f\u6210HTML\u6587\u6863\u3002\u56e0\u4e3a\u6211\u4eec\u4e0d\u5e0c\u671b\u63a5\u89e6\u5230TCP\u8fde\u63a5\u3001HTTP\u539f\u59cb\u8bf7\u6c42\u548c\u54cd\u5e94\u683c\u5f0f\uff0c\u6240\u4ee5\uff0c\u9700\u8981\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u8ba9\u6211\u4eec\u4e13\u5fc3\u7528Python\u7f16\u5199Web\u4e1a\u52a1\u3002 - \u8fd9\u4e2a\u63a5\u53e3\u5c31\u662fWSGI\uff1aWeb Server Gateway Interface\u3002\u7528\u6765\u63a5\u6536\u5e76\u54cd\u5e94HTTP\u8bf7\u6c42\u3002 - \u5b9a\u4e49\u4e00\u4e2a\u6700\u7b80\u5355\u7684WSGI\u63a5\u53e3\uff1a def application(environ, start_response): start_response('200 OK', [('Content-Type', 'text/html')]) # header, response code and header content return [b'<h1>Hello, web!</h1>'] # body \u6211\u4eec\u53ea\u9700\u8981\u5173\u7cfb\u4ece\u53c2\u6570 environ \u5b57\u5178\u4e2d\u62ff\u5230HTTP\u8bf7\u6c42\u4fe1\u606f\uff0c\u7136\u540e\u6784\u9020HTML\uff0c\u901a\u8fc7 start_response \u53d1\u9001Header\uff0c\u7136\u540e\u8fd4\u56deBody\u3002\u5e95\u5c42\u89e3\u6790HTTP\u8bf7\u6c42\u6216\u8005\u6784\u9020HTTP\u54cd\u5e94\u5934\u7684\u64cd\u4f5c\u4e0d\u9700\u8981\u81ea\u5df1\u6765\u505a\u3002 Python\u5185\u7f6e\u4e86\u4e00\u4e2aWSGI\u670d\u52a1\u5668\uff0c\u8fd9\u4e2a\u6a21\u5757\u53eb wsgiref \uff0c\u5b83\u662f\u7528\u7eafPython\u7f16\u5199\u7684WSGI\u670d\u52a1\u5668\u7684\u53c2\u8003\u5b9e\u73b0\u3002 from wsgiref.simple_server import make_server # create a http server httpd = make_server('', 8000, application) print(\"Serving HTTP on port 8000...\") httpd.serve_forever() \u542f\u52a8\u540e\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u8f93\u5165 http://localhost:8000/ \u5373\u53ef\u8bbf\u95ee\u3002\u547d\u4ee4\u884c\u53ef\u4ee5\u770b\u5230 wsgiref \u6253\u5370\u7684\u65e5\u5fd7\u4fe1\u606f\u3002 \u4f7f\u7528WSGI\u670d\u52a1\u5668\uff0c\u65e0\u8bba\u662f\u591a\u4e48\u590d\u6742\u7684Web\u5e94\u7528\u7a0b\u5e8f\uff0c\u5165\u53e3\u90fd\u662f\u4e00\u4e2aWSGI\u5904\u7406\u51fd\u6570\u3002HTTP\u8bf7\u6c42\u7684\u6240\u6709\u8f93\u5165\u4fe1\u606f\u90fd\u53ef\u4ee5\u901a\u8fc7 environ \u83b7\u5f97\uff0cHTTP\u54cd\u5e94\u7684\u8f93\u51fa\u90fd\u53ef\u4ee5\u901a\u8fc7 start_response() \u52a0\u4e0a\u51fd\u6570\u8fd4\u56de\u503c\u4f5c\u4e3aBody\u3002 \u5bf9\u4e8e\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5149\u9760WSGI\u51fd\u6570\u8fd8\u662f\u592a\u5e95\u5c42\u4e86\uff0c\u9700\u8981\u5728WSGI\u4e4b\u4e0a\u518d\u62bd\u8c61\u51faWeb\u6846\u67b6\u3002\u8fdb\u4e00\u6b65\u7b80\u5316Web\u5f00\u53d1\u3002 Python\u7684WSGI\u63a5\u53e3\u53ef\u4ee5\u770b\u8fd9\u91cc\uff1a PEP 333 - Python Web Server Gateway Interface v1.0 \u4e2d\u6587\u7248 \u3002 Web\u6846\u67b6\uff1a - \u4f7f\u7528 Flask \uff1a pip install flask \u3002 from flask import Flask from flask import request app = Flask(__name__) @app.route('/', methods=['GET', 'POST']) def home(): return '<h1>Home</h1>' @app.route('/signin', methods=['GET']) def signin_form(): return '''<form action=\"/signin\" method=\"post\"> <p><input name=\"username\"></p> <p><input name=\"password\" type=\"password\"></p> <p><button type=\"submit\">Sign In</button></p> </form>''' @app.route('/signin', methods=['POST']) def signin(): # \u9700\u8981\u4ecerequest\u5bf9\u8c61\u8bfb\u53d6\u8868\u5355\u5185\u5bb9\uff1a if request.form['username']=='admin' and request.form['password']=='password': return '<h3>Hello, admin!</h3>' return '<h3>Bad username or password.</h3>' if __name__ == '__main__': app.run() \u5904\u7406\u4e09\u4e2a\u8bf7\u6c42\uff1a GET / GET /signin \uff0c\u767b\u5f55\u9875\uff0c\u663e\u793a\u767b\u5f55\u8868\u5355\u3002 POST /signin \uff0c\u5904\u7406\u767b\u5f55\u8868\u5355\uff0c\u663e\u793a\u767b\u5f55\u7ed3\u679c\u3002 \u540c\u4e00\u4e2aURL/signin\u5206\u522b\u6709GET\u548cPOST\u4e24\u79cd\u8bf7\u6c42\uff0c\u6620\u5c04\u5230\u4e24\u4e2a\u5904\u7406\u51fd\u6570\u4e2d Flask\u901a\u8fc7\u88c5\u9970\u5668\u5728\u5185\u90e8\u81ea\u52a8\u5730\u628aURL\u51fd\u6570\u5173\u8054\u8d77\u6765\u3002 \u8fd0\u884c\u4e4b\u540e\u53ef\u4ee5\u5728 http://127.0.0.1:5000/ \u8bbf\u95ee\u3002 \u5b9e\u9645\u5e94\u7528\u7684\u8bdd\uff0c\u9700\u8981\u914d\u5408\u4e0a\u6570\u636e\u5e93\uff0c\u62ff\u5230\u7528\u6237\u540d\u548c\u53e3\u4ee4\u4e4b\u540e\u5e94\u8be5\u53bb\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u5bf9\u6bd4\u6765\u5224\u5b9a\u7528\u6237\u767b\u5f55\u72b6\u6001\u3002 \u9664\u4e86Flask\u8fd8\u6709\u5176\u4ed6Web\u6846\u67b6\uff1a Django \uff1a\u5168\u80fd\u578bWeb\u6846\u67b6\u3002 Web.py \uff1a\u5c0f\u5de7Web\u6846\u67b6\u3002 Bottle \uff1a\u7c7b\u4f3c\u4e8eFlask\u3002 Tornado \uff1aFacebook\u7684\u5f00\u6e90\u5f02\u6b65\u6846\u67b6\u3002 \u6709\u4e86Web\u6846\u67b6\uff0c\u6211\u4eec\u5728\u7f16\u5199Web\u5e94\u7528\u65f6\uff0c\u6ce8\u610f\u529b\u5c31\u4eceWSGI\u5904\u7406\u51fd\u6570\u8f6c\u79fb\u5230URL+\u5bf9\u5e94\u7684\u5904\u7406\u51fd\u6570\uff0c\u8fd9\u6837\uff0c\u7f16\u5199Web App\u5c31\u66f4\u52a0\u7b80\u5355\u4e86\u3002 \u5728\u7f16\u5199URL\u5904\u7406\u51fd\u6570\u65f6\uff0c\u9664\u4e86\u914d\u7f6eURL\u5916\uff0c\u4eceHTTP\u8bf7\u6c42\u62ff\u5230\u7528\u6237\u6570\u636e\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002Web\u6846\u67b6\u90fd\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684API\u6765\u5b9e\u73b0\u8fd9\u4e9b\u529f\u80fd\u3002Flask\u901a\u8fc7request.form['name']\u6765\u83b7\u53d6\u8868\u5355\u7684\u5185\u5bb9\u3002 \u4f7f\u7528\u6a21\u677f\uff1a - \u6709\u4e86Web\u6846\u67b6\u5c31\u4e0d\u9700\u8981\u5728WSGI\u51fd\u6570\u4e2d\u7f16\u5199\u6574\u4e2a\u7f51\u7ad9\u7684\u903b\u8f91\uff0c\u4f46\u4f9d\u7136\u9700\u8981\u63d0\u4f9b\u9875\u9762HTML\uff0c\u4f46\u5bf9\u4e8e\u4e00\u4e2a\u590d\u6742\u7684\u9875\u9762\u6765\u8bf4\u5c06\u6240\u6709HTML\u4ee5\u5b57\u7b26\u4e32\u65b9\u5f0f\u5199\u5728\u6e90\u7801\u4e2d\u662f\u4e0d\u73b0\u5b9e\u4e5f\u4e0d\u5408\u7406\u7684\u3002 - \u6240\u4ee5\u6709\u4e86\u6a21\u677f\u6280\u672f\uff0c\u51c6\u5907\u4e00\u4e2aHTML\u6587\u6863\uff0c\u5176\u4e2d\u6f5c\u5165\u4e86\u4e00\u4e9b\u53d8\u91cf\u548c\u6307\u4ee4\uff0c\u6839\u636e\u4f20\u5165\u7684\u6307\u4ee4\u548c\u6570\u636e\uff0c\u7ecf\u8fc7\u7a0b\u5e8f\u903b\u8f91\u66ff\u6362\u540e\u5f97\u5230\u6700\u7ec8\u7684HTML\uff0c\u53d1\u9001\u7ed9\u7528\u6237\u3002 - \u8fd9\u5c31\u662fMVC\uff1aModel-View-Controller\uff0c\u5373\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668\u3002 - \u5728\u8fd9\u91cc\uff0c\u6a21\u578b\u5c31\u662f\u8981\u4f20\u9012\u7ed9HTML\u7684\u6570\u636e\uff0c\u89c6\u56fe\u5c31\u662fHTML\u6a21\u677f\u6700\u7ec8\u8f93\u51fa\u7528\u6237\u770b\u5230\u7684HTML\uff0c\u63a7\u5236\u5668\u5219\u662fPython\u4ee3\u7801\u4e2d\u5c06\u6a21\u578b\u6570\u636e\u4f20\u9012\u7ed9HTML\u7684\u903b\u8f91\u3002 - \u6a21\u677f\u4e2d\u5927\u591a\u662f\u7559\u4e0b\u7531\u53d8\u91cf\u8868\u793a\u7684\u7a7a\u4f4d\uff0c\u7531\u6846\u67b6\u5c06\u6570\u636e\u901a\u8fc7\u5173\u952e\u5b57\u53c2\u6570\u6216\u8005\u5b57\u5178\u4f20\u9012\u7ed9\u6a21\u677f\u5f97\u5230\u6700\u7ec8\u7684HTML\u3002 - \u6bd4\u5982Flask\uff1a from flask import Flask, request, render_template app = Flask(__name__) @app.route('/', methods=['GET', 'POST']) def home(): return render_template('home.html') @app.route('/singin', methods=['GET']) def signin_form(): return render_template('form.html') @app.route('/signin', methods=['POST']) def signin(): username = request.form['username'] password = request.form['password'] if username == 'admin' and password == 'password': return render_template('signin-ok.html', username=username) return render_template('form.html', message='Bad username or password', username=username) if __name__ == '__main__': app.run() \u548c\u4e0a\u9762\u7684\u4f8b\u5b50\u4e00\u6837\uff0c\u4e0d\u8fc7\u6362\u6210\u4e86\u4f7f\u7528\u6a21\u677f\uff0cFlask\u9ed8\u8ba4\u7684\u6a21\u677f\u662fJinja2\uff0c\u5b89\u88c5Flask\u65f6\u4f1a\u5b89\u88c5\u3002 \u6a21\u677f\u6587\u4ef6\u9700\u8981\u653e\u5728 templates \u76ee\u5f55\u4e0b\u3002 Jinja2 \u6a21\u677f\u4e2d\u4f7f\u7528 {{ name }} \u8868\u793a\u8981\u66ff\u6362\u7684\u53d8\u91cf\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u8fd8\u9700\u8981\u5faa\u73af\u3001\u6761\u4ef6\u5224\u65ad\u7b49\u6307\u4ee4\u8bed\u53e5\uff0c\u5728Jinja2\u4e2d\uff0c\u7528 {% ... %} \u8868\u793a\u6307\u4ee4\u3002 \u9664\u4e86Jinja2\uff0c\u5e38\u89c1\u7684\u6a21\u677f\u8fd8\u6709\uff1a Mako \uff1a\u7528 <% ... %> \u548c ${xxx} \u7684\u4e00\u4e2a\u6a21\u677f\uff1b Cheetah \uff1a\u4e5f\u662f\u7528 <% ... %> \u548c ${xxx} \u7684\u4e00\u4e2a\u6a21\u677f\uff1b Django \uff1aDjango\u662f\u4e00\u7ad9\u5f0f\u6846\u67b6\uff0c\u5185\u7f6e\u4e00\u4e2a\u7528 {% ... %} \u548c {{ xxx }} \u7684\u6a21\u677f\u3002 \u76ee\u524d\u524d\u540e\u7aef\u5206\u79bb\uff0c\u5df2\u7ecf\u6ca1\u6709\u4eba\u7528\u6a21\u677f\u4e86\u3002 \u5f02\u6b65IO \u5f02\u6b65IO\uff1a - \u8981\u89e3\u51b3CPU\u7684\u9ad8\u901f\u548cIO\u7684\u4f4e\u901f\u4e0d\u5339\u914d\u7684\u95ee\u9898\uff0c\u907f\u514dCPU\u6682\u505c\u7b49\u5f85IO\u5b8c\u6210\uff0c\u5c31\u9700\u8981\u4f7f\u7528\u591a\u7ebf\u7a0b\u6216\u8005\u591a\u8fdb\u7a0b\u5c06IO\u4efb\u52a1\u5206\u914d\u5230\u5176\u4ed6\u7ebf\u7a0b\u6216\u8005\u8fdb\u7a0b\u53bb\u505a\uff0c\u4e5f\u5c31\u662f\u5f02\u6b65IO\u3002 - \u5f53\u4ee3\u7801\u8981\u6267\u884cIO\u64cd\u4f5c\u65f6\uff0c\u53ea\u53d1\u51faIO\u6307\u4ee4\uff0c\u5e76\u4e0d\u7b49\u5f85IO\u7ed3\u679c\uff0c\u7136\u540e\u6267\u884c\u5176\u4ed6\u4ee3\u7801\u3002\u4e00\u6bb5\u65f6\u95f4\u540e\u5f53IO\u6267\u884c\u5b8c\u6210\uff0c\u518d\u901a\u77e5CPU\u8fdb\u884c\u5904\u7406\u3002 - \u666e\u901a\u540c\u6b65IO\u4ee3\u7801\uff1a # things before f = open('test.txt', 'r') text = f.read() # thread wait here f.close() print(text) # other things \u540c\u6b65IO\u6a21\u578b\u4ee3\u7801\u65e0\u6cd5\u5b9e\u73b0\u5f02\u6b65IO\u6a21\u578b\u3002 \u5f02\u6b65IO\u6a21\u578b\u9700\u8981\u4e00\u4e2a\u6d88\u606f\u5faa\u73af\uff0c\u6d88\u606f\u5faa\u73af\u4e2d\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u65ad\u91cd\u590d\u8bfb\u53d6\u6d88\u606f-\u5904\u7406\u6d88\u606f\u8fd9\u4e2a\u5faa\u73af\uff0c\u5c31\u50cf\u6240\u6709GUI\u7a0b\u5e8f\u505a\u7684\u90a3\u6837\u3002 loop = get_event_loop() while True: event = loop.get_event() process_event(event) \u6d88\u606f\u6a21\u578b\u5176\u5b9e\u65e9\u5728\u5e94\u7528\u5728\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e86\u3002\u4e00\u4e2aGUI\u7a0b\u5e8f\u7684\u4e3b\u7ebf\u7a0b\u5c31\u8d1f\u8d23\u4e0d\u505c\u5730\u8bfb\u53d6\u6d88\u606f\u5e76\u5904\u7406\u6d88\u606f\u3002\u6240\u6709\u7684\u952e\u76d8\u3001\u9f20\u6807\u7b49\u6d88\u606f\u90fd\u88ab\u53d1\u9001\u5230GUI\u7a0b\u5e8f\u7684\u6d88\u606f\u961f\u5217\u4e2d\uff0c\u7136\u540e\u7531GUI\u7a0b\u5e8f\u7684\u4e3b\u7ebf\u7a0b\u5904\u7406\u3002 \u5728\u6d88\u606f\u6a21\u578b\u4e2d\uff0c\u5904\u7406\u4e00\u4e2a\u6d88\u606f\u5fc5\u987b\u975e\u5e38\u8fc5\u901f\uff0c\u5426\u5219\uff0c\u4e3b\u7ebf\u7a0b\u5c06\u65e0\u6cd5\u53ca\u65f6\u5904\u7406\u6d88\u606f\u961f\u5217\u4e2d\u7684\u5176\u4ed6\u6d88\u606f\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u770b\u4e0a\u53bb\u505c\u6b62\u54cd\u5e94\u3002 \u6d88\u606f\u6a21\u578b\u4e2d\u7684\u7684\u5f02\u6b65IO\uff1a\u9047\u5230IO\u64cd\u4f5c\u65f6\uff0c\u4ee3\u7801\u53ea\u53d1\u51faIO\u8bf7\u6c42\uff0c\u4e0d\u7b49\u5f85IO\u7ed3\u679c\uff0c\u76f4\u63a5\u7ed3\u675f\u672c\u8f6e\u6d88\u606f\u5904\u7406\uff0c\u8fdb\u5165\u4e0b\u4e00\u8f6e\u6d88\u606f\u5904\u7406\u3002IO\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u6536\u5230IO\u5b8c\u6210\u7684\u6d88\u606f\uff0c\u5904\u7406\u8be5\u6d88\u606f\u65f6\u83b7\u5f97IO\u64cd\u4f5c\u7684\u7ed3\u679c\u3002 \u540c\u6b65IO\u6a21\u578b\u4e2d\uff0c\u5904\u7406IO\u8fc7\u7a0b\u4e2d\u4e3b\u7ebf\u7a0b\u53ea\u80fd\u6302\u8d77\uff0c\u5f02\u6b65IO\u6a21\u578b\u4e2d\uff0c\u4e3b\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\uff0c\u7531IO\u7ebf\u7a0b\u5904\u7406IO\uff0c\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u591a\u4e2aIO\u8bf7\u6c42\uff0c\u5e76\u4e14\u6ca1\u6709\u5207\u6362\u7ebf\u7a0b\u7684\u64cd\u4f5c\u3002\u5bf9\u4e8eIO\u5bc6\u96c6\u578b\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u7528\u5f02\u6b65IO\u5c06\u5927\u5927\u63d0\u5347\u7cfb\u7edf\u7684\u591a\u4efb\u52a1\u5904\u7406\u80fd\u529b\u3002 \u534f\u7a0b \uff1a - \u53c8\u540d\u5fae\u7ebf\u7a0b\uff0cCoroutine\u3002 - \u63d0\u51fa\u5f88\u65e9\uff0c\u4f46\u76f4\u5230\u6700\u8fd1\u51e0\u5e74\u624d\u5728\u67d0\u4e9b\u8bed\u8a00\u4e2d\u5e7f\u6cdb\u5e94\u7528\u3002 - \u5b50\u7a0b\u5e8f\u53c8\u79f0\u51fd\u6570\uff0c\u57fa\u672c\u5728\u6240\u6709\u8bed\u8a00\u4e2d\u90fd\u662f\u901a\u8fc7\u6808\u5b9e\u73b0\u7684\u5c42\u7ea7\u8c03\u7528\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u5c31\u662f\u6267\u884c\u4e00\u4e2a\u5b50\u7a0b\u5e8f\u3002\u5b50\u7a0b\u5e8f\u8c03\u7528\u603b\u662f\u4e00\u4e2a\u5165\u53e3\uff0c\u4e00\u6b21\u8fd4\u56de\uff0c\u8c03\u7528\u987a\u5e8f\u662f\u660e\u786e\u7684\u3002 - \u534f\u7a0b\u770b\u4e0a\u53bb\u4e5f\u662f\u5b50\u7a0b\u5e8f\uff0c\u4f46\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5b50\u7a0b\u5e8f\u5185\u90e8\u53ef\u4e2d\u65ad\uff0c\u7136\u540e\u8f6c\u53bb\u6267\u884c\u522b\u7684\u5b50\u7a0b\u5e8f\uff0c\u9002\u5f53\u7684\u65f6\u5019\u5728\u56de\u6765\u6267\u884c\u3002\u4e2d\u65ad\u6267\u884c\u5176\u4ed6\u5b50\u7a0b\u5e8f\u4e0d\u662f\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u53bb\u6267\u884c\uff0c\u800c\u662f\u7c7b\u4f3c\u4e8eCPU\u7684\u4e2d\u65ad\uff0c\u5c31\u50cf\u7ebf\u7a0b\u5207\u6362\u4e00\u6837\uff0c\u4f46\u591a\u4e2a\u534f\u7a0b\u5176\u5b9e\u662f\u4e00\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u3002 - \u534f\u7a0b\u7684\u4f18\u52bf\uff1a - \u76f8\u5bf9\u7ebf\u7a0b\u800c\u8a00\u6781\u9ad8\u7684\u6267\u884c\u6548\u7387\uff0c\u5b50\u7a0b\u5e8f\u5207\u6362\u800c\u4e0d\u662f\u7ebf\u7a0b\u5207\u6362\uff0c\u6ca1\u6709\u7ebf\u7a0b\u5207\u6362\u7684\u5f00\u9500\uff0c\u7531\u7a0b\u5e8f\u81ea\u8eab\u63a7\u5236\u800c\u4e0d\u662f\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u3002\u548c\u591a\u7ebf\u7a0b\u6bd4\uff0c\u7ebf\u7a0b\u6570\u91cf\u8d8a\u591a\uff0c\u534f\u7a0b\u6027\u80fd\u4f18\u52bf\u5c31\u8d8a\u660e\u663e\uff0c\u4f53\u73b0\u5728\u5b50\u7a0b\u5e8f\u7684\u5207\u6362\u4e0a\u3002 - \u7b2c\u4e8c\u4f18\u52bf\u5c31\u662f\u4e0d\u9700\u8981\u591a\u7ebf\u7a0b\u7684\u9501\u673a\u5236\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u4e0d\u5b58\u5728\u540c\u65f6\u5199\u53d8\u91cf\u51b2\u7a81\uff0c\u5728\u534f\u7a0b\u4e2d\u63a7\u5236\u5171\u4eab\u8d44\u6e90\u4e0d\u52a0\u9501\uff0c\u53ea\u9700\u8981\u5224\u65ad\u72b6\u6001\u5c31\u597d\u4e86\uff0c\u6240\u4ee5\u6267\u884c\u6548\u7387\u6bd4\u591a\u7ebf\u7a0b\u9ad8\u5f88\u591a\u3002 - \u534f\u7a0b\u662f\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\uff0c\u5982\u679c\u8981\u5229\u7528\u591a\u6838CPU\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u591a\u8fdb\u7a0b+\u534f\u7a0b\u5b9e\u73b0\u3002 - Python\u4e2d\u5bf9\u534f\u7a0b\u7684\u652f\u6301\u662f\u901a\u8fc7 generator \u5b9e\u73b0\u7684\u3002\u751f\u6210\u5668\u540c\u65f6\u4e5f\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u53ef\u4ee5\u7528 for \u6765\u8fed\u4ee3\uff0c\u4e5f\u53ef\u4ee5\u7528 next() \u83b7\u53d6\u4e0b\u4e00\u4e2a yield \u51fa\u6765\u7684\u503c\u3002 - Python\u7684 yield \u4e0d\u4f46\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u63a5\u53d7\u8c03\u7528\u8005\u53d1\u51fa\u7684\u53c2\u6570\uff0c\u8c03\u7528\u751f\u6210\u5668\u7684 send(arg) \u51fd\u6570\u53d1\u9001\u6d88\u606f\u3002 - \u4f7f\u7528Python\u7684\u534f\u7a0b\u5b9e\u73b0\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b\uff1a def consumer(): r = '' while True: n = yield r if not n: return print('[CONSUMER] Consuming %s...' % n) r = '200 OK' def produce(c): c.send(None) n = 0 while n < 5: n = n + 1 print('[PRODUCER] Producing %s...' % n) r = c.send(n) print('[PRODUCER] Consumer return: %s' % r) c.close() c = consumer() produce(c) c.send(None) \u542f\u52a8\u751f\u6210\u5668\u3002\u6700\u540e\u901a\u8fc7 close() \u5173\u95ed\u751f\u6210\u5668\u3002 \u6574\u4e2a\u6d41\u7a0b\u65e0\u9501\uff0c\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\uff0c produce \u548c consumer \u534f\u4f5c\u5b8c\u6210\u4efb\u52a1\uff0c\u6240\u4ee5\u79f0\u4e3a\u201c\u534f\u7a0b\u201d\uff0c\u800c\u975e\u7ebf\u7a0b\u7684\u62a2\u5360\u5f0f\u591a\u4efb\u52a1\u3002 \u201c\u5b50\u7a0b\u5e8f\u5c31\u662f\u534f\u7a0b\u7684\u4e00\u79cd\u7279\u4f8b\u201d\u3002 \u5bf9\u751f\u6210\u5668\u8c03\u7528 next() \u65f6\uff0c yield \u8bed\u53e5\u5c06\u5f97\u5230 None \u3002 asyncio : - asyncio \u662fPython3.4\u5f15\u5165\u7684\u6807\u51c6\u5e93\u652f\u6301\u4e86\u5f02\u6b65IO\u3002 - \u4f8b\uff1a import asyncio import threading @asyncio.coroutine def hello(n): print(f'hello,world! from {threading.currentThread()}, n = {n}') r = yield from asyncio.sleep(1) print(f'hello,again! from {threading.currentThread()}, n = {n}') loop = asyncio.get_event_loop() # execute coroutine tasks = [hello(1), hello(2)] loop.run_until_complete(asyncio.wait(tasks)) loop.close() \u6267\u884c\u7ed3\u679c\uff1a hello,world! from <_MainThread(MainThread, started 7600)>, n = 2 hello,world! from <_MainThread(MainThread, started 7600)>, n = 1 hello,again! from <_MainThread(MainThread, started 7600)>, n = 2 hello,again! from <_MainThread(MainThread, started 7600)>, n = 1 @asyncio.coroutine \u628a\u4e00\u4e2a\u751f\u6210\u5668\u6807\u8bb0\u4e3a coroutine \u7c7b\u578b\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u534f\u7a0b\u653e\u5230\u6267\u884c\u534f\u7a0b\u7684\u4e8b\u4ef6\u5faa\u73af\u4e2d\u5c31\u884c\u3002\u5c31\u5b9e\u73b0\u4e86\u5f02\u6b65IO\u3002 asyncio.sleep() \u4e5f\u662f\u4e00\u4e2a coroutine \uff0c\u7ebf\u7a0b\u4e0d\u4f1a\u7b49\u5f85 asyncio.sleep() \uff0c\u800c\u662f\u76f4\u63a5\u4e2d\u65ad\u5e76\u6267\u884c\u4e0b\u4e00\u4e2a\u6d88\u606f\u5faa\u73af\uff0c\u5f53 asyncio.sleep() \u8fd4\u56de\u65f6\uff0c\u4ece yield from \u62ff\u5230\u8fd4\u56de\u503c\uff0c\u7136\u540e\u63a5\u7740\u6267\u884c\u4e0b\u4e00\u8bed\u53e5\u3002 \u4e24\u4e2a coroutine \u5728\u540c\u4e00\u7ebf\u7a0b\u4e2d\u6267\u884c\u3002 \u4f8b\u5b50\uff1a\u5f02\u6b65\u8fde\u63a5\u83b7\u53d6\u4e09\u4e2a\u7f51\u7ad9\u7684\u54cd\u5e94\uff0c\u6253\u5370\u54cd\u5e94\u5934\uff1a import asyncio @asyncio.coroutine def wget(host): print('wget %s...' % host) connect = asyncio.open_connection(host, 80) # connect is a coroutine reader, writer = yield from connect header = 'GET / HTTP/1.0\\r\\nHost: %s\\r\\n\\r\\n' % host writer.write(header.encode('utf-8')) yield from writer.drain() while True: line = yield from reader.readline() if line == b'\\r\\n': break print('%s header > %s' % (host, line.decode('utf-8').rstrip())) # Ignore the body, close the socket writer.close() loop = asyncio.get_event_loop() tasks = [wget(host) for host in ['www.sina.com.cn', 'www.sohu.com', 'www.163.com']] loop.run_until_complete(asyncio.wait(tasks)) loop.close() \u6267\u884c\u7ed3\u679c\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u53bb\u8fde\u63a5\u524d\u4e00\u4e2a\u7f51\u7ad9\u7684\u8fc7\u7a0b\u4e2d\uff0c\u534f\u7a0b\u8ba9\u51fa\u4e86\u65f6\u95f4\u7247\uff0c\u4e8b\u4ef6\u5faa\u73af\u4e2d\u65ad\u5e76\u6267\u884c\u4e86\u5176\u4ed6\u534f\u7a0b\u3002 \u591a\u4e2a\u534f\u7a0b\u53ef\u4ee5\u5c01\u88c5\u6210\u4e00\u7ec4Task\u5e76\u53d1\u6267\u884c\u3002 \u9605\u8bfb\uff1a Async IO in Python: A Complete Walkthrough async/await : - asyncio \u63d0\u4f9b\u7684\u8bed\u6cd5\u662f\uff1a @asyncio.coroutine \u5305\u88c5\u4e00\u4e2a\u751f\u6210\u5668\u4e3a\u534f\u7a0b\uff0c\u7136\u540e\u5728\u5185\u90e8\u53ef\u4ee5\u4f7f\u7528 yield from \u8c03\u7528\u53e6\u4e00\u4e2a\u534f\u7a0b\u5b9e\u73b0\u5f02\u6b65\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u5305\u88c5\u4e00\u4e2a\u666e\u901a\u51fd\u6570\u4e3a\u534f\u7a0b\u3002 - Python3.5\u5f15\u5165\u4e86\u65b0\u8bed\u6cd5 async \u548c await \uff0c\u7528\u4ee5\u66ff\u4ee3 @asyncio.coroutine \u548c yield from \u3002\u65e7\u8bed\u6cd5\u5728Python3.8\u7248\u672c\u5e9f\u5f03\uff0c\u5e76\u8ba1\u5212\u4e8ePython3.10\u4e2d\u79fb\u9664\u3002 - \u4e0d\u8981\u4e0e\u666e\u901a\u7684\u751f\u6210\u5668\u6df7\u6dc6\uff0c async \u7528\u6765\u5b9a\u4e49\u534f\u7a0b\uff0c await \u7528\u6765\u8c03\u7528\u534f\u7a0b\uff08\u4e0d\u80fd\u7528\u6765\u8c03\u7528\u4e00\u4e2a\u666e\u901a\u7684\u751f\u6210\u5668\uff09\u3002 aiohttp : - asyncio \u53ef\u4ee5\u5b9e\u73b0\u5355\u7ebf\u7a0b\u5e76\u53d1IO\u64cd\u4f5c\u3002\u5982\u679c\u4ec5\u7528\u5728\u5ba2\u6237\u7aef\uff0c\u53d1\u6325\u7684\u5a01\u529b\u4e0d\u5927\u3002 - \u5982\u679c\u628a asyncio \u7528\u5728\u670d\u52a1\u5668\u7aef\uff0c\u4f8b\u5982Web\u670d\u52a1\u5668\uff0c\u7531\u4e8eHTTP\u8fde\u63a5\u5c31\u662fIO\u64cd\u4f5c\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u5355\u7ebf\u7a0b\u52a0\u4e0a\u534f\u7a0b\u5b9e\u73b0\u591a\u7528\u6237\u7684\u9ad8\u5e76\u53d1\u652f\u6301\u3002 - asyncio \u5b9e\u73b0\u4e86TCP\u3001UDP\u3001SSL\u7b49\u534f\u8bae\uff0c aiohttp \u5219\u662f\u57fa\u4e8e asyncio \u5b9e\u73b0\u7684HTTP\u6846\u67b6\u3002 - \u4f8b\u5b50\uff1a ''' async web application. ''' import asyncio from aiohttp import web async def index(request): await asyncio.sleep(0.5) return web.Response(body=b'<h1>Index</h1>', content_type='text/html') async def hello(request): await asyncio.sleep(0.5) text = '<h1>hello, %s!</h1>' % request.match_info['name'] return web.Response(body=text.encode('utf-8'), content_type='text/html') async def init(loop): app = web.Application(loop=loop) app.router.add_route('GET', '/', index) app.router.add_route('GET', '/hello/{name}', hello) srv = await loop.create_server(app.make_handler(), '127.0.0.1', 8000) print('Server started at http://127.0.0.1:8000...') return srv loop = asyncio.get_event_loop() loop.run_until_complete(init(loop)) loop.run_forever() \u603b\u7ed3 \u52a8\u6001\u7c7b\u578b\u4ee3\u7801\u786e\u5b9e\u592a\u96be\u4ee5\u8bfb\u4ee3\u7801\u4e86\uff0c\u867d\u7136\u8bed\u6cd5\u7b80\u5355\uff0c\u4f46\u662f\u7c7b\u578b\u4f1a\u4ee4\u4eba\u7ea0\u7ed3\u3002 \u67d0\u4e9b\u65f6\u5019\u7f3a\u5931\u4e86\u7c7b\u578b\u4fe1\u606f\uff0c\u8865\u5168\u90fd\u96be\u4ee5\u8fdb\u884c\uff0c\u4e5f\u8bb8\u7c7b\u578b\u6807\u6ce8\u4f1a\u662f\u4e00\u4e2a\u597d\u7684\u624b\u6bb5\u3002 \u51fd\u6570\u5f0f\u7f16\u7a0b\u652f\u6301\u6709\u9650\uff0c\u4e0d\u8fc7\u4efb\u4f55\u624b\u6bb5\u90fd\u53ea\u662f\u624b\u6bb5\u800c\u4e0d\u662f\u76ee\u7684\uff0c\u5982\u679c\u8fbe\u6210\u76ee\u7684\u6709\u552f\u4e00\u7684\u6700\u4f73\u65b9\u5f0f\uff0c\u90a3\u4f7f\u7528\u6700\u4f73\u5b9e\u8df5\u5c31\u597d\u4e86\uff0c\u8fd8\u964d\u4f4e\u4e86\u9009\u62e9\u6210\u672c\u3002 \u5404\u79cd\u5e93\u529f\u80fd\u5b8c\u5584\uff0c\u7ec6\u8282\u7565\u591a\uff0c\u57fa\u672c\u6709\u4e86\u4e00\u4e2a\u5927\u6982\u5370\u8c61\uff0c\u5177\u4f53\u4f7f\u7528\u5219\u57fa\u672c\u90fd\u662f\u8d70\u9a6c\u89c2\u82b1\uff0c\u8fd8\u9700\u8981\u5177\u4f53\u7528\u5230\u65f6\u624d\u597d\u6df1\u5165\u3002 \u7b80\u5355\u5165\u95e8\u4e86\u7f51\u7edc\u7f16\u7a0b\u3001HTTP\u7f16\u7a0b\u3001\u5f02\u6b65\u7f16\u7a0b\u3001SQL\u7f16\u7a0b\uff0c\u4f46\u5177\u4f53\u5b9e\u7528\u8fd8\u8fdc\u8fdc\u4e0d\u591f\uff0c\u8fd8\u9700\u8981\u66f4\u591a\u7684\u7406\u8bba\u4e0e\u5b9e\u8df5\u3002\u6bd4\u5982HTTP\u3001\u534f\u7a0b\u3001WSGI\u7b49\u3002 \u66f4\u591a\u9ad8\u7ea7\u7684\u7528\u6cd5\uff0c\u66f4\u591a\u7ec6\u8282\uff0c\u66f4\u591a\u5177\u4f53\u5e93\u7684\u4f7f\u7528\uff0c\u5f85\u5b9e\u8df5\u540e\u6df1\u5165\u3002","title":"Python"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#python","text":"Python\uff08\u82f1\u56fd\u53d1\u97f3\uff1a/\u02c8pa\u026a\u03b8\u0259n/ \u7f8e\u56fd\u53d1\u97f3\uff1a/\u02c8pa\u026a\u03b8\u0251\u02d0n/\uff09\u662f\u4e00\u79cd\u5e7f\u6cdb\u4f7f\u7528\u7684\u89e3\u91ca\u578b\u3001\u9ad8\u7ea7\u548c\u901a\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\u3002Python\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8303\u578b\uff0c\u5305\u62ec\u51fd\u6570\u5f0f\u3001\u6307\u4ee4\u5f0f\u3001\u7ed3\u6784\u5316\u3001\u9762\u5411\u5bf9\u8c61\u548c\u53cd\u5c04\u5f0f\u7f16\u7a0b\u3002\u5b83\u62e5\u6709\u52a8\u6001\u7c7b\u578b\u7cfb\u7edf\u548c\u5783\u573e\u56de\u6536\u529f\u80fd\uff0c\u80fd\u591f\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\u4f7f\u7528\uff0c\u5e76\u4e14\u5176\u672c\u8eab\u62e5\u6709\u4e00\u4e2a\u5de8\u5927\u800c\u5e7f\u6cdb\u7684\u6807\u51c6\u5e93\u3002 Python\u7531\u5409\u591a\u00b7\u8303\u7f57\u82cf\u59c6\uff08Guido van Rossum\uff0c\u8377\u5170\u4eba\uff09\u521b\u9020\uff0c\u7b2c\u4e00\u7248\u53d1\u5e03\u4e8e1991\u5e74\uff0c\u5b83\u662fABC\u8bed\u8a00\u7684\u540e\u7ee7\u8005\uff0c\u4e5f\u53ef\u4ee5\u89c6\u4e4b\u4e3a\u4e00\u79cd\u4f7f\u7528\u4f20\u7edf\u4e2d\u7f00\u8868\u8fbe\u5f0f\u7684LISP\u65b9\u8a00\u3002 \u8bed\u8a00\u7279\u70b9\uff1a - \u57fa\u7840\u5e93\u5b8c\u5584\uff1a\u7f51\u7edc\u3001\u6587\u4ef6\u3001GUI\u3001\u6570\u636e\u5e93\u3001\u6587\u672c\u7b49\u3002 - \u7b2c\u4e09\u65b9\u5e93\u4f17\u591a\u3002 - \u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u8fd0\u884c\u6548\u7387\u4e0d\u9ad8\u3002 - \u52a8\u6001\u7c7b\u578b\u3001\u5f3a\u7c7b\u578b\u3002 \u591a\u79cd\u89e3\u91ca\u5668\uff1a - CPython\uff0c\u5b98\u65b9\u7248\u672c\uff0cC\u8bed\u8a00\u7f16\u5199\u3002 - IPython\uff0c\u57fa\u4e8eCPython\u7684\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u3002 - PyPy\uff1a\u91c7\u7528JIT\u6280\u672f\u5bf9Python\u8fdb\u884c\u52a8\u6001\u7f16\u8bd1\uff0c\u76ee\u6807\u662f\u6267\u884c\u901f\u5ea6\uff0c PyPy\u548cPython\u6709\u4e00\u5b9a\u4e0d\u540c \u3002 - Jython\uff1a\u8fd0\u884c\u5728JVM\u4e0a\u7684Python\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06Python\u4ee3\u7801\u7f16\u8bd1\u4e3aJava\u5b57\u8282\u7801\u6267\u884c\u3002 - IronPython\uff1a\u548cJython\u7c7b\u4f3c\uff0c\u7f16\u8bd1\u5230.NET\u5b57\u8282\u7801\u3002 - Python\u7684\u89e3\u91ca\u5668\u5f88\u591a\uff0c\u4f46\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u8fd8\u662fCPython\u3002\u5982\u679c\u8981\u548cJava\u6216.Net\u5e73\u53f0\u4ea4\u4e92\uff0c\u6700\u597d\u7684\u529e\u6cd5\u4e0d\u662f\u7528Jython\u6216IronPython\uff0c\u800c\u662f\u901a\u8fc7\u7f51\u7edc\u8c03\u7528\u6765\u4ea4\u4e92\uff0c\u786e\u4fdd\u5404\u7a0b\u5e8f\u4e4b\u95f4\u7684\u72ec\u7acb\u6027\u3002 \u9605\u8bfb\uff1a - Python3\u4e2d\u6587\u6587\u6863 - Python \u8bed\u8a00\u53c2\u8003\u624b\u518c Python\u53e5\u6cd5\u548c\u6838\u5fc3\u8bed\u4e49\uff0c\u6709\u4e00\u5b9a\u57fa\u7840\u53ef\u76f4\u63a5\u9605\u8bfb\u3002 - Python \u6559\u7a0b Python\u5b98\u65b9\u975e\u6b63\u5f0f\u6559\u7a0b\uff0c\u65e0\u57fa\u7840\u53ef\u5148\u4ece\u8fd9\u5f00\u59cb\u9605\u8bfb\u3002 - Python \u6807\u51c6\u5e93 Python\u6807\u51c6\u5e93\u7684\u6587\u6863\uff0c\u7528\u6765\u67e5\u9605\u3002 - \u5ed6\u96ea\u5cf0Python\u6559\u7a0b \uff08\u672c\u6587\u4e3b\u8981\u53c2\u8003\uff0c\u7528\u4e8e\u5165\u95e8\uff09 - Python 3 \u6559\u7a0b | \u83dc\u9e1f\u6559\u7a0b - Python\u6700\u4f73\u5b9e\u8df5\u6307\u5357 \uff0c\u4e00\u4efd\u7b2c\u4e09\u65b9\u7684\u6700\u4f73\u5b9e\u8df5\u6307\u5357\uff0c\u5f3a\u70c8\u5efa\u8bae\u9605\u8bfb\u3002","title":"Python\u8bed\u8a00\u5165\u95e8"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_1","text":"Python3\u548cPython2\u4e0d\u517c\u5bb9\uff0cPython2\u5df2\u7ecf\u505c\u6b62\u7ef4\u62a4\uff0c\u539f\u5219\u4e0a\u4e0d\u5e94\u518d\u4f7f\u7528\u3002\u65f6\u4e0b\uff082021.10.1\uff09\u6700\u65b0\u7248\u672c3.9.7\u3002 \u5b98\u65b9\u89e3\u91ca\u5668CPython\uff0c\u4e0b\u8f7d\u5b89\u88c5\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u3002 VSCode\u5b89\u88c5Python\u63d2\u4ef6\u3002 \u63a8\u8350IDE\uff1aPyCharm\u3002 print(\"hello,world!\") \u5404\u79cdPython\u76f8\u5173\u6587\u4ef6\u540e\u7f00\uff1a - .py python\u6e90\u6587\u4ef6\u3002 - .pyw \u9ed8\u8ba4\u7684 .py \u662f\u63a7\u5236\u53f0\u5e94\u7528\uff0c\u800c .pyw \u662f\u7528\u4e8e\u7f16\u5199GUI\u5e94\u7528\u7684\uff0c\u8fd0\u884c\u65f6 stdout stderr \u8f93\u51fa\u65e0\u6548\uff0c stdin \u53ea\u4f1a\u8bfb\u53d6\u5230 EOF \u3002\u7528 pythonw.exe \u8fd0\u884c\u3002 - .pyc \u7c7b\u4f3c\u4e8eJava\u5b57\u8282\u7801\u6587\u4ef6\uff0c\u7f16\u8bd1\u540e\u7684Python\u5b57\u8282\u7801\u811a\u672c\u6587\u4ef6\uff0c\u4f9b\u89e3\u91ca\u5668\u4f7f\u7528\uff0c\u4e0d\u60f3\u63d0\u4f9b\u6e90\u7801\u65f6\u53ef\u4ee5\u63d0\u4f9b\u3002\u67d0\u4e9b\u60c5\u51b5 __pycache__ \u5c31\u4f1a\u751f\u6210\u548cPython\u6e90\u6587\u4ef6\u540c\u540d\u5e76\u52a0\u4e0a\u540e\u7f00 .cpython-3X.pyc \u7684\u6587\u4ef6\uff0c\u5176\u5b9e\u5c31\u662f\u7f16\u8bd1\u540e\u5b57\u8282\u7801\u3002\u5982\u679c\u6e90\u6587\u4ef6\u672a\u53d1\u751f\u6539\u53d8\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u518d\u6b21\u7f16\u8bd1\uff0c\u800c\u662f\u76f4\u63a5\u6267\u884c\u3002 - .pyo \u4f18\u5316\u7f16\u8bd1\u540e\u7684 .pyc \u6587\u4ef6\uff0c\u622a\u6b62\u81f3Python3.5\uff0c\u73b0\u5df2\u4e0d\u518d\u4f7f\u7528\u3002 - .pyd \u4e00\u822c\u662f\u5176\u4ed6\u8bed\u8a00\u7f16\u5199\u7684\u7f16\u8bd1\u540ePython\u6269\u5c55\u6a21\u5757\uff0c\u63d0\u4f9b\u7ed9python\u7528\u6765\u8c03\u7528\u3002\u5176\u5b9e\u5c31\u662f\u7f16\u8bd1\u540e\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u3002 - .pyi \u5b58\u6839\u6587\u4ef6\u3002 - .pyz Python\u811a\u672c\u5b58\u6863\uff0c\u5305\u542b\u6807\u51c6Python\u811a\u672c\u5934\u4e4b\u540e\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u7684\u538b\u7f29Python\u811a\u672c\uff08ZIP\uff09\u7684\u811a\u672c\u3002 - .pyx Cython\u6e90\u6587\u4ef6\uff0cPython\u7684C\u6269\u5c55\uff0c\u53ef\u4ee5\u8c03\u7528\u672c\u5730C/C++\u4ee3\u7801\uff0c\u63d0\u4f9b\u63a5\u8fd1C\u7684\u6027\u80fd\u3002 - .pxd Cython\u811a\u672c\uff0c\u76f8\u5f53\u4e8eC/C ++\u6807\u5934\u3002 \u7f16\u8bd1\u8fd0\u884c\uff1a - python -m compileall <xxx.py or dir/> \u7f16\u8bd1\u7ed3\u679c\u4fdd\u5b58\u5728 __pycache__/ \u4e0b\u3002\u7f16\u8bd1\u540e\u7684 .pyc \u53ef\u4ee5\u901a\u8fc7 python xxx.pyc \u8fd0\u884c\u3002 compileall \u5176\u5b9e\u5c31\u662fpython\u63d0\u4f9b\u7684\u4e00\u4e2a\u6a21\u5757\u3002 - \u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u76f4\u63a5\u8fd0\u884c\uff1a python xxx.py \u3002","title":"\u73af\u5883"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_2","text":"\u6ce8\u91ca\uff1a\u884c\u6ce8\u91ca # \u4ee3\u7801\u5757\uff1a - \u6bcf\u4e00\u884c\u4e00\u6761\u8bed\u53e5\u3002\u4e00\u884c\u5199\u591a\u6761\u8bed\u53e5\u53ef\u4ee5\u7528 ; \u5206\u9694\u3002 - \u8bed\u53e5\u4ee5 : \u7ed3\u5c3e\u65f6\uff0c\u7f29\u8fdb\u8868\u793a\u4ee3\u7801\u5757\u3002 - \u7ea6\u5b9a\u4fd7\u6210\u662f\u75284\u7a7a\u683c\u7f29\u8fdb\u3002 - \u4e0d\u8981\u5728Python\u6e90\u6587\u4ef6\u4e2d\u6df7\u7528\u7a7a\u683c\u548cTab\u3002 \u6807\u8bc6\u7b26\uff1a - \u5b57\u6bcd\u6570\u5b57\u4e0b\u5212\u7ebf\u7ec4\u5408\uff0c\u4e0d\u80fd\u7528\u6570\u5b57\u5f00\u5934\u3002 \u6570\u636e\u7c7b\u578b\uff1a - \u6574\u6570\uff1a\u6ca1\u6709\u5927\u5c0f\u9650\u5236\uff0c\u5929\u7136\u652f\u6301\u9ad8\u7cbe\u5ea6\u3002 - \u6d6e\u70b9\u6570\uff1a\u6ca1\u6709\u5927\u5c0f\u9650\u5236\uff0c\u8d85\u51fa\u4e00\u5b9a\u8303\u56f4\u4f1a\u76f4\u63a5\u8868\u793a\u4e3a inf \u65e0\u7a77\u5927\u3002\u5176\u5b9e\u5c31\u662fIEEE 754 64\u4f4d\u6d6e\u70b9\u6570\uff0c\u6700\u5927\u8303\u56f4\u5728\u5341\u8fdb\u5236\u4e0b\u7ea6\u4e3a10\u7684308\u6570\u91cf\u7ea7\u3002 - \u5b57\u7b26\u4e32 - \u5e03\u5c14\u503c - \u5728Python\u4e2d\uff0c\u4efb\u4f55\u6570\u636e\u90fd\u662f\u5bf9\u8c61\uff0c \u5b57\u9762\u91cf\uff1a - \u6574\u6570\uff1a\u5341\u8fdb\u5236\u3001\u5341\u516d\u8fdb\u5236 0x \uff0c\u6574\u6570\u6d6e\u70b9\u6570\u4e2d\u5141\u8bb8\u4f7f\u7528\u4e0b\u5212\u7ebf\u5206\u9694\uff0c\u4e0b\u5212\u7ebf\u4f1a\u88ab\u5ffd\u7565\u3002 - \u6d6e\u70b9\uff1aC\u5199\u6cd5\u3002 - \u5b57\u7b26\u4e32\uff1a\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u6587\u672c\uff0c\u4f7f\u7528\u5176\u4e2d\u4e00\u8005\u65f6\u53e6\u4e00\u8005\u53ef\u4ee5\u4e0d\u7528\u8f6c\u4e49\u3002\u4e00\u822c\u662f\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u5176\u4e2d\u4e00\u8005\u5c31\u7528\u53e6\u4e00\u8005\uff0c\u5982\u679c\u90fd\u5305\u542b\u90a3\u4f7f\u7528\u8f6c\u4e49\u5b57\u7b26\u3002 - \u5b57\u7b26\uff1a\u548c\u5b57\u7b26\u4e32\u4e00\u6837\uff0c\u957f\u5ea6\u4e3a1\u90a3\u5c31\u662f\u5b57\u7b26\uff0c\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\u8868\u793a\u3002\u5177\u4f53\u6709\u65e0\u5b57\u7b26\u8fd9\u4e2a\u7c7b\u578b\u8fd8\u4e0d\u597d\u8bf4\uff0c\u53ef\u80fd\u63a5\u53d7\u5b57\u7b26\u7684\u51fd\u6570\u53ea\u662f\u901a\u8fc7\u5b57\u7b26\u4e32\u957f\u5ea6\u505a\u4e86\u5224\u65ad\u800c\u5df2\u3002 - \u8f6c\u4e49\u5b57\u7b26\uff1a \\r \\n \\t \\\\ ... \u3002 - \u539f\u59cb\u5b57\u7b26\u4e32\uff1a\u524d\u7f00 r\"\" \u5185\u90e8\u5b57\u7b26\u4e32\u4e0d\u4f1a\u8f6c\u4e49\u3002\u5176\u4e2d\u7684\u540c\u6837\u7684\u5f15\u53f7\u4ecd\u9700\u8f6c\u4e49\u3002 - \u591a\u884c\u5b57\u7b26\u4e32\uff1a \"\"\"hello\"\"\" \uff0c\u4e5f\u53ef\u4ee5\u662f\u539f\u59cb\u5b57\u7b26\u4e32\u3002 - \u5e03\u5c14\u503c\uff1a True False - \u7a7a\u503c\uff1a None - \u4e60\u60ef\u4e0a\u4f7f\u7528\u5168\u5927\u5199\u6765\u5b9a\u4e49\u5e38\u91cf\uff0c\u4f46\u662f\u6ca1\u6709\u673a\u5236\u4fdd\u8bc1\u4e0d\u53d8\u3002 \u52a8\u6001\u7c7b\u578b\u8bed\u8a00\uff1a - \u7c7b\u578b\u7ed1\u5b9a\u53d1\u751f\u5728\u8fd0\u884c\u65f6\u3002 - \u5b9a\u4e49\u65f6\u4e0d\u8981\u6c42\u663e\u5f0f\u5199\u51fa\u7c7b\u578b\u3002 - \u53ef\u4ee5\u5c06\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u53d8\u91cf\u8d4b\u4e3a\u5176\u4ed6\u7c7b\u578b\uff0c\u53d8\u91cf\u5373\u53d8\u4e3a\u65b0\u7c7b\u578b\u3002 \u5b57\u7b26\u4e32\u7f16\u7801\uff1a - ASCII\uff0cUnicode\uff0cUTF-8\uff0cGBK\uff0c\u4e0d\u8d58\u8ff0\u3002 - \u4e00\u822c\u5bf9Unicode\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u6587\u4ef6\u4f7f\u7528utf-8\u7f16\u7801\uff0c\u8bfb\u53d6\u540ePython\u5b57\u7b26\u4e32\u4e2d\u6309\u7167Unicode\u7801\u70b9\u5f62\u5f0f\u5b58\u653e\uff0c\u8bfb\u53d6\u548c\u4fdd\u5b58\u662f\u505a\u89e3\u7801\u548c\u7f16\u7801\u7684\u5de5\u4f5c\u3002 - Python\u652f\u6301Unicode\uff0cPython 3\u4e2d\u5b57\u7b26\u4e32\u662f\u4ee5Unicode\u7f16\u7801\uff08\u5373\u4fdd\u5b58\u4e3aUnicode\u7801\u70b9\uff09\u7684\u3002 - ord() \u51fd\u6570\u83b7\u53d6\u5b57\u7b26\u5bf9\u5e94\u7684Unicode\u7801\u70b9\uff0c chr() \u5c06Unicode\u7801\u70b9\u8f6c\u5316\u4e3a\u5b57\u7b26\u3002 - \u53ef\u4ee5\u4f7f\u7528 \\u4e2d \u8fd9\u79cd\u5341\u516d\u8fdb\u5236Unicode\u8f6c\u4e49\u5b57\u7b26\u3002 - \u5b57\u7b26\u4e32\u7684 encode() \u65b9\u6cd5\u53ef\u4ee5\u5c06Unicode\u5b57\u7b26\u4e32\u7f16\u7801\u4e3a\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u8282\u3002\u5bf9\u4e0d\u80fd\u7f16\u7801\u7684\u5b57\u7b26\uff0c\u6bd4\u5982\u4e2d\u6587\u7f16\u7801\u4e3a ascii \u7684\u8bdd\u4f1a\u8fd0\u884c\u9519\u8bef\u3002 - \u5728\u7f16\u7801\u5f97\u5230\u7684\u5b57\u8282\u5e8f\u5217\u4e2d\uff0c\u65e0\u6cd5\u663e\u793a\u4e3aASCII\u7684\u5b57\u7b26\u5c06\u663e\u793a\u4e3a \\x## \u7684\u5f62\u5f0f\u3002 - \u5982\u679c\u8bfb\u53d6\u4e86\u5b57\u8282\u6d41\uff0c\u4fdd\u5b58\u4e3a\u5b57\u8282\u5e8f\u5217\uff0c\u9700\u8981\u89e3\u7801\u5c31\u9700\u8981\u8c03\u7528 decode() \u65b9\u6cd5\u3002\u5982\u679c\u5b57\u8282\u4e2d\u6709\u65e0\u6548\u7684\u5b57\u8282\uff0c\u53ef\u4ee5\u6dfb\u52a0\u547d\u540d\u53c2\u6570 errors='ignore' \u5ffd\u7565\u9519\u8bef\u7684\u5b57\u8282\u3002 - \u5b57\u7b26\u4e32\u957f\u5ea6\uff1a len(string) - \u5b57\u7b26\u7c7b\u578b\uff1a str - \u5b57\u8282\u5e8f\u5217\u7c7b\u578b\uff1a bytes - \u4e3a\u4e86\u907f\u514d\u4e71\u7801\u95ee\u9898\uff0c\u5e94\u5f53\u59cb\u7ec8\u575a\u6301\u4f7f\u7528UTF-8\u7f16\u7801\u5bf9 str \u548c bytes \u8fdb\u884c\u8f6c\u6362\u3002 - \u5b57\u8282\u5e8f\u5217 bytes \u7684\u5b57\u9762\u91cf\u8868\u793a\uff1a b\"absd\\x##\" \uff0c\u53ea\u80fd\u4f7f\u7528ASCII\u5b57\u7b26\u548c \\x## \u8fd9\u79cd\u5f62\u5f0f\u8868\u793a 7f-ff \u4e4b\u95f4\u7684\u5b57\u8282\u3002 \u6587\u4ef6\u7f16\u7801\uff1a - \u4fdd\u5b58\u6e90\u6587\u4ef6\u65f6\uff0c\u6700\u597d\u4fdd\u5b58\u4e3a utf-8 \u7f16\u7801\u3002 - \u5f53Python\u89e3\u91ca\u5668\u8bfb\u53d6\u6e90\u4ee3\u7801\u65f6\uff0c\u4e3a\u4e86\u8ba9\u5b83\u6309UTF-8\u7f16\u7801\u8bfb\u53d6\uff0c\u6211\u4eec\u901a\u5e38\u5728\u6587\u4ef6\u5f00\u5934\u5199\u4e0a\u8fd9\u4e24\u884c\uff1a #!/usr/bin/env python3 # -*- coding: utf-8 -*- \u7b2c\u4e00\u884c\u662f\u4e3a\u4e86\u80fd\u5728\u7c7bUnix\u7cfb\u7edf\u4e2d\u5f53\u505a\u811a\u672c\u6267\u884c\uff0cwindows\u4e2d\u4e0d\u80fd\u5f53\u811a\u672c\u6267\u884c\uff0c\u4e0d\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u76f4\u63a5\u53bb\u6389\u3002 \u7b2c\u4e8c\u884c\u544a\u8bc9Python\u89e3\u91ca\u5668\uff0c\u6309\u7167UTF-8\u7f16\u7801\u8bfb\u53d6\u6e90\u7801\uff0c\u58f0\u660e\u4e86UTF-8\u662f\u786e\u5b9a\u4e86\u7f16\u8bd1\u5668\u7684\u8bfb\u53d6\u65b9\u5f0f\uff0c\u5e76\u4e0d\u610f\u5473\u8fd9\u6587\u4ef6\u5c31\u662futf-8\u7f16\u7801\u4e86\u3002\u4e3a\u4e86\u6b63\u786e\u8bfb\u53d6\uff0c\u9700\u8981\u4fdd\u5b58\u4e3aUTF-8 \u65e0BOM\u683c\u5f0f\u3002 \u652f\u6301\u4e2d\u6587\u6807\u8bc6\u7b26\u3002 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316\uff1a - \u7b2c\u4e00\u79cd\u548cC\u7c7b\u4f3c % \u5360\u4f4d\u7b26\u5b9e\u73b0\uff1a \"name = %s, age = %2d\" % (name, age) \uff0c\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u540e\u518d\u7528 % \u52a0\u4e0a\u53c2\u6570\u5217\u8868\u3002 - \u683c\u5f0f\u5316\u5360\u4f4d\u7b26\uff1a %d %f %s %x \u7b49\u3002 - %s \u6c38\u8fdc\u8d77\u4f5c\u7528\uff0c\u4f1a\u628a\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002 - \u7b2c\u4e8c\u79cd\u683c\u5f0f\u5316\u65b9\u5f0f\u662f\u4f7f\u7528\u5b57\u7b26\u4e32\u7684 format() \u65b9\u6cd5\uff1a \"name = {0}, age = {1:2.3f}\".format(name, age) \u3002\u4f7f\u7528 {} \u5305\u56f4\u7684\u4ece0\u5f00\u59cb\u7684\u53c2\u6570\u7d22\u5f15\u4f5c\u4e3a\u5360\u4f4d\u7b26\u3002 - \u7b2c\u4e09\u79cd\u683c\u5f0f\u5316\u65b9\u5f0f f-string \uff0c\u5b57\u7b26\u4e32\u524d\u6dfb\u52a0 f \uff0c\u5176\u4e2d\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165\u53d8\u91cf\uff0c\u7528 {var:formatstr} \u7684\u5f62\u5f0f\u3002\u4e5f\u5373\u662f\u5b57\u7b26\u4e32\u63d2\u503c\uff0c\u7b97\u662f\u6700\u65b9\u4fbf\u7684\u65b9\u5f0f\u3002 - \u4e8c\u4e09\u79cd\u683c\u5f0f\u4e2d\u4f7f\u7528 {{ }} \u5bf9\u539f\u59cb\u7684 { } \u5b57\u7b26\u8fdb\u884c\u8f6c\u4e49\u3002","title":"\u53d8\u91cf\u4e0e\u5b57\u7b26\u4e32"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_3","text":"\u5217\u8868 list \uff1a - \u5b9a\u4e49\uff1a [elem1, elem2, ...] - \u7d22\u5f15\u8bbf\u95ee\uff1a [index] \u4ece0\u5f00\u59cb - \u8bbf\u95ee\u6700\u540e\u4e00\u4e2a\u5143\u7d20 [-1] - \u8ffd\u52a0 append \u63d2\u5165 insert \u5220\u9664\u6307\u5b9a\u4f4d\u7f6e\u5143\u7d20 pop(i) - \u957f\u5ea6\uff1a len(list) - \u5143\u7d20\u7c7b\u578b\u53ef\u4ee5\u4e0d\u540c\u3001\u5217\u8868\u4e2d\u5b58\u5217\u8868\u53ef\u4ee5\u5f53\u591a\u7ef4\u6570\u7ec4\u4f7f\u7528\u3002 \u5143\u7ec4 tuple \uff1a - \u5b9a\u4e49\uff1a (elem1, elem2, elem3) - \u957f\u5ea6\u56fa\u5b9a\u3002 - \u540c\u6837\u53ef\u4ee5\u4f7f\u7528 [index] \u7d22\u5f15\u8bbf\u95ee\u3002 - \u5b9a\u4e49\u5143\u7ec4\u65f6\uff0c\u5143\u7ec4\u7684\u5143\u7d20\u5fc5\u987b\u88ab\u786e\u5b9a\u4e0b\u6765\uff0c\u4e0d\u80fd\u4fee\u6539\u5143\u7d20\u7684\u503c\u3002 - () \u5b9a\u4e49\u7a7a\u7684\u5143\u7ec4\u3002 - \u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u662f\u548c\u5355\u7eaf\u7684\u4e00\u4e2a\u503c\u6709\u6b67\u4e49\uff0c\u6240\u4ee5 (1) \u8868\u793a\u503c1\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5143\u7d20\u7684\u5143\u7ec4\uff0c\u672b\u5c3e\u52a0 , \u53ef\u4ee5\u6d88\u9664\u6b67\u4e49\uff0c (1, ) \u3002 - tuple\u786e\u5b9a\u4e0b\u6765\u540e\uff0ctuple\u4e2d\u7684\u5143\u7d20\u503c\u4fbf\u4e0d\u80fd\u4fee\u6539\uff0c\u4e5f\u5c31\u662ftuple\u5143\u7d20\u6307\u5411\u7684\u5bf9\u8c61\u4e0d\u80fd\u53d8\uff0c\u4f46\u662f\u53ef\u4ee5\u4fee\u6539\u5bf9\u8c61\u672c\u8eab\uff0c\u6bd4\u5982\u5bf9\u8c61\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u90a3\u5c31\u53ef\u4ee5\u4fee\u6539\u5217\u8868\u7684\u5143\u7d20\u503c\u3002 \u5b57\u5178\uff1a - \u7c7b\u578b\uff1a dict - \u5b9a\u4e49\uff1a d = {key1: value1, key2: value2, ...} \uff0c\u5143\u7d20\u65e0\u5e8f\u3002 - \u53d6\u5143\u7d20\uff1a - d[key] \uff0c\u4e0d\u5b58\u5728\u62a5\u9519\u3002 - d.get(key) \uff0c\u4e0d\u5b58\u8fd4\u56deNone\u3002 - d.get(key, -1) \uff0c\u4e0d\u5b58\u5728\u65f6\u8fd4\u56de\u4f20\u5165\u7684\u9ed8\u8ba4\u503c\u3002 - \u5224\u65adkey\u662f\u5426\u5b58\u5728\uff1a key in d - \u63d2\u5165\uff1a d[key] = value - \u5220\u9664\u67d0\u4e00\u4e2akey\uff1a d.pop(key) - \u54c8\u5e0c\u8868\u5b9e\u73b0\uff0cO(1)\u63d2\u5165\u5220\u9664\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5185\u5b58\u5360\u7528\u5927\u3002 - \u9700\u8981\u6ce8\u610f dict \u7684key\u9700\u8981\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\u3002\u8fd9\u6837\u624d\u80fd\u624d\u80fd\u4fdd\u8bc1\u6bcf\u6b21\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u51fa\u7684\u54c8\u5e0c\u503c\u4e0d\u53d8\u3002 - \u5143\u7ec4\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u4f46\u662f\u5143\u7ec4\u5185\u7684\u5143\u7d20\u4e0d\u4e00\u5b9a\u662f\uff0c\u5143\u7ec4\u9700\u8981\u5185\u90e8\u5143\u7d20\u90fd\u662f\u4e0d\u53ef\u53d8\u65f6\u624d\u80fd\u4f5c\u4e3akey\u3002 - \u6700\u5e38\u89c1\u7684key\u662f\u5b57\u7b26\u4e32\u3002 \u96c6\u5408\uff1a - \u65e0\u5e8f\u3001\u54c8\u5e0c\u8868\u5b9e\u73b0\u3001\u81ea\u52a8\u53bb\u91cd\uff0c - \u5b9a\u4e49\uff1a s = {elem1, elem2, ...} - \u6216\u8005\uff1a s = set([elem1, elem2, ...]) \u4f20\u5165\u4e00\u4e2a\u5217\u8868\u5f97\u5230\u5217\u8868\u6240\u6709\u5143\u7d20\u6784\u6210\u7684\u96c6\u5408\u3002 - \u76f4\u63a5\u5bf9\u5143\u7d20\u505a\u54c8\u5e0c\uff0c\u5143\u7d20\u9700\u8981\u4e0d\u53ef\u53d8\u3002 - \u6dfb\u52a0\uff1a add(key) - \u5220\u9664\uff1a remove(key) \u5143\u7d20\u9700\u8981\u5b58\u5728\u3002 - \u5224\u65ad\u662f\u5426\u5728\u96c6\u5408\u5185\uff1a key in s \u3002 - \u96c6\u5408\u95f4\u64cd\u4f5c\uff1a\u4ea4\u96c6 s1 & s2 \u5e76\u96c6 s1 & s2 \u3002 \u4e0d\u53ef\u53d8\u5bf9\u8c61\uff1a - \u5b57\u7b26\u4e32 str \u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u5217\u8868 list \u662f\u53ef\u53d8\u5bf9\u8c61\u3002 - \u5bf9\u4e8e\u53ef\u53d8\u5bf9\u8c61\uff1a\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\u53ef\u4ee5\u6539\u53d8\u6e90\u5bf9\u8c61\u5185\u90e8\u7684\u5185\u5bb9\u3002 - \u4e0d\u53ef\u53d8\u5bf9\u8c61\u6539\u53d8\u5185\u5bb9\u7684\u64cd\u4f5c\u90fd\u662f\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff0c\u6e90\u5bf9\u8c61\u4fdd\u6301\u4e0d\u53d8\u3002 - \u4e0d\u53ef\u53d8\u5bf9\u8c61\u4f18\u70b9\uff1a\u4e0d\u53d8\u5bf9\u8c61\u4e00\u65e6\u521b\u5efa\uff0c\u5bf9\u8c61\u5185\u90e8\u7684\u6570\u636e\u5c31\u4e0d\u80fd\u4fee\u6539\uff0c\u8fd9\u6837\u5c31\u51cf\u5c11\u4e86\u7531\u4e8e\u4fee\u6539\u6570\u636e\u5bfc\u81f4\u7684\u9519\u8bef\u3002\u540c\u65f6\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u540c\u65f6\u8bfb\u53d6\u4e0d\u7528\u52a0\u9501\u3002 - \u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u5982\u679c\u53ef\u4ee5\u8bbe\u8ba1\u4e3a\u4e0d\u53d8\u5bf9\u8c61\uff0c\u5c3d\u91cf\u8bbe\u8ba1\u4e3a\u4e0d\u53d8\u5bf9\u8c61\u3002","title":"\u5e38\u7528\u6570\u636e\u7ed3\u6784"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_4","text":"\u6761\u4ef6\uff1a if condition: if_statements elif condition: elif_statements else: else_statements \u5e76\u4e0d\u8981\u6c42\u6761\u4ef6\u4e00\u5b9a\u662f\u903b\u8f91\u503c True False \uff0c\u53ea\u8981\u662f\u975e\u96f6\u6570\u503c\u3001\u975e\u7a7a\u5b57\u7b26\u4e32\u3001\u975e\u7a7alist\u7b49\uff0c\u90fd\u5224\u65ad\u4e3a True \uff0c\u5426\u5219 False \u3002 \u68c0\u67e5\u662f\u5426\u662fint\u7c7b\u578b int() \uff0c\u5982\u679c\u4e0d\u662f\u5219\u4f1a \u5faa\u73af\uff1a for x in collections: body while condition: body \u5faa\u73af\u4e2d\u53ef\u4ee5\u7528 break continue \u3002 \u8303\u56f4\uff1a - python\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684 range(a, b) \u51fd\u6570\uff0c\u7528\u6765\u65b9\u4fbf\u5730\u904d\u5386\uff0c\u4f20\u5165 list(range(a, b)) \u53ef\u4ee5\u5f97\u5230a\u5230b-1\u7684\u5217\u8868\u3002\u9ed8\u8ba4\u6b65\u957f\u662f1\u3002 - range(a) 0\u5230a-1\u3002 - range(a, b) a\u5230b-1\u3002 - range(a, b, step) a\u5230b-1\uff0c\u6307\u5b9a\u6b65\u957f\u3002 for x in range(1, 5): # x from 1 to 4 body","title":"\u63a7\u5236\u6d41"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_5","text":"\u5185\u7f6e\u51fd\u6570\uff1a - Python\u5185\u7f6e\u4e86\u5f88\u591a\u6709\u7528\u7684\u51fd\u6570 \uff0c\u524d\u9762\u5df2\u7ecf\u7528\u8fc7\u4e00\u4e9b\u4e86\uff0c\u5305\u62ec\u5b57\u7b26\u548c\u7801\u70b9\u8f6c\u6362\u3001\u8f93\u5165\u8f93\u51fa\u3001\u5217\u8868\u957f\u5ea6\u3001\u6784\u9020\u8303\u56f4\u5217\u8868\u7b49\u96c6\u5408\u3001\u5e38\u7528\u6570\u5b66\u64cd\u4f5c\u7b49\u3002\u90fd\u4e86\u89e3\u4e00\u904d\u662f\u5fc5\u8981\u7684\u3002 - \u5185\u7f6e\u7684\u5e2e\u52a9\u51fd\u6570\u53ef\u4ee5\u6253\u5370\u51fa\u5185\u7f6e\u51fd\u6570\u7684\u5e2e\u52a9\uff1a help(abs) \uff0c\u53ef\u4ee5\u65e9\u4ea4\u4e92\u5f0f\u6267\u884c\u73af\u5883\u4e0b\u5c3d\u60c5\u67e5\u770b\u3002 - \u6570\u636e\u7c7b\u578b\u8f6c\u6362\uff1a int float \u3002 \u5b9a\u4e49\u51fd\u6570\uff1a def func(args): body \u8fd4\u56de\uff1a return retval \uff0c\u51fd\u6570\u7ed3\u675f\u65f6\u6ca1\u6709 return \u8bed\u53e5\u4f1a\u81ea\u52a8\u8fd4\u56de None \uff0c\u4e5f\u53ef\u4ee5\u663e\u5f0f\u5730 return \u548c return None \u3002 \u7a7a\u8bed\u53e5\uff1a pass \u8bed\u53e5\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u4e00\u822c\u7528\u6765\u4f5c\u4e3a\u5360\u4f4d\u7b26\uff08\u6bd4\u5982\u6761\u4ef6\u3001\u5faa\u73af\u3001\u51fd\u6570\u4f53\u7b49\uff09\u3002\u6bd4\u5982\u8fd8\u672a\u5b9e\u73b0\u51fd\u6570\uff0c\u56e0\u4e3a\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u51fd\u6570\u4f53\u3002 \u4f1a\u68c0\u67e5\u51fd\u6570\u8c03\u7528\u7684\u53c2\u6570\u4e2a\u6570\u662f\u5426\u5339\u914d\u3002 \u8fd4\u56de\u591a\u4e2a\u503c\uff1a return nx, ny \uff0c\u7ed3\u679c\u4f1a\u4f5c\u4e3a\u4e00\u4e2a\u5143\u7ec4\uff0c\u6240\u4ee5\u548c return (nx, ny) \u662f\u7b49\u4ef7\u7684\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u6253\u5305\uff08pack\uff09\u3002 \u5982\u679c\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u63a5\u6536\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u4f1a\u83b7\u53d6\u5230\u6574\u4e2a\u5143\u7ec4\u3002\u7528\u548c\u5143\u7ec4\u5927\u5c0f\u5339\u914d\u7684\u53d8\u91cf\u6765\u63a5\u6536\uff0c\u90a3\u4e48\u4f1a\u4e00\u4e00\u8d4b\u503c\uff08\u89e3\u5305\uff09\uff0c\u5176\u4ed6\u60c5\u51b5\uff0c\u53d8\u91cf\u5c11\u4e86\u4f1a \u7528\u591a\u4e2a\u53d8\u91cf\u63a5\u53d7\u65f6\u5176\u5b9e\u5bf9\u8fd4\u56de\u503c\u5c31\u662f\u505a\u8fed\u4ee3\uff0c\u4f9d\u6b21\u8d4b\u503c\u3002\u53ea\u8981\u8fd4\u56de\u503c\u662f\u53ef\u8fed\u4ee3\u7684\u6bd4\u5982\u5217\u8868\uff0c\u5e76\u4e14\u53d8\u91cf\u4e2a\u6570\u7b49\u4e8e\u6216\u591a\u4e8e\u5143\u7d20\u5143\u7d20\u4e2a\u6570\uff0c\u90a3\u4e48\u5c31\u80fd\u6210\u529f\u89e3\u5305\u3002 \u5982\u679c\u6709\u5fc5\u8981\u53ef\u4ee5\u5bf9\u53c2\u6570\u505a\u7c7b\u578b\u68c0\u67e5\uff0c\u4f7f\u7528\u5185\u7f6e\u7684 isinstance(instance, typeOrTypeTuple) \u3002 \u53c2\u6570\uff1a - \u9ed8\u8ba4\u53c2\u6570\uff1a\u4ece\u540e\u5f80\u524d\u6dfb\u52a0\u3002 def power(x, n = 2): res = 1 while n > 0: res *= x n -= 1 return res \u6ce8\u610f\uff1apython\u51fd\u6570\u5728\u5b9a\u4e49\u65f6\u9ed8\u8ba4\u53c2\u6570\u5c31\u88ab\u8ba1\u7b97\u51fa\u6765\u4e86\uff0c\u5982\u679c\u9ed8\u8ba4\u53c2\u6570\u4e5f\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u591a\u6b21\u8c03\u7528\u65f6\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\uff0c\u5982\u679c\u5728\u51fd\u6570\u5185\u6539\u53d8\u4e86\u9ed8\u8ba4\u53c2\u6570\uff0c\u90a3\u4e48\u540e\u9762\u7684\u8c03\u7528\u65f6\u53c2\u6570\u5c31\u88ab\u6539\u53d8\u4e86\u3002\u8981\u907f\u514d\u8fd9\u4e00\u70b9\uff0c\u8bf7\u5c06\u9ed8\u8ba4\u53c2\u6570\u8bbe\u7f6e\u4e3a\u4e0d\u53d8\u91cf\u3002\u5373 \u9ed8\u8ba4\u53c2\u6570\u5fc5\u987b\u6307\u5411\u4e0d\u53d8\u5bf9\u8c61\uff01 \uff0c\u6bd4\u5982 str None \u7b49\u3002 \u53ef\u53d8\u53c2\u6570\uff1a - \u5b9a\u4e49\u53c2\u6570\u65f6\u4f7f\u7528 *args \uff0c args \u5728\u51fd\u6570\u5185\u5c06\u4f5c\u4e3a\u5bf9\u5e94\u4f20\u5165\u53c2\u6570\u6784\u6210\u7684\u5143\u7ec4\u3002\u53ef\u4ee5\u662f\u7a7a\uff0c\u53ef\u4ee5\u662f\u4efb\u610f\u4e2a\u6570\u3002 - \u8c03\u7528\u65f6\u53ef\u4ee5\u4f200\u4e2a\u6216\u4efb\u610f\u4e2a\u53c2\u6570\u3002 - \u53ef\u4ee5\u4f20\u5165 list \u6216\u8005 tuple \uff0c\u53ea\u8981\u5728\u53c2\u6570\u524d\u52a0\u4e00\u4e2a * \uff0c\u5c31\u7b49\u4ef7\u4e8e\u662f\u5c06\u5217\u8868\u6216\u8005\u5143\u7ec4\u6240\u6709\u5143\u7d20\u6309\u987a\u5e8f\u4f20\u5165\uff08\u6240\u4ee5\u4f20\u5165\u975e\u53ef\u53d8\u53c2\u6570\u51fd\u6570\u4e5f\u662f\u53ef\u884c\u7684\uff0c\u53ea\u8981\u6570\u91cf\u5339\u914d\uff09\u3002\u8fd9\u79cd\u5199\u6cd5\u975e\u5e38\u5e38\u89c1\u3002 \u5173\u952e\u5b57\u53c2\u6570\uff1a - \u5b9a\u4e49\u53c2\u6570\u65f6\u4f7f\u7528 **args \uff0c args \u5728\u51fd\u6570\u5185\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u5178\uff0ckey\u662f\u53c2\u6570\u540d\u79f0\uff0c\u503c\u662f\u53c2\u6570\u503c\u3002 - \u53ef\u4ee5\u4f20\u51650\u6216\u4efb\u610f\u4e2a\u5fc5\u987b\u5e26\u53c2\u6570\u540d\u7684\u53c2\u6570\u3002 - \u975e\u5e38\u7075\u6d3b\uff0c\u53ef\u4ee5\u7528\u5728\u9664\u4e86\u5fc5\u8981\u9009\u9879\u8fd8\u652f\u6301\u7528\u6237\u81ea\u5b9a\u9009\u9879\u7684\u573a\u666f\u4e0b\u3002 - \u8c03\u7528\u65f6\u540c\u7406\uff0c\u53ef\u4ee5\u4f7f\u7528 **dict \u65b9\u5f0f\u8c03\u7528\uff0ckey\u5fc5\u987b\u662f\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u53c2\u6570\u540d\u3002 \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\uff1a - \u5982\u679c\u8981\u9650\u5236\u5173\u952e\u5b57\u53c2\u6570\u7684\u540d\u5b57\uff0c\u5c31\u53ef\u4ee5\u7528\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u3002 - \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u9700\u8981\u4e00\u4e2a\u7279\u6b8a\u5206\u9694\u7b26 * \uff0c * \u540e\u9762\u7684\u53c2\u6570\u88ab\u89c6\u4e3a\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u3002 def person(name, age, *, city, job): # city and job are named keyword parameters print(name, age, city, job) \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u5fc5\u987b\u4f20\u5165\u53c2\u6570\u540d\uff0c\u8fd9\u548c\u4f4d\u7f6e\u53c2\u6570\u4e0d\u540c\u3002\u5982\u679c\u6ca1\u6709\u4f20\u5165\u53c2\u6570\u540d\uff0c\u8c03\u7528\u5c06\u62a5\u9519\u3002 \u5982\u679c\u4e2d\u95f4\u6709\u53ef\u53d8\u53c2\u6570\u4e86\uff0c\u90a3\u540e\u9762\u7684\u53c2\u6570\u81ea\u52a8\u6210\u4e3a\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u3002 \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u53ef\u4ee5\u6709\u9ed8\u8ba4\u503c\uff0c\u5e76\u4e14\u8c03\u7528\u65f6\u56e0\u4e3a\u5df2\u7ecf\u6709\u53c2\u6570\u547d\u4e86\uff0c\u6240\u4ee5\u987a\u5e8f\u53ef\u4ee5\u968f\u610f\u3002 \u53c2\u6570\u7ec4\u5408\uff1a - \u5728Python\u4e2d\u5b9a\u4e49\u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u5fc5\u9009\u53c2\u6570\u3001\u9ed8\u8ba4\u53c2\u6570\u3001\u53ef\u53d8\u53c2\u6570\u3001\u5173\u952e\u5b57\u53c2\u6570\u548c\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\uff0c\u8fd95\u79cd\u53c2\u6570\u90fd\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528\u3002 - \u53c2\u6570\u5b9a\u4e49\u7684\u987a\u5e8f\u5fc5\u987b\u662f\uff1a\u5fc5\u9009\u53c2\u6570\u3001\u9ed8\u8ba4\u53c2\u6570\u3001\u53ef\u53d8\u53c2\u6570\u3001\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u548c\u5173\u952e\u5b57\u53c2\u6570\u3002 - \u5bf9\u4e8e\u4efb\u610f\u5f62\u5f0f\u7ec4\u5408\u53c2\u6570\u5217\u8868\uff0c\u603b\u662f\u53ef\u4ee5\u901a\u8fc7 fun(*args, **kw) \u7684\u65b9\u5f0f\u8c03\u7528\uff0c\u53ea\u8981\u6570\u91cf\u548c\u540d\u79f0\u662f\u5339\u914d\u7684\u3002 - \u5fc5\u9009\u53c2\u6570\u4e5f\u53ef\u4ee5\u901a\u8fc7\u547d\u540d\u53c2\u6570\u65b9\u5f0f\u8c03\u7528\uff0c\u7136\u540e\u540e\u7eed\u7684\u6240\u6709\u53c2\u6570\u90fd\u5fc5\u987b\u4ee5\u547d\u540d\u65b9\u5f0f\u4f20\u5165\uff0c\u5bf9\u987a\u5e8f\u6ca1\u6709\u8981\u6c42\u3002\u603b\u4f53\u4e0a \u53ea\u8981\u51fd\u6570\u80fd\u591f\u83b7\u53d6\u5230\u6240\u6709\u53c2\u6570\u5e76\u4e14\u4e0d\u4f1a\u91cd\u590d\u5373\u53ef \uff0c\u6ca1\u6709\u4f20\u5165\u4f46\u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u5c31\u7528\u9ed8\u8ba4\u503c\u3002 - \u4f7f\u7528\u592a\u591a\u7ec4\u5408\u4f1a\u964d\u4f4e\u53ef\u8bfb\u6027\uff0c\u9002\u5ea6\u5c31\u884c\u3002 \u9012\u5f52\uff1a def fib(n): return fibonacci(n, 0, 1) def fibonacci(n, a, b): if (n == 0): return a else: return fibonacci(n-1, b, a+b) python\u4e2d\u51fd\u6570\u4e0d\u8981\u6c42\u5b9a\u4e49\u4e00\u5b9a\u5728\u8c03\u7528\u524d\u3002 \u5c3e\u9012\u5f52\u4f18\u5316\u53ef\u4ee5\u907f\u514d\u9012\u5f52\u5c42\u6b21\u592a\u6df1\u5bfc\u81f4\u7684\u6808\u6ea2\u51fa\u95ee\u9898\u3002\u4f46\u597d\u50cfcpython\u5bf9\u4e0a\u9762\u7684\u5c3e\u9012\u5f52\u76f4\u63a5\u505a\u4f18\u5316\uff0c\u9700\u8981\u81ea\u5df1\u624b\u52a8\u5b9e\u73b0\u3002 \u5728\u6ca1\u6709\u5faa\u73af\u7684\u51fd\u6570\u8bed\u8a00\u4e2d\uff0c\u5faa\u73af\u53ea\u80fd\u901a\u8fc7\u5c3e\u9012\u5f52\u5b9e\u73b0\u3002 python\u4e2d\u9650\u5236\u4e86\u6700\u5927\u9012\u5f52\u6df1\u5ea6\uff0c import sys \uff0c\u901a\u8fc7 sys.getrecusionlimit() \u53ef\u4ee5\u83b7\u53d6\u6700\u5927\u9012\u5f52\u6df1\u5ea6\uff0c\u901a\u8fc7 sys.setrecursionlimit() \u53ef\u4ee5\u8bbe\u7f6e\u3002","title":"\u51fd\u6570"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_6","text":"\u5207\u7247\uff08slicing\uff09\uff1a - \u53d6\u5217\u8868\u6216\u5143\u7ec4\u90e8\u5206\u5143\u7d20\uff1a L[beginIndex : endIndexExclusive : step] \uff0c\u4ece\u5f00\u5934\u5f00\u59cb\u53d6\u90a3\u8d77\u59cb\u7d22\u5f15\u53ef\u4ee5\u7701\u7565\uff0c\u53d6\u5230\u7ed3\u5c3e\u65f6\u7ed3\u675f\u7d22\u5f15\u4e5f\u53ef\u4ee5\u7701\u7565\uff0c\u6b65\u957f\u9ed8\u8ba4\u662f1\u53ef\u7701\u7565\uff0c :step \u53ef\u9009\u3002\u7ed3\u675f\u7d22\u5f15\u8d85\u51fa\u8303\u56f4\u6309\u7167\u6700\u5927\u8ba1\u7b97\u3002 - \u4ece\u672b\u5c3e\u5f00\u59cb\u8ba1\u6570\u53d6\u5143\u7d20\uff0c\u7528\u8d1f\u7684\u7d22\u5f15\u5373\u53ef\uff1a [-2:-1] \uff0c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7d22\u5f15\u662f -1 \u800c\u4e0d\u662f0\u9700\u8981\u8bb0\u4f4f\u3002\u4e5f\u5c31\u662f\u8d1f\u7684\u7d22\u5f15\u8303\u56f4\u662f -length to -1 \u3002\u53d6\u5230\u672b\u5c3e\u90a3\u4e48\u7ed3\u675f\u7d22\u5f15\u5e94\u8be5\u7701\u7565\u800c\u4e0d\u662f\u75280\u3002 - \u8d77\u59cb\u7ed3\u675f\u90fd\u7701\u7565\uff1a L[:] \u5373\u8868\u793a\u590d\u5236\u6574\u4e2a\u5217\u8868\u3002 - \u6b63\u8d1f\u7d22\u5f15\u53ef\u4ee5\u6df7\u7528\uff0c\u90fd\u662f\u8868\u793a\u4e00\u4e2a\u4f4d\u7f6e\u800c\u5df2\u3002 - step \u4e3a\u8d1f\u53ef\u4ee5\u5012\u8fc7\u6765\u5207\uff0c\u6b64\u65f6\u540c\u6837\u5305\u62ec\u8d77\u59cb\u4f46\u4e0d\u5305\u62ec\u7ed3\u675f\uff0c\u65b9\u5411\u53cd\u8fc7\u6765\u4e86\u800c\u5df2\u3002\u5f62\u6210\u7684\u5b50\u5e8f\u5217\u548c\u5176\u5728\u539f\u5e8f\u5217\u4e2d\u7684\u76f8\u5bf9\u987a\u5e8f\u662f\u53cd\u8fc7\u6765\u7684\uff0c\u5f88\u597d\u7406\u89e3\u3002 - \u5b57\u7b26\u4e32\u4e5f\u53ef\u4ee5\u5207\u7247\uff0c\u7ed3\u679c\u540c\u6837\u662f\u5b57\u7b26\u4e32\u3002 - \u5f97\u5230\u7684\u7ed3\u679c\u662f\u65b0\u5bf9\u8c61\u3002\u5217\u8868\u5f97\u5230\u5217\u8868\uff0c\u5143\u7ec4\u5f97\u5230\u5143\u7ec4\u3002 - range \u4e5f\u53ef\u4ee5\u968f\u673a\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u5207\u7247\u3002 \u8fed\u4ee3\uff1a - \u7528for\u5faa\u73af\u6765\u904d\u5386\u4e00\u4e2a\u96c6\u5408\uff0c\u79f0\u4e4b\u4e3a\u8fed\u4ee3\uff0c for x in collection \u3002 - \u9664\u4e86\u5bf9\u4e8e list tuple range \u8fd9\u79cd\u6709\u4e0b\u6807\u7684\u96c6\u5408\uff0c\u8fd8\u6709 set dict \u8fd9\u79cd\u65e0\u4e0b\u6807\u7684\u96c6\u5408\u3002\u53ea\u8981\u53ef\u8fed\u4ee3\uff0c\u65e0\u8bba\u6709\u65e0\u4e0b\u6807\uff0c\u90fd\u53ef\u4ee5\u7528 for \u8fdb\u884c\u8fed\u4ee3\u3002\u5305\u62ec\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b\u3002 - \u5bf9\u5b57\u5178\u8fdb\u884c\u8fed\u4ee3\uff1a - for key in d \u9ed8\u8ba4\u8fed\u4ee3key\u3002 - for key, value in d.items() \u5b57\u5178\u5143\u7d20\u5176\u5b9e\u5c31\u662f\u4e8c\u5143\u7ec4\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\u83b7\u53d6\u3002 - for value in d.values() \u8fed\u4ee3\u503c\u3002 - \u5bf9\u53ef\u8fed\u4ee3\u7684\u96c6\u5408\u540c\u65f6\u8fed\u4ee3\u4e0b\u6807\uff1a - enumerate() \u53ef\u4ee5\u5c06\u96c6\u5408\u5143\u7d20\u53d8\u6210\u7d22\u5f15\u5143\u7d20\u5bf9\u3002 - for index, val in enumerate(collection) - from collections.abc import Iterable \uff0c\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\u90fd\u662f Iterable \u7c7b\u578b\u3002 \u5217\u8868\u751f\u6210\u5f0f\uff1a - \u4f7f\u7528\u5217\u8868\u751f\u6210\u5f0f\uff08List Comprehensions\uff09\u53ef\u4ee5\u65b9\u4fbf\u5730\u751f\u6210\u5217\u8868\u3002 - [expression for ... for ... if condition] - \u53ef\u4ee5\u6709\u591a\u5c42\u5faa\u73af\uff0c\u53ef\u4ee5\u6dfb\u52a0\u6761\u4ef6\u8fdb\u884c\u7b5b\u9009\uff0c\u6761\u4ef6\u6ee1\u8db3\u624d\u4f1a\u6267\u884c\u524d\u9762\u7684\u8868\u8fbe\u5f0f\u5f97\u5230\u5143\u7d20\u3002 - \u4f8b\uff1a [x*x for x in range(10) if x % 2 == 0] - [] \u4e2d\u7684\u5f0f\u5b50\u672c\u8eab\u662f\u4e00\u4e2a\u751f\u6210\u5668\u3002 - for \u524d\u9762\u4e5f\u53ef\u4ee5\u6dfb\u52a0 if-else \uff0c\u51fd\u6570\u662f\u8868\u8fbe\u5f0f\uff0c\u5fc5\u987b\u6709 else \uff0c\u800c for \u540e\u9762\u7684 if \u662f\u7b5b\u9009\u6761\u4ef6\uff0c\u4e0d\u80fd\u5e26 else \u3002 \u751f\u6210\u5668\uff1a - \u4e00\u8fb9\u6267\u884c\u5faa\u73af\u4e00\u8fb9\u751f\u6210\u5143\u7d20\u7684\u673a\u5236\uff0c\u5c31\u53eb\u751f\u6210\u5668\uff08Generator\uff09\uff0c\u53ef\u4ee5\u907f\u514d\u4e00\u5f00\u59cb\u5c31\u5c06\u6240\u6709\u5143\u7d20\u751f\u6210\u3002 - \u5c06\u4e0a\u9762\u5217\u8868\u751f\u6210\u5f0f\u7684\u5f0f\u5b50\u7528 () \u62ec\u8d77\u6765\u5c31\u662f\u4e00\u4e2a\u751f\u6210\u5668\u3002 - \u4f7f\u7528 next() \u53ef\u4ee5\u83b7\u53d6\u751f\u6210\u5f0f\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u6ca1\u6709\u66f4\u591a\u5143\u7d20\u629b\u51fa StopIteration \u9519\u8bef\u3002 - \u751f\u6210\u5668\u4e5f\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u7528for\u5faa\u73af\u8fed\u4ee3\u751f\u6210\u5668\u65f6\uff0c\u6574\u4e2a\u8fed\u4ee3\u8fc7\u7a0b\u662f\u751f\u6210\u5668\u548c\u5faa\u73af\u4ee3\u7801\u4ea4\u53c9\u6267\u884c\u7684\uff0c\u9700\u8981\u5143\u7d20\u5c31\u6267\u884c\u751f\u6210\u5668\u53d6\u51fa\u5143\u7d20\uff0c\u53d6\u5230\u540e\u6267\u884c\u4e0b\u4e00\u6b21\u5faa\u73af\uff0c\u5982\u6b64\u5f80\u590d\u3002\u751f\u6210\u7ed3\u675f\u540e\u5faa\u73af\u5c31\u7ed3\u675f\u4e86\u3002 - \u521b\u5efa\u4e86\u751f\u6210\u5668\u540e\uff0c\u5176\u5b9e\u4e00\u822c\u4e0d\u4f1a\u901a\u8fc7 next \u53d6\u5143\u7d20\u6765\u7528\uff0c\u57fa\u672c\u4e0a\u90fd\u662f\u901a\u8fc7 for \u5faa\u73af\u6765\u8fed\u4ee3\uff0c\u4e0d\u9700\u8981\u62c5\u5fc3 StopIteration \u9519\u8bef\u3002 - \u5b9a\u4e49\u51fd\u6570\u65f6\u5728\u5176\u4e2d\u4f7f\u7528 yield \u8fd4\u56de\u751f\u6210\u7684\u5143\u7d20\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u751f\u6210\u5668\u3002\u51fd\u6570\u8fd4\u56de\u503c\u4fdd\u5b58\u5728 StopIteration.value \u4e2d\uff0c\u8981\u83b7\u53d6\u8fd4\u56de\u503c\uff0c\u9700\u8981\u5728\u8fed\u4ee3\u5b8c\u6210\u540e\u8c03\u7528 next \u6355\u83b7\u5f02\u5e38\u8fdb\u884c\u83b7\u53d6\u3002 - \u6768\u8f89\u4e09\u89d2\u4f8b\u5b50\uff1a # pascal triangles def triangles(max): n, L = 0, [1] while n < max: yield L.copy() L.append(0) L = [L[i] + L[i-1] for i in range(len(L))] n += 1 return \"done\" g = triangles(10) res = [elem for elem in g] print(res) \u8fed\u4ee3\u5668\uff1a - \u53ef\u4ee5\u88ab next() \u51fd\u6570\u8c03\u7528\u5e76\u4e0d\u65ad\u8fd4\u56de\u4e0b\u4e00\u4e2a\u503c\u7684\u5bf9\u8c61\u79f0\u4e3a\u8fed\u4ee3\u5668\uff1a Iterator \u3002 - typing.py \u4e2d\uff1a Iterable = _alias(collections.abc.Iterable, 1) Iterator = _alias(collections.abc.Iterator, 1) \u751f\u6210\u5668\u90fd\u662f Iterator \u5bf9\u8c61\uff0c\u4f46 list \u3001 dict \u3001 str \u867d\u7136\u662f Iterable \uff0c\u5374\u4e0d\u662f Iterator \u3002\u5c06\u5176\u53d8\u4e3a Iterator \u53ef\u4ee5\u8c03\u7528 iter() \u51fd\u6570\u3002 Python\u7684 for \u5faa\u73af\u672c\u8d28\u5c31\u662f\u4e0d\u65ad\u8c03\u7528 next \u51fd\u6570\u5b9e\u73b0\u7684\u3002 for x in [1, 2, 3, 4, 5]: pass # equals to it = iter([1, 2, 3, 4, 5]) while True: try: x = next(it) except StopIteration: break Iterator \u7ee7\u627f\u81ea Iterable \uff0c\u540e\u7eed\u518d\u8be6\u8ff0\u3002","title":"\u96c6\u5408\u9ad8\u7ea7\u7279\u6027"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_7","text":"\u7eaf\u7cb9\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u4e2d\u6ca1\u6709\u53d8\u91cf\uff0c\u4efb\u4f55\u4e00\u4e2a\u51fd\u6570\uff0c\u53ea\u8981\u8f93\u5165\u786e\u5b9a\uff0c\u8f93\u51fa\u5c31\u662f\u786e\u5b9a\u7684\u3002\u8fd9\u79cd\u7eaf\u51fd\u6570\u662f\u6ca1\u6709\u526f\u4f5c\u7528\u7684\u3002\u800c\u5141\u8bb8\u4f7f\u7528\u53d8\u91cf\u7684\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u51fd\u6570\u5185\u90e8\u72b6\u6001\u4e0d\u786e\u5b9a\uff0c\u540c\u6837\u8f93\u5165\u53ef\u80fd\u5f97\u5230\u4e0d\u540c\u8f93\u51fa\uff0c\u79f0\u4e4b\u4e3a\u6709\u526f\u4f5c\u7528\u3002 \u51fd\u6570\u7f16\u7a0b\u7279\u70b9\uff1a - \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u8d4b\u503c\u3002 - \u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u8fd4\u56de\u503c - \u652f\u6301\u9ad8\u9636\u51fd\u6570\u3001\u95ed\u5305\u3001\u67ef\u91cc\u5316\u3002 \u9ad8\u9636\u51fd\u6570\uff1a\u4f7f\u7528\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u8fd4\u56de\u503c\u7684\u51fd\u6570\u3002 def add(x, y, f): return f(x) + f(y) \u6620\u5c04\uff08map\uff09\u548c\u89c4\u7ea6\uff08reduce\uff09\uff1a - map(func, iterable) \u4f20\u5165\u4e00\u4e2a\u51fd\u6570\u548c Iterable \uff0c\u5c06\u51fd\u6570\u4e00\u6b21\u4f5c\u7528\u4e8e\u5e8f\u5217\u6bcf\u4e2a\u5143\u7d20\uff0c\u5f97\u5230\u4e00\u4e2a Iterator \u3002 Iterator \u662f\u60f0\u6027\u5e8f\u5217\uff0c\u8981\u6c42\u51fa\u5177\u4f53\u7ed3\u679c\u9700\u8981\u904d\u5386\uff0c\u6216\u8005\u4f20\u5165 list() \u5f97\u5230\u5e8f\u5217\u3002 - from functools import reduce reduce(func, iterable, ...) \u4f20\u5165\u4e00\u4e2a\u51fd\u6570\uff0c\u4e00\u4e2a Iterable \uff0c\u8fd9\u4e2a\u51fd\u6570\u5fc5\u987b\u63a5\u53d72\u4e2a\u53c2\u6570\uff0creduce\u5c06func\u5e94\u7528\u4e8e\u5e8f\u5217\u7b2c1\u548c\u7b2c2\u4e2a\u5143\u7d20\uff0c\u5e76\u5c06\u7ed3\u679c\u7ee7\u7eed\u8fd0\u7528\u4e8e\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u76f4\u5230\u5e8f\u5217\u7ed3\u675f\u3002\u4e0d\u662f\u5185\u5efa\u51fd\u6570\uff0c\u53ef\u4ee5\u4f20\u5165\u591a\u4e2a Iterable \uff0c\u8fd9\u662f\u51fd\u6570\u63a5\u53d7\u4e0e Iterable \u4e2a\u6570\u76f8\u540c\u7684\u53c2\u6570\uff0c\u8fd0\u7528\u4e4b\u540e\u5f97\u5230\u7ed3\u679c\uff0c\u6700\u77ed\u7684 Iterable \u8fed\u4ee3\u5b8c\u4e4b\u540e\u5c06\u7ed3\u675f\u3002 # map def add10(x): return x + 10 print(list(map(add10, [1, 2, 3]))) def add(x, y): return x + y print(list(map(add, range(100)[::-1], [-x for x in range(100, 250)]))) # reduce def sum(x, y): return x + y print(reduce(sum, range(101))) # example DIGITS = dict((chr(ord('0') + val), val) for val in range(10)) # '0': 0, '1': 1, ... def str2int(s): def fn(x, y): return x * 10 + y def char2num(s): return DIGITS[s] return reduce(fn, map(char2num, s)) filter(func, iterable) \u7528\u4e8e\u8fc7\u6ee4\uff0c\u5176\u5b9e\u4e5f\u662f\u5e7f\u4e49\u4e0a\u7684\u6620\u5c04\u3002\u6839\u636e\u51fd\u6570\u4f5c\u7528\u4e8e\u5143\u7d20\u662f True \u4fdd\u7559\uff0c False \u4e22\u5f03\u3002 \u4f8b\u5b50\uff1a\u57c3\u62c9\u6258\u8272\u5c3c\u7b5b\u6cd5\u6c42\u7d20\u6570\u3002 # example: use Sieve of Eratosthenes to find all prime nunbers # https://zh.wikipedia.org/wiki/%E5%9F%83%E6%8B%89%E6%89%98%E6%96%AF%E7%89%B9%E5%B0%BC%E7%AD%9B%E6%B3%95 def _odd_iter(): n = 1 while True: n = n + 2 yield n def _not_division(n): return lambda x: x % n > 0 def primes(): yield 2 it = _odd_iter() # generate odd numbers while True: n = next(it) yield n it = filter(_not_division(n), it) # construct new Iterator gp = primes() print([next(gp) for _ in range(100)]) \u5185\u5efa\u7684 sorted(iterable, *, key=None, reverse=False) \u65b9\u6cd5\u3002\u63a5\u53d7 key \u51fd\u6570\u5b9e\u73b0\u81ea\u5b9a\u4e49\u6392\u5e8f\uff0c key \u51fd\u6570\u5c06\u4f5c\u7528\u4e8e\u5143\u7d20\u4e0a\uff0c\u6839\u636e\u5176\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f\u3002\u6bd4\u5982\u5b57\u7b26\u4e32\u5ffd\u7565\u5927\u5c0f\u5199\u4f20\u5165 str.lower \uff0c\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u65b0\u5217\u8868\u3002 \u95ed\u5305\uff1a - \u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c\u65f6\uff0c\u8c03\u7528\u51fd\u6570\u5c06\u83b7\u5f97\u8fd4\u56de\u7684\u51fd\u6570\uff0c\u6b64\u65f6\u4f20\u5165\u7684\u53c2\u6570\u53d8\u91cf\u7b49\u72b6\u6001\u88ab\u4fdd\u5b58\uff0c\u4e5f\u5c31\u662f\u559c\u95fb\u4e50\u89c1\u7684\u95ed\u5305\u4e86\u3002 - \u8fd4\u56de\u95ed\u5305\u65f6\u4e0d\u8981\u5f15\u7528\u4efb\u4f55\u5faa\u73af\u53d8\u91cf\uff0c\u6216\u8005\u540e\u7eed\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u91cf\u3002 - \u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u7262\u8bb0\u8be5\u51fd\u6570\u5e76\u672a\u6267\u884c\uff0c\u8fd4\u56de\u51fd\u6570\u4e2d\u4e0d\u8981\u5f15\u7528\u4efb\u4f55\u53ef\u80fd\u4f1a\u53d8\u5316\u7684\u53d8\u91cf\u3002 # every call will return a incresing value def createCounter(): n = 0 def counter(): nonlocal n # need define as nonlocal, if call outter local variable n = n + 1 return n return counter c = createCounter() print([c() for _ in range(10)]) d = createCounter() print([d() for _ in range(10)]) \u533f\u540d\u51fd\u6570\uff1a - \u4f20\u5165\u51fd\u6570\u65f6\uff0c\u6709\u4e9b\u6bd4\u8f83\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u4f20\u5165\u533f\u540d\u51fd\u6570\u66f4\u52a0\u65b9\u4fbf\u3002 - Python\u4e2d\u5bf9\u533f\u540d\u51fd\u6570\u63d0\u4f9b\u4e86\u6709\u9650\u7684\u652f\u6301\u3002 - \u8bed\u6cd5\uff1a lambda args: expression \uff0c\u533f\u540d\u51fd\u6570\u7684\u9650\u5236\u662f\u53ea\u80fd\u6709\u4e2a\u8868\u8fbe\u5f0f\uff0c\u4e0d\u7528\u5199 return \uff0c\u8fd4\u56de\u503c\u5c31\u662f\u8be5\u8868\u8fbe\u5f0f\u503c\u3002 - \u533f\u540d\u51fd\u6570\u4e5f\u662f\u51fd\u6570\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u8d4b\u503c\u3002 - \u652f\u6301\u786e\u5b9e\u6709\u9650\uff0c\u76f8\u6bd4\u4e4b\u4e0bScala\u5c31\u7075\u6d3b\u4e86\u5f88\u591a\u3002 f = lambda x : (lambda y : (lambda z : x + y + z)) print(f) print(f(1)) print(f(1)(2)) print(f(1)(2)(3)) # 6 \u504f\u51fd\u6570\uff1a - functools \u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u504f\u51fd\u6570\uff08partial function\uff09\u652f\u6301\u3002 - functools.partial \u5c31\u662f\u7528\u6765\u5e2e\u52a9\u521b\u5efa\u504f\u51fd\u6570\u7684\u3002 - python\u4e2d\u504f\u51fd\u6570\u662f\u6307\uff0c\u628a\u4e00\u4e2a\u53c2\u6570\u7684\u67d0\u4e9b\u53c2\u6570\u56fa\u5b9a\u4f4f\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u3002\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u4f1a\u66f4\u52a0\u7b80\u5355\u3002 from functools import partial # partial function int2 = partial(int, base = 2) print(int2(\"1000\")) # 8 # equals to kw = {\"base\": 2} print(int(\"1000\", **kw)) def f(a, b, c, d): print(f\"{a}, {b}, {c}, {d}\") f1 = partial(f, 10, 20) f1(30, 40) # 10, 20, 30, 40 \u504f\u51fd\u6570\u5982\u679c\u5b9a\u4e49\u65f6\u4f20\u4e86\u547d\u540d\u53c2\u6570\uff0c\u5728\u751f\u6210\u7684\u504f\u51fd\u6570\u8c03\u7528\u4e2d\u8fd8\u53ef\u4ee5\u901a\u8fc7\u547d\u540d\u53c2\u6570\u7684\u65b9\u5f0f\u8986\u76d6\u8fd9\u4e2a\u504f\u51fd\u6570\u5b9a\u4e49\u65f6\u4f20\u5165\u7684\u53c2\u6570\u3002 \u5b9a\u4e49\u65f6\u4e0d\u547d\u540d\u7684\u8bdd\u4f1a\u5c06\u53c2\u6570\u52a0\u5230 *args \u7684\u6700\u5de6\u8fb9\u3002\u4e0d\u80fd\u4f7f\u7528\u547d\u540d\u53c2\u6570\u518d\u8986\u76d6\u3002 \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u53ea\u80fd\u4ee5\u547d\u540d\u65b9\u5f0f\u4f20\u5165\uff0c\u4f4d\u7f6e\u53c2\u6570\u53ef\u4ee5\u901a\u8fc7\u4f4d\u7f6e\u4f20\u5165\u5c31\u662f\u4ece\u524d\u5f80\u540e\uff0c\u4e5f\u53ef\u4ee5\u547d\u540d\u4f20\u5165\uff0c\u90a3\u4e48\u540e\u9762\u7684\u90fd\u9700\u8981\u547d\u540d\u4f20\u5165\u3002\u548c\u666e\u901a\u51fd\u6570\u8c03\u7528\u89c4\u5219\u5dee\u4e0d\u591a\u3002 \u88c5\u9970\u5668\uff08Decorator\uff09\uff1a - \u5728\u8fd0\u884c\u671f\u589e\u52a0\u51fd\u6570\u529f\u80fd\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u88c5\u9970\u5668\u6a21\u5f0f\u5728\u8bed\u8a00\u5c42\u9762\u7684\u5b9e\u8df5\u3002 - \u672c\u8d28\u4e0a\uff0cdecorator\u5c31\u662f\u4e00\u4e2a\u8fd4\u56de\u51fd\u6570\u7684\u9ad8\u9636\u51fd\u6570\u3002\u8c03\u7528\u8981\u4fee\u9970\u7684\u51fd\u6570\uff0c\u5e76\u6dfb\u52a0\u81ea\u5df1\u7684\u529f\u80fd\u3002 - \u4f8b\u5b50\uff1a\u6dfb\u52a0\u65e5\u5fd7\u6253\u5370\u529f\u80fd\u3002 # decorator def log(func): def warpper(*args, **kv): print(f\"call {func.__name__}\") return func(*args, **kv) return warpper @log def now(): print('2021-10-2') def now2(): print('2021-10-2') now() log(now2)() # equals to now() print(now.__name__) # wrapper \u5c06 @log \u653e\u5728\u51fd\u6570\u5b9a\u4e49\u5904\uff0c\u76f8\u5f53\u4e8e\u6267\u884c log = log(now) \u3002 \u5982\u679c log \u9700\u8981\u52a0\u53c2\u6570\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u591a\u52a0\u4e00\u5c42\uff0c\u6700\u5916\u5c42\u63a5\u53d7\u88c5\u9970\u5668\u53c2\u6570\uff0c\u91cc\u5c42\u63a5\u53d7\u51fd\u6570\uff0c\u6700\u91cc\u5c42\u6dfb\u52a0\u903b\u8f91\u6267\u884c\u8f6c\u8c03\u3002\u6b64\u65f6\u7ecf\u8fc7\u88c5\u9970\u540e\u7684\u51fd\u6570 __name__ \u7b49\u5c5e\u6027\u4f1a\u53d8\u6210\u6700\u91cc\u5c42\u51fd\u6570\u7684\u5c5e\u6027\uff0c\u9700\u8981\u6dfb\u52a0 @functools.wraps(func) \u6765\u5c06\u539f\u59cb\u51fd\u6570\u7684\u5c5e\u6027\u590d\u5236\u5230 warpper \u51fd\u6570\u51fd\u6570\u4e2d\u3002 # decorator with arguments def log2(text): def decorator(func): @functools.wraps(func) def warpper(*args, **kv): print(f\"{text} : {func.__name__}\") return func(*args, **kv) return warpper return decorator @log2(\"execute\") # equals to now3 = log(\"execute\")(now3) def now3(): print('2021-10-2') now3() print(now3.__name__) # now3, if without @functools.wraps(func), will be wrapper","title":"\u51fd\u6570\u5f0f\u7f16\u7a0b"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_8","text":"\u6a21\u5757\uff1a - \u5728Python\u4e2d\uff0c\u4e00\u4e2a .py \u5c31\u662f\u4e00\u4e2a\u6a21\u5757\u3002 - \u53ef\u4ee5\u907f\u514d\u51fd\u6570\u53d8\u91cf\u540d\u51b2\u7a81\uff0c\u7f16\u5199\u6a21\u5757\u65f6\u4e0d\u5fc5\u8003\u8651\u540d\u5b57\u4f1a\u4e0e\u5176\u4ed6\u6a21\u5757\u51b2\u7a81\uff0c\u4f46\u8981\u6ce8\u610f\u5c3d\u91cf\u4e0d\u8981\u548c\u5185\u7f6e\u51fd\u6570\u91cd\u540d\u3002 - \u4e3a\u4e86\u907f\u514d\u6a21\u5757\u540d\u51b2\u7a81\uff0cPython\u53c8\u5f15\u5165\u4e86\u6309\u76ee\u5f55\u7ec4\u7ec7\u6a21\u5757\u7684\u65b9\u6cd5\uff0c\u79f0\u4e3a\u5305\uff08Package\uff09\u3002 - \u5f15\u5165\u5305\u4ee5\u540e\uff0c\u53ea\u6709\u9876\u5c42\u7684\u540d\u5b57\u4e0d\u4e0e\u522b\u4eba\u51b2\u7a81\uff0c\u90a3\u6240\u6709\u6a21\u5757\u5c31\u4e0d\u4f1a\u4e0e\u522b\u4eba\u51b2\u7a81\u3002 mycompany \u251c\u2500 __init__.py \u251c\u2500 abc.py \u2514\u2500 xyz.py \u4e0a\u8ff0\u4f8b\u5b50\u4e2d mycompany \u4e2d\u7684\u6a21\u5757\u540d\u5c31\u5206\u522b\u662f mycompany.abc mycompany.utils \u3002 \u6bcf\u4e2a\u5305\u76ee\u5f55\u4e0b\u90fd\u4f1a\u6709\u4e00\u4e2a __init__.py \u6587\u4ef6\uff0c\u662f\u5fc5\u987b\u5b58\u5728\u7684\uff0c\u5426\u5219Python\u4e0d\u4f1a\u5c06\u5176\u89c6\u4e3a\u5305\u3002 __init__.py \u53ef\u4ee5\u662f\u7a7a\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u6709Python\u4ee3\u7801\uff0c\u56e0\u4e3a __init__.py \u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u6a21\u5757\uff0c\u800c\u5b83\u7684\u6a21\u5757\u540d\u5c31\u662f mycompany \u3002\u3010Python3.3\u540e\u7248\u672c\u6a21\u5757\u5df2\u7ecf\u53ef\u4ee5\u4e0d\u8981\u8fd9\u4e2a\u6587\u4ef6\u4e86\u3002\u3011 \u81ea\u5b9a\u4e49\u6a21\u5757\u65f6\u53ea\u6709\u547d\u540d\u4e0d\u8981\u548cPython\u81ea\u5e26\u6a21\u5757\u51b2\u7a81\u3002\u4f8b\u5982\u7cfb\u7edf\u5f15\u5165\u4e86 sys \u6a21\u5757\uff0c\u5c31\u4e0d\u8981\u518d\u547d\u540d sys.py \uff0c\u5426\u5219\u5c06\u65e0\u6cd5\u5bfc\u5165\u7cfb\u7edf\u81ea\u5e26\u7684 sys \u6a21\u5757\u3002 \u6a21\u5757\u540d\u8981\u9075\u5faaPython\u53d8\u91cf\u547d\u540d\u89c4\u8303\uff0c\u4e0d\u8981\u4f7f\u7528\u4e2d\u6587\u3001\u7279\u6b8a\u5b57\u7b26\u3002 \u6a21\u5757\u540d\uff08\u6587\u4ef6\u540d\uff09\u4e0d\u8981\u548c\u7cfb\u7edf\u6a21\u5757\u51b2\u7a81\uff0c\u6700\u597d\u5148\u67e5\u770b\u7cfb\u7edf\u662f\u5426\u6709\u8fd9\u4e2a\u6a21\u5757\uff0c\u4ea4\u4e92\u73af\u5883\u4e0b import abc \u6210\u529f\u5219\u8bf4\u660e\u5b58\u5728\u3002 \u5199\u4e00\u4e2a\u6a21\u5757\u7684\u6807\u690e\u624b\u6cd5\uff1a - \u811a\u672c\u548c\u7f16\u7801\u6ce8\u91ca\u3002 - \u6a21\u5757\u4ee3\u7801\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u90fd\u88ab\u89c6\u4e3a\u6a21\u5757\u7684\u6587\u6863\u6ce8\u91ca\u3002 - \u4f7f\u7528 __author__ \u53d8\u91cf\u8868\u660e\u4f5c\u8005\u3002 - \u540e\u9762\u662f\u771f\u6b63\u7684\u4ee3\u7801\u90e8\u5206\u3002\u4e00\u822c\u5bfc\u5165\u6a21\u5757\u5199\u5728\u6700\u524d\u9762\u3002 if __name__=='__main__': test() \u7136\u540e\u662f\u901a\u8fc7\u547d\u540d\u884c\u8fd0\u884c\u6a21\u5757\u6587\u4ef6\u65f6\uff0c __name__ \u4f1a\u88ab\u7f6e\u4e3a __main__ \uff0c\u5176\u4e2d\u903b\u8f91\u5c31\u4f1a\u6267\u884c\uff0c\u800c\u5982\u679c\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u5bfc\u5165\uff08\u6b64\u65f6 __name__ \u662f\u6a21\u5757\u540d\uff09\u5224\u65ad\u5c31\u4f1a\u5931\u8d25\uff0c\u5c31\u4e0d\u4f1a\u6267\u884c\u3002\u6700\u5e38\u89c1\u662f\u5c06\u6a21\u5757\u5185\u6d4b\u8bd5\u4ee3\u7801\u5199\u5728\u6b64\u5904\u3002 \u4f5c\u7528\u57df\uff1a - \u5728\u4e00\u4e2a\u6a21\u5757\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5b9a\u4e49\u5f88\u591a\u51fd\u6570\u548c\u53d8\u91cf\uff0c\u4f46\u6709\u7684\u51fd\u6570\u548c\u53d8\u91cf\u6211\u4eec\u5e0c\u671b\u7ed9\u522b\u4eba\u4f7f\u7528\uff0c\u6709\u7684\u51fd\u6570\u548c\u53d8\u91cf\u6211\u4eec\u5e0c\u671b\u4ec5\u4ec5\u5728\u6a21\u5757\u5185\u90e8\u4f7f\u7528\u3002\u5728Python\u4e2d\uff0c\u662f\u901a\u8fc7 _ \u524d\u7f00\u6765\u5b9e\u73b0\u7684\u3002 - \u6b63\u5e38\u7684\u51fd\u6570\u548c\u53d8\u91cf\u540d\u662f\u516c\u5f00\u7684\uff0c\u53ef\u4ee5\u88ab\u76f4\u63a5\u5f15\u7528\u3002 - \u7c7b\u4f3c __xxx__ \u8fd9\u79cd\u53d8\u91cf\u662f\u7279\u6b8a\u53d8\u91cf\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f15\u7528\uff0c\u4f46\u662f\u6709\u7279\u6b8a\u7528\u9014\uff0c\u6bd4\u5982 __author__ __name__ \uff0c\u6a21\u5757\u6587\u6863\u6ce8\u91ca\u53ef\u4ee5\u901a\u8fc7\u7279\u6b8a\u53d8\u91cf __doc__ \u5f15\u7528\u3002\u81ea\u5df1\u5b9a\u4e49\u53d8\u91cf\u4e00\u822c\u4e0d\u8981\u5b9a\u4e49\u4e3a\u8fd9\u79cd\u5f62\u5f0f\u3002 - \u7c7b\u4f3c\u4e8e _xxx __xxx \u8fd9\u79cd\u547d\u540d\u7684\u53d8\u91cf\u662f\u975e\u516c\u5f00\uff08private\uff09\u7684\uff0c\u4e0d\u5e94\u8be5\u76f4\u63a5\u5f15\u7528\uff08\u5176\u5b9e\u4e5f\u662f\u53ef\u4ee5\u5f15\u7528\u7684\uff0c\u53ea\u662f\u7f16\u7a0b\u4e60\u60ef\u7ea6\u5b9a\u800c\u5df2\uff09\u3002 - \u5916\u90e8\u4e0d\u9700\u8981\u4f7f\u7528\u7684\u51fd\u6570\u5168\u90e8\u5b9a\u4e49\u4e3a private \uff0c\u53ea\u6709\u9700\u8981\u5f15\u7528\u7684\u624d\u5b9a\u4e49\u4e3a public \uff08\u901a\u8fc7\u547d\u540d\u7684\u65b9\u5f0f\uff0c\u975e\u5e38\u7b80\u5355\u7c97\u66b4\uff09\u3002 - \u5f15\u5165\u6a21\u5757\u7684\u64cd\u4f5c\u53ea\u4f5c\u7528\u4e8e\u5f53\u524d\u6a21\u5757\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u6587\u4ef6\uff0c\u5176\u4ed6\u6a21\u5757\u5f15\u5165\u4e86\u8be5\u6a21\u5757\u5e76\u4e0d\u4f1a\u5f15\u5165\u8be5\u6a21\u5757\u5f15\u5165\u7684\u6a21\u5757\u3002 \u5305\u7ba1\u7406\u5de5\u5177pip\uff1a - PyPI \uff08The Python Package Index\uff09\u662fPython\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u53ef\u4ee5\u641c\u7d22\u5b89\u88c5\u7b2c\u4e09\u65b9\u5e93\uff0c\u547d\u4ee4\u662f pip \u3002 - \u6bd4\u5982\uff1a pip install numpy \u3002 - \u7248\u672c\uff1a pip --version - \u66f4\u65b0 pip \uff1a python -m pip install --upgrade pip \u3002 - \u6362\u6e90\u5b89\u88c5\uff1a pip install numpy -i https://pypi.tuna.tsinghua.edu.cn/simple \u56fd\u5185\u955c\u50cf\u8bbe\u4e3a\u9ed8\u8ba4\u6e90\uff1a # \u6e05\u534e\u6e90 pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple # \u6216\uff1a # \u963f\u91cc\u6e90 pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ # \u817e\u8baf\u6e90 pip config set global.index-url http://mirrors.cloud.tencent.com/pypi/simple # \u8c46\u74e3\u6e90 pip config set global.index-url http://pypi.douban.com/simple/s \u66f4\u65b0\u5305\uff1a pip install --upgrade <package-name> \u5b89\u88c5\u5305\uff1a pip install packagename # \u6700\u65b0\u7248\u672c pip install packagename==1.0.4 # \u6307\u5b9a\u7248\u672c \u5378\u8f7d\u5305\uff1a pip uninstall <package-name> windows\u4e0b\u4e00\u822cPython\u5b89\u88c5\u5230\u4e86 Program Files \u76ee\u5f55\u4e2d\u7684\u8bdd\uff0c\u5b89\u88c5\u7b2c\u4e09\u65b9\u5e93\u65f6\u4f1a\u6ca1\u6743\u9650\u5199\u5165\uff0c\u8f6c\u800c\u5b89\u88c5\u5230 Users\\user\\AppData\\Roaming\\Python\\Python39\\site-packages \u4e0b\u3002 import sys \uff0c sys.path \u4e0b\u5b58\u653e\u7740\u5305\u7684\u641c\u7d22\u76ee\u5f55\uff0c\u5305\u542b\u5b89\u88c5\u76ee\u5f55\u548c\u7528\u6237\u76ee\u5f55\uff0c\u90fd\u80fd\u641c\u7d22\u5230\u3002\u4e0d\u9700\u8981\u592a\u8fc7\u5173\u5fc3\u3002 \u8981\u6dfb\u52a0\u81ea\u5df1\u7684\u641c\u7d22\u76ee\u5f55\uff1a \u7b2c\u4e00\u79cd sys.path.append(\"your_path\") \u3002\u8fd9\u79cd\u65b9\u6cd5\u662f\u8fd0\u884c\u65f6\u4fee\u6539\uff0c\u8fd0\u884c\u540e\u5931\u6548\u3002 \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u662f\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf PYTHONPATH \uff0c\u8be5\u73af\u5883\u53d8\u91cf\u4e2d\u8def\u5f84\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5230\u6a21\u5757\u641c\u7d22\u8def\u5f84\u4e2d\u3002\u53ea\u9700\u8981\u6dfb\u52a0\u81ea\u5df1\u7684\u641c\u7d22\u8def\u5f84\uff0cPython\u6807\u51c6\u5e93\u548c\u7b2c\u4e09\u65b9\u5e93\u7684\u8def\u5f84\u4e0d\u53d7\u5f71\u54cd\u3002 \u4f7f\u7528Anaconda\uff1a - Anaconda\u81ea\u5e26\u4e86\u5f88\u591apython\u7b2c\u4e09\u65b9\u79d1\u5b66\u8ba1\u7b97\u5e93\u3002\u53ef\u4ee5\u65b9\u4fbf\u5730\u76f4\u63a5\u4f7f\u7528\u3002 - \u5b89\u88c5\u65f6\u5982\u679c\u9009\u62e9\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\u5230path\uff0c\u5c31\u4f1a\u5c06\u7cfb\u7edfpath\u4e2d\u7684Python\u6307\u5411\u81ea\u5df1\u7684Python\uff0c\u5728\u547d\u4ee4\u884c\u4e0b\u5c31\u80fd\u4f7f\u7528\u8fd9\u4e9b\u5e93\u4e86\u3002","title":"\u6a21\u5757"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_9","text":"\u9762\u5411\u5bf9\u8c61\uff1a - Python\u4e2d\uff0c\u6240\u6709\u6570\u636e\u7c7b\u578b\u90fd\u53ef\u4ee5\u89c6\u4f5c\u5bf9\u8c61\u3002\u540c\u6837\u4e5f\u652f\u6301\u81ea\u5b9a\u4e49\u7c7b\u3002 - \u7c7b\u7684\u6570\u636e\u6210\u5458\u5728Python\u4e2d\u79f0\u4e3a\u5c5e\u6027\uff08Property\uff09\uff0c\u6210\u5458\u51fd\u6570\u79f0\u4e3a\u65b9\u6cd5\uff08Method\uff09\u3002 - \u5b9a\u4e49\u7c7b\uff1a class Person(object): def __init__(self, name, age) -> None: super().__init__() self.name = name self.age = age def print(self): print(f\"name: {self.name}, age: {self.age}\") def hello(): print(\"hello\") \u5982\u679c\u6ca1\u6709\u5408\u9002\u7684\u57fa\u7c7b\uff0c\u5c31\u4f7f\u7528 object \u3002 \u62c5\u4efb\u6784\u9020\u65b9\u6cd5\u89d2\u8272\u7684\u662f __init__ \u65b9\u6cd5\u3002 Python\u4e2d\u5b9a\u4e49\u5b9e\u4f8b\u65b9\u6cd5\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e00\u5b9a\u662f self \uff0c\u901a\u8fc7\u5b9e\u4f8b\u8c03\u7528\u65f6\u89e3\u91ca\u5668\u4f1a\u9ed8\u8ba4\u4f20\u5165\u5b9e\u4f8b\u81ea\u8eab\uff0c\u4f46\u5b9a\u4e49\u65f6\u9700\u8981\u663e\u5f0f\u58f0\u660e\u3002 \u5b9a\u4e49\u7c7b\u65b9\u6cd5\u5219\u4e0d\u7528\u4f20\u5165 self \uff0c\u8fd9\u662f\u65f6\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u8c03\u7528\u3002\u4ee5\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5426\u662f self \u533a\u5206\u5b9e\u4f8b\u548c\u7c7b\u65b9\u6cd5\u3002 \u5728\u5b9e\u4f8b\u65b9\u6cd5\u4e2d\u8c03\u7528\u5176\u4ed6\u5b9e\u4f8b\u65b9\u6cd5\u9700\u8981\u901a\u8fc7 self.method() \uff0c\u8c03\u7528\u7c7b\u65b9\u6cd5\u9700\u8981\u901a\u8fc7\u7c7b\u540d ClassName.method() \u3002 \u548c\u9759\u6001\u7c7b\u578b\u8bed\u8a00\u4e0d\u901a\uff0cPython\u5141\u8bb8\u5b9e\u4f8b\u53d8\u91cf\u7ed1\u5b9a\u4efb\u4f55\u6570\u636e\uff0c\u901a\u8fc7 instance.newproperty = val \u5c31\u53ef\u4ee5\u7ed1\u5b9a\u65b0\u5c5e\u6027\u5230\u5b9e\u4f8b\u4e0a\u3002 \u6784\u9020\u65b0\u5b9e\u4f8b\uff1a instance = ClassName(*args) \u3002 \u7c7b\u65b9\u6cd5\u548c\u5b9e\u4f8b\u65b9\u6cd5\u662f\u6709\u533a\u5206\u7684\uff0c\u4e5f\u5c31\u662f\u6709\u6ca1\u6709\u4f20 self \uff0c\u8c03\u7528\u65f6\u4e5f\u80fd\u660e\u786e\u7684\u786e\u5b9a\u3002\u4f46\u662f\u5c5e\u6027\u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u7c7b\u7684\u5c5e\u6027\uff08\u4e5f\u5c31\u76f8\u5f53\u4e8e\u9759\u6001\u5b57\u6bb5\u6216\u9759\u6001\u6570\u636e\u6210\u5458\uff09\u662f\u53ef\u4ee5\u901a\u8fc7\u5b9e\u4f8b\u8bbf\u95ee\u7684\uff0c\u6240\u4ee5\u5343\u4e07\u4e0d\u8981\u5b9a\u4e49\u540c\u540d\u7684\u5b9e\u4f8b\u5c5e\u6027\u548c\u7c7b\u5c5e\u6027\u3002\u5728\u7c7b\u4e2d\u53ef\u4ee5\u901a\u8fc7 self \u6216\u8005\u7c7b\u540d\u8c03\u7528\u533a\u5206\uff0c\u4f46\u5916\u90e8\u8c03\u7528\u65f6\u5c31\u533a\u5206\u4e0d\u4e86\u4e86\uff08\u7528\u5b9e\u4f8b\u53ef\u4ee5\u8c03\uff0c\u4f46\u4e0d\u80fd\u901a\u8fc7\u5b9e\u4f8b\u6539\uff0c\u4e00\u6539\u5176\u5b9e\u5c31\u76f8\u5f53\u4e8e\u5b9a\u4e49\u4e86\u540c\u540d\u5b9e\u4f8b\u5c5e\u6027\u4e86\uff09\u3002 \u5373 \u4e0d\u8981\u5b9a\u4e49\u540c\u540d\u7c7b\u5c5e\u6027/\u65b9\u6cd5\u548c\u5b9e\u4f8b\u5c5e\u6027/\u65b9\u6cd5 \u3002 \u4e00\u822c\u6765\u8bf4\u7ecf\u9a8c\u4e5f\u662f\u4e0d\u8981\u901a\u8fc7\u5b9e\u4f8b\u8c03\u7528\u7c7b\u5c5e\u6027\u3002 \u8bbf\u95ee\u4fee\u9970\uff1a - \u4e0d\u901a\u8fc7\u4efb\u4f55\u4fee\u9970\u7b26\uff0c\u8fd8\u662f\u901a\u8fc7\u53d8\u91cf\u540d\u79f0\uff0c\u5c5e\u6027\u6216\u8005\u65b9\u6cd5\u524d\u6dfb\u52a0 __ \u5c31\u53d8\u6210\u4e86\u79c1\u6709\u7684\uff0c\u53ea\u80fd\u5185\u90e8\u8bbf\u95ee\u3002 - \u5f53\u7136\u540c\u6837\uff0c\u7279\u6b8a\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u524d\u540e\u90fd\u6709 __ \u7684\u65b9\u6cd5\u5916\u90e8\u8fd8\u662f\u53ef\u4ee5\u8bbf\u95ee\u3002 - \u5c01\u88c5\u4f9d\u7136\u53ef\u4ee5\u505a\uff0c\u53ef\u4ee5\u6dfb\u52a0getter\u548csetter\uff0c\u53ef\u4ee5\u5728\u5176\u4e2d\u89c6\u60c5\u51b5\u505a\u4e00\u4e9b\u53c2\u6570\u68c0\u67e5\u548c\u5bb9\u9519\u3002 - \u4e5f\u4f1a\u6709\u5355\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\uff0c\u5916\u90e8\u53ef\u4ee5\u8bbf\u95ee\uff0c\u4f46\u4e00\u822c\u7ea6\u5b9a\u4e3a\u79c1\u6709\u7684\u3002 - \u5176\u5b9e\u5e76\u4e0d\u662f\u4e0d\u53ef\u8bbf\u95ee\uff0c\u53ea\u662f\u53cc\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u505a\u4e86\u4fee\u9970\uff0c __attr \u88ab\u4fee\u9970\u6210\u4e86 _ClassName__attr \uff0c\u5176\u5b9e\u4f9d\u65e7\u53ef\u4ee5\u8bbf\u95ee\u3002\u8131\u88e4\u5b50\u653e\u5c41\u6709\u4e00\u5957\uff0c\u7b80\u5355\u7c97\u66b4\uff0c\u80fd\u7528\u5c31\u884c\u3002\u6bd5\u7adf\u4ee3\u7801\u662f\u6b7b\u7684\u4eba\u662f\u6d3b\u7684\u3002\u8fd9\u7b97\u662fCPython\u89e3\u91ca\u5668\u7279\u6027\uff0c\u6240\u4ee5\u4e0d\u5efa\u8bae\u8fd9\u4e48\u5e72\uff0c\u4e0d\u540c\u89e3\u91ca\u5668\u89c4\u5219\u53ef\u80fd\u4e0d\u540c\u3002 - \u5982\u679c\u5728\u5916\u90e8\u8bbe\u7f6e\u79c1\u6709\u53d8\u91cf\u662f\u53ef\u4ee5\u6210\u529f\u7684\uff0c\u4f46\u548c\u60f3\u8bbe\u7f6e\u7684\u90a3\u4e00\u4e2a\u4e0d\u662f\u4e00\u4e2a\u53d8\u91cf\u4e86\uff0c\u6bd5\u7adf\u5185\u90e8\u7684\u5df2\u7ecf\u505a\u4e86\u540d\u79f0\u4fee\u9970\u3002\u6bd4\u5982 p.__name = \"lisa\" \u5176\u5b9e\u662f\u65b0\u52a0\u4e86\u4e00\u4e2a\u53d8\u91cf\u3002 \u7ee7\u627f\u4e0e\u591a\u6001\uff1a - class ClassName(baseClass): - \u5b50\u7c7b\u4f1a\u7ee7\u627f\u7236\u7c7b\u7684\u5168\u90e8\u5b9e\u4f8b\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 - \u5b50\u7c7b\u4e2d\u4e0d\u80fd\u8bbf\u95ee\u7236\u7c7b\u7684\u79c1\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u56e0\u4e3a\u7ecf\u8fc7\u4e86\u540d\u79f0\u4fee\u9970\u4e4b\u540e\u5b50\u7c7b\u4e2d\u518d\u53bb\u8bbf\u95ee\u540c\u540d\u5c5e\u6027\u7ecf\u8fc7\u4fee\u9970\u540e\u548c\u57fa\u7c7b\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u4f1a\u76f8\u5f53\u4e8e\u5728\u5b50\u7c7b\u4e2d\u65b0\u589e\u4e86\u540c\u540d\u5c5e\u6027\uff0c\u800c\u4e0d\u4f1a\u8bbf\u95ee\u5230\u57fa\u7c7b\u7684\u90a3\u4e00\u4e2a\u3002 - \u5b50\u7c7b\u7236\u7c7b\u5b58\u5728\u76f8\u540c\u65b9\u6cd5\u65f6\uff0c\u5b50\u7c7b\u7684\u8986\u76d6\u7236\u7c7b\u7684\u3002 - \u6240\u6709\u7c7b\u578b\u6700\u7ec8\u90fd\u6709\u5171\u540c\u57fa\u7c7b object \uff0c\u4e0d\u5199\u57fa\u7c7b\u9ed8\u8ba4\u5c31\u662f object \u3002 print(isinstance(1, object)) # True print(isinstance(None, object)) # True print(isinstance(\"hello\", object)) # True print(isinstance(True, object)) # True \u7c7b\u65b9\u6cd5\uff08\u4e5f\u5c31\u662f\u5176\u4ed6\u8bed\u8a00\u4e2d\u6240\u8bf4\u7684\u9759\u6001\u65b9\u6cd5\uff09\u4e0d\u4f1a\u7ee7\u627f\uff0c\u53ea\u80fd\u901a\u8fc7\u81ea\u5df1\u7684\u7c7b\u540d\u8bbf\u95ee\u3002 \u9e2d\u5b50\u7c7b\u578b\uff1a - \u52a8\u6001\u8bed\u8a00\u662f\u9e2d\u5b50\u7c7b\u578b\u7684\uff0c\u5c31\u51b3\u5b9a\u4e86\u5b9e\u73b0\u591a\u6001\u4e0d\u5fc5\u50cf\u9759\u6001\u7c7b\u578b\u4e00\u6837\u5fc5\u987b\u7ee7\u627f\uff0c\u53ea\u8981\u5b9e\u73b0\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u89c6\u4e3a\u5b9e\u73b0\u4e86\u591a\u6001\u3002 \u5bf9\u8c61\u4fe1\u606f\uff1a - \u7c7b\u578b\uff1a type(obj) \uff0c\u5f97\u5230\u7684 type \u7c7b\u578b\u5bf9\u8c61\u3002 - \u53ef\u4ee5\u7406\u89e3 int str bytes \u7b49\u7c7b\u578b\u90fd\u662f\u8fd9\u4e2a type \u7c7b\u578b\u5b9e\u4f8b\u3002\u6240\u4ee5\u5185\u7f6e\u7c7b\u578b\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837\u5224\u65ad\u7c7b\u578b type(1) == int - \u51fd\u6570\u5219\u53ef\u4ee5\u4f7f\u7528 types \u4e2d\u5b9a\u4e49\u7684\u5e38\u91cf\uff1a def f(): pass # all True print(type(1) == int) print(type(type) == type) print(type(object) == type) print(type(int) == type) print(type(f) == types.FunctionType) print(type(abs) == types.BuiltinFunctionType) print(type(x for x in range(100)) == types.GeneratorType) print(type([].append) == types.BuiltinMethodType) print(type(lambda x : x) == types.LambdaType) type \u662f\u786e\u5b9a\u5bf9\u8c61\u7684\u4e25\u683c\u7c7b\u578b\uff0c isinstance \u5219\u662f\u53ef\u4ee5\u5339\u914d\u5bf9\u8c61\u7c7b\u578b\u6216\u8005\u5176\u57fa\u7c7b\u7c7b\u578b\u3002 isinstance \u7b2c\u4e8c\u4e2a\u53c2\u6570\u53ef\u4ee5\u662f\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u662f\u7c7b\u578b\u5143\u7ec4\uff0c\u7528\u4e8e\u5339\u914d\u591a\u4e2a\u7c7b\u578b\uff0c\u53ea\u6709\u6709\u4e00\u4e2a\u5339\u914d\uff0c\u5c31\u8fd4\u56de True \u3002 \u4e00\u822c\u6765\u8bf4\u4e3a\u4e86\u652f\u6301\u591a\u6001\u603b\u662f\u4f18\u5148\u4f7f\u7528 isinstance \u3002 \u83b7\u53d6\u4e00\u4e2a\u5bf9\u8c61\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\uff1a dir(obj) \uff0c\u5f97\u5230\u4e00\u4e2a\u5217\u8868\u3002 \u524d\u540e\u53cc\u4e0b\u5212\u7ebf\u7684\u7279\u6b8a\u65b9\u6cd5\u90fd\u662f\u6709\u7528\u9014\u7684\uff0c\u6bd4\u5982 __len__ \u65b9\u6cd5\uff0c\u5c31\u7528\u4e8e\u5185\u5efa\u7684 len \u51fd\u6570\uff0c len \u51fd\u6570\u5b9e\u9645\u4e0a\u5c31\u662f\u8c03\u7528 __len__ \u65b9\u6cd5\u3002\u53ea\u8981\u5b9e\u73b0\u4e86 __len__ \u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u7528\u4e8e len \u51fd\u6570\u3002 \u9664\u4e86\u5217\u51fa\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u914d\u5408 getattr() \u3001 setattr() \u4ee5\u53ca hasattr() \uff0c\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u4e00\u4e2a\u5bf9\u8c61\u7684\u72b6\u6001\u3002 # dir, getattr(), setattr(), hasattr() class Person(): def __init__(self, name) -> None: self.name = name def sayHi(self): print(f\"hi, {self.name}\") def sayHello(): print(\"hello\") p = Person(\"Adam\") print(dir(p)) print(hasattr(p, \"name\")) setattr(p, \"age\", 10) print(p.age) print(getattr(p, \"age\")) print(getattr(p, \"nonexist\", \"default value\")) f = getattr(Person, \"sayHello\") f() print(f) # <function Person.sayHello at 0x0000023E6318C670> f = getattr(p, \"sayHi\") f() print(f) # <bound method Person.sayHi of <__main__.Person object at 0x000001AC29507E50>> \u4e5f\u53ef\u4ee5\u83b7\u53d6\u65b9\u6cd5\uff0c\u83b7\u53d6\u5230\u540e\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b9e\u4f8b\u65b9\u6cd5\u5c31\u901a\u8fc7\u5bf9\u8c61\u83b7\u53d6\uff0c\u76f8\u5f53\u4e8e\u7b2c\u4e00\u4e2a\u53c2\u6570\u5df2\u7ecf\u4f20\u9012\u3002\u800c\u7c7b\u65b9\u6cd5\uff0c\u5c31\u901a\u8fc7\u7c7b\u540d\uff08\u5176\u5b9e\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff09\u6765\u83b7\u53d6\u3002 \u901a\u8fc7\u5185\u7f6e\u51fd\u6570\uff0c\u53ef\u4ee5\u5bf9Python\u5bf9\u8c61\u8fdb\u884c\u5256\u6790\uff0c\u62ff\u5230\u5bf9\u8c61\u4fe1\u606f\uff0c\u4e00\u822c\u53ea\u6709\u4e0d\u77e5\u9053\u5bf9\u8c61\u4fe1\u606f\u65f6\u624d\u8fd9\u6837\u505a\u3002 \u52a8\u6001\u7ed1\u5b9a\u5c5e\u6027\uff1a - \u52a8\u6001\u7c7b\u578b\u5177\u6709\u9759\u6001\u7c7b\u578b\u4e0d\u5177\u6709\u7684\u7075\u6d3b\u6027\uff0c\u4f8b\u5982\u52a8\u6001\u7ed9\u5bf9\u8c61\u6216\u8005\u7c7b\u6dfb\u52a0\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 class Person: def __init__(self, *args, **kwargs) -> None: self.age = kwargs.pop(\"age\") def setAge(self, age): self.age = age def getAge(self): return self.age # bind to a single Person object p = Person(age = 20) p.setAge = MethodType(setAge, p) p.getAge = MethodType(getAge, p) p.setAge(10) print(p.age) # 10 print(p.getAge()) # 10 # bind to Person class (instance of type class) Person.setAge = MethodType(setAge, Person) Person.getAge = MethodType(getAge, Person) Person.setAge(18) print(Person.getAge()) # 18 print(Person.age) # 18 # bind instance method to class, just assignment Person.setAge = setAge p = Person(age = 10) p.setAge(100) print(p.age) # 100 print(p.getAge()) # 18, Person has no instance method call getAge(), so will call Person.getAge() -> 18 Person.getAge = getAge print(p.getAge()) # 100 \u6ce8\u610f\u5c31\u7b97\u5b9a\u4e49\u4e86 self \uff0c MethodType \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u6dfb\u52a0\u65b9\u6cd5\u7684\u5b9e\u4f8b\uff0c\u6240\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u7ed1\u5b9a\u65b9\u6cd5\u5230\u7c7b\u5176\u5b9e\u662f\u6210\u4e3a\u7c7b\u65b9\u6cd5\u800c\u4e0d\u662f\u6210\u4e3a\u5b9e\u4f8b\u65b9\u6cd5\u3002\u3010Python\u4e2d\u7c7b\u4e5f\u662f\u5bf9\u8c61( type \u7c7b\u7684\u5b9e\u4f8b)\uff01\uff01\uff01\u3011 \u8981\u7ed1\u5b9a\u7c7b\u7684\u5b9e\u4f8b\u65b9\u6cd5\u5230\u7c7b\u4e0a\uff0c\u76f4\u63a5\u8d4b\u503c\u5c31\u53ef\u4ee5\u641e\u5b9a\uff01 \u603b\u7ed3\uff1a \u901a\u8fc7 MethodType \u7ed1\u5b9a\uff0c \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f5c\u4e3a self \u88ab\u4f20\u5165\u65b9\u6cd5 \uff0c\u65b9\u6cd5\u5fc5\u987b\u6709 self \u53c2\u6570\u3002 \u901a\u8fc7\u8d4b\u503c\u7ed1\u5b9a\u7684\u4e0d\u4f1a\u4f20\u5165\u4e00\u4e2a\u9ed8\u8ba4\u7684 self \u3002 \u901a\u8fc7\u8d4b\u503c\u76f4\u63a5\u7ed1\u5b9a\u5230\u7c7b\u4e0a\u5c31\u548c\u76f4\u63a5\u5b9a\u4e49\u5728\u7c7b\u91cc\u9762\u6ca1\u6709\u533a\u522b\uff0c\u7ed1\u5b9a\u5230\u7c7b\u4e0a\u901a\u8fc7\u5b9e\u4f8b\u8c03\u7528\u5219\u4f1a\u5c06\u5b9e\u4f8b\u4f5c\u4e3a self \u4f20\u5165\u3002 \u901a\u8fc7\u8d4b\u503c\u7ed1\u5b9a\u5230\u5bf9\u8c61\u4e0a\u4e5f\u53ef\u4ee5\uff0c\u4e0d\u80fd\u6709 self \u53c2\u6570\u3002 MethodType \u7684\u7ed3\u679c\u7ed9\u4eba\u611f\u89c9\u5c31\u50cf\u662f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u504f\u51fd\u6570(\u7c7b\u578b\u672c\u8eab\u6253\u5370\u51fa\u6765\u5e76\u4e0d\u662f)\uff0c\u7136\u540e\u6307\u5b9a\u4e86 self \u53c2\u6570\u3002 \u7c7b\u65b9\u6cd5\u548c\u5b9e\u4f8b\u65b9\u6cd5\u5e76\u4e0d\u50cf\u5176\u4ed6\u8bed\u8a00\u533a\u5206\u90a3\u4e48\u4e25\u683c\uff08\u6216\u8bb8\u5c31\u4e0d\u8be5\u8fd9\u4e48\u533a\u5206\uff09\uff1a\u901a\u8fc7\u5b9e\u4f8b\u8c03\u7528\u4f1a\u9690\u5f0f\u4f20 self \uff0c\u540c\u65f6\u901a\u8fc7\u7c7b\u4e5f\u53ef\u4ee5\u8c03\u7528\uff0c\u53ea\u8981\u628a\u5b9e\u4f8b\u653e\u5728 self \u4f4d\u7f6e\uff0c\u6548\u679c\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002 class Student(object): __slots__ = (\"name\", \"age\", \"getName\") def getAge(self): return self.age s = Student() s.age = 10 f = s.getAge print(f) # <bound method Student.getAge of <__main__.Student object at 0x000001993E72F800>> print(Student.getAge) # <function Student.getAge at 0x000001A601B2CAF0> print(f()) # 10 print(Student.getAge(s)) # 10 \u9700\u8981\u5206\u6e05\u695a\u7ed1\u5b9a\u65b9\u6cd5\u548c\u51fd\u6570\uff1a MethodType \u8fd4\u56de\u7684\u7ed3\u679c\u5c31\u662f\u4e00\u4e2a\u7ed1\u5b9a\u65b9\u6cd5\uff0c\u901a\u8fc7\u5bf9\u8c61\u8c03\u7528\u7684\u5b9e\u4f8b\u65b9\u6cd5\u4e5f\u662f\u4e00\u4e2a\u7ed1\u5b9a\u65b9\u6cd5\u3002 \u4f7f\u7528 __slots__ \uff1a - \u52a8\u6001\u6dfb\u52a0\u5c5e\u6027\u5f88\u65b9\u4fbf\u4e5f\u53ef\u80fd\u88ab\u6ee5\u7528\uff0cPython\u4e2d\u5141\u8bb8\u9650\u5236\u5b9e\u4f8b\u7684\u5c5e\u6027\uff0c\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e2a\u7279\u6b8a\u7684 __slots__ \u53d8\u91cf\uff0c\u9650\u5236\u80fd\u6dfb\u52a0\u7684\u5c5e\u6027\u3002 class Student: __slots__ = (\"name\", \"age\") s = Student() s.age = 10 s.name = \"Adam\" # s.grade = 4.0 # AttributeError \u6b64\u65f6\u518d\u6dfb\u52a0\u5176\u4ed6\u5c5e\u6027\uff0c\u5c31\u4f1a\u5931\u8d25\u3002\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u770b\u505a\u51fd\u6570\u7c7b\u578b\u7684\u5c5e\u6027\uff0c\u6240\u4ee5\u6dfb\u52a0\u540c\u6837\u4f1a\u5931\u8d25\u3002 __slots__ \u5b9a\u4e49\u7684\u5c5e\u6027\u4ec5\u5bf9\u5f53\u524d\u7c7b\u5b9e\u4f8b\u7684\u5c5e\u6027\u8d77\u9650\u5236\u4f5c\u7528\uff0c\u5bf9\u7ee7\u627f\u5b50\u7c7b\u5b9e\u4f8b\u548c\u7c7b\u672c\u8eab\u5c5e\u6027\u4e0d\u8d77\u4f5c\u7528\u3002\u5982\u679c\u7ee7\u627f\u7684\u5b50\u7c7b\u4e2d\u4f7f\u7528 __slots__ \uff0c\u90a3\u4e48\u80fd\u7528\u7684\u5c5e\u6027\u5c31\u662f\u81ea\u8eab\u52a0\u4e0a\u7236\u7c7b\u7684\u3002 \u5982\u679c\u7236\u7c7b\u4e0d\u9650\u5236\uff0c\u4ec5\u5b50\u7c7b\u9650\u5236\uff0c\u90a3\u4e48\u5b50\u7c7b\u5b9e\u4f8b\u4e5f\u662f\u53ef\u4ee5\u7ed1\u5b9a\u65b0\u5c5e\u6027\u7684\u3002\u3010\u8fd9\u786e\u5b9e\u6709\u70b9\u8ba9\u4eba\u8ff7\u60d1\uff01\u3011 \u4e5f\u5c31\u662f\u8bf4\u8981\u9650\u5236\u5c5e\u6027\u5fc5\u987b\u8981\u7ee7\u627f\u94fe\u6761\u4e0a\u6240\u6709\u7c7b\u90fd\u6709 __slots__ \u624d\u884c\u3002 @property \uff1a - \u76f4\u63a5\u66b4\u9732\u5c5e\u6027\u7b80\u5355\u4f46\u662f\u5982\u679c\u8981\u505a\u53c2\u6570\u6709\u6548\u6027\u68c0\u67e5\u5c31\u9ebb\u70e6\u4e86\uff0c\u8bbe\u7f6e\u4e3a\u79c1\u6709\u5e76\u6dfb\u52a0\u5bf9\u5e94\u7684getter\u548csetter\u4e5f\u53ef\u4ee5\u4e0d\u8fc7\u8c03\u7528\u8d77\u6765\u5c31\u6709\u70b9\u7e41\u7410\u4e86\u3002 - \u901a\u8fc7Python\u5185\u7f6e\u7684 @property \u88c5\u9970\u5668\u53ef\u4ee5\u628a\u4e00\u4e2agetter\u65b9\u6cd5\u53d8\u6210\u5c5e\u6027\u8c03\u7528\uff0c\u7136\u540e\u672c\u8eab\u53c8\u4f1a\u521b\u5efa\u53e6\u4e00\u4e2a\u88c5\u9970\u5668 @attr.setter \u6dfb\u52a0\u5230 setter \u4e0a\u5c31\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5c5e\u6027\u5f62\u5f0f\u8f6c\u8c03\u65b9\u6cd5\u5b9e\u73b0\u8bfb\u5199\u3002 class Person: __slots__ = (\"_age\") @property def age(self): return self._age @age.setter def age(self, value): if not isinstance(value, int): raise ValueError(\"age must be a integer!\") if value < 0: raise ValueError(\"age must non-negative!\") self._age = value p = Person() p.age = 10 print(p.age) p.age = \"18\" # ValueError: age must be a integer! \u53ea\u5b9a\u4e49getter\u4e0d\u5b9a\u4e49setter\u5c31\u662f\u53ea\u8bfb\u5c5e\u6027\u3002 \u5c5e\u6027\u7684\u65b9\u6cd5\u4e0d\u8981\u548c\u5b9e\u4f8b\u53d8\u91cf\u91cd\u540d\uff0c\u5b9e\u4f8b\u53d8\u91cf\u6700\u597d\u4f7f\u7528 _ \u5f00\u5934\u7684\u79c1\u6709\u8bbf\u95ee\u3002 \u591a\u7ee7\u627f/Mixin\uff1a - class ClassName(BaseClass1, BaseClass2, ...) - \u57fa\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u5982\u679c\u591a\u4e2a\u7c7b\u6709\u540c\u4e00\u4e2a\u65b9\u6cd5\uff0c\u90a3\u4e48\u7ee7\u627f\u987a\u5e8f\u6309\u7167\u987a\u4f4d\u8c03\u7528\u7b2c\u4e00\u4e2a\u3002 - \u591a\u7ee7\u627f\u4e5f\u53eb\u6df7\u5165\uff0c\u4e0d\u540c\u8bed\u8a00\u6709\u4e0d\u540c\u8bed\u8a00\u7684\u53eb\u6cd5\u3002 - __mro__ \u7279\u6b8a\u53d8\u91cf\u662f\u57fa\u7c7b\u7684\u5143\u7ec4\uff0c\u4e00\u4e2a\u5b9e\u4f8b\u7684\u65b9\u6cd5\u89e3\u6790\u671f\u95f4\u57fa\u4e8e\u6b64\u6765\u67e5\u627e\u57fa\u7c7b\u3002 - \u5df2\u77e5 __mro__ \uff0c\u5728\u4f7f\u7528 super \u65f6\u53ef\u4ee5\u5728\u7c7b\u5b9a\u4e49\u4e2d\u8c03\u7528\u57fa\u7c7b\u65b9\u6cd5\u7684\u60c5\u5f62\u4e2d\u4ece __mro__ \u5143\u7ec4\u4e2d\u7684\u7279\u5b9a\u4f4d\u7f6e\u5f00\u59cb\u67e5\u627e\u3002 # -*- coding: utf-8 -*- class A(object): def foo(self): print('A foo') def bar(self): print('A bar') class B(object): def foo(self): print('B foo') def bar(self): print('B bar') class C1(A, B): pass class C2(A, B): def bar(self): print('C2-bar') class D(C1, C2): pass if __name__ == '__main__': print(D.__mro__) # (<class '__main__.D'>, <class '__main__.C1'>, <class '__main__.C2'>, <class '__main__.A'>, <class '__main__.B'>, <class 'object'>) d = D() d.foo() # A foo d.bar() # C2-bar \u83f1\u5f62\u7ee7\u627f\u4e0d\u4f1a\u6709\u591a\u4efd\u6570\u636e\uff0c\u6700\u7ec8\u90fd\u662f\u901a\u8fc7 __mro__ \u4e2d\u7684\u67e5\u627e\u987a\u5e8f\u6765\u786e\u5b9a\u7684\u3002 \u5b9a\u5236\u7c7b\uff1a - \u901a\u8fc7\u5b9a\u4e49\u7279\u6b8a\u53d8\u91cf\u548c\u65b9\u6cd5\u53ef\u4ee5\u5b9a\u5236\u7279\u5b9a\u7684\u529f\u80fd\u3002 - __xxx__ \u7279\u6b8a\u53d8\u91cf\u7684\u7528\u9014\uff1a - __slots__ - __len__() \u7528\u4e8e len \u51fd\u6570\u3002 - __str__() \u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u8c03\u7528 print \u6253\u5370\u5bf9\u8c61\u65f6\u4f1a\u6253\u5370\u8fd9\u4e2a\u5b57\u7b26\u4e32\u3002 - __repr__() \u4e3a\u8c03\u8bd5\u670d\u52a1\uff0cpython\u4ea4\u4e92\u73af\u5883\u4e2d\u8f93\u5165\u53d8\u91cf\u6253\u5370\u51fa\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\uff0c\u901a\u5e38 __repr__ \u548c __str__ \u662f\u4e00\u6837\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5 __repr__ = __str__ \u3002 - __iter__() \u8fd4\u56de\u8fed\u4ee3\u5668( Iterator )\uff0c\u8981\u5728 for in \u5faa\u73af\u4e2d\u4f7f\u7528\u5fc5\u987b\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\uff0c for \u5faa\u73af\u62ff\u5230\u8fed\u4ee3\u5668\u540e\u4f1a\u8c03\u7528\u5668 __next__() \u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u76f4\u5230 StopIteration \u3002 collections.abc.Iterable \u662f\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u65b9\u6cd5\u7684\u62bd\u8c61\u57fa\u7c7b\u3002 iter(obj) \u5185\u7f6e\u51fd\u6570\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002 - __next__() \u8fd4\u56de\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c Iterator \u7c7b\u578b\u662f\u63d0\u4f9b\u4e86 __iter__() \u548c __next__() \u7684\u62bd\u8c61\u57fa\u7c7b\u3002 next(obj) \u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002 - __getitem__() \u7528\u4e8e\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee [] \uff0c\u53ef\u80fd\u4f20\u5165\u6574\u6570\u4e0b\u6807\uff0c\u53ef\u80fd\u4f20\u5165\u5207\u7247\u5bf9\u8c61\uff08 slice \uff09\uff0c\u6bd4\u5982\u5bf9\u4e8e dict \uff0c\u53ef\u80fd\u4f20\u5165\u7684\u662f\u4e00\u4e2a\u4f5c\u4e3akey\u7684\u5bf9\u8c61\u3002\u89c6\u652f\u6301\u60c5\u51b5\u5b9e\u73b0\u3002 - __setitem__() \u901a\u8fc7\u4e0b\u6807\u8bbe\u7f6e\u5143\u7d20 [] \u3002 - __delitem__() \u5220\u9664\u5143\u7d20\u3002 - __getattr__() \u52a8\u6001\u8fd4\u56de\u5c5e\u6027\uff0c\u53ea\u6709\u7c7b\u4e2d\u6ca1\u6709\u7684\u624d\u4f1a\u5c1d\u8bd5\u901a\u8fc7\u8fd9\u4e2a\u65b9\u6cd5\u83b7\u53d6\uff0c\u7c7b\u4f3c\u4e8e method_missing() \u7684\u529f\u80fd\u3002 - __call__() \u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u53ef\u4ee5\u6709\u81ea\u5df1\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5b9a\u4e49 __call__() \u4e4b\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u5bf9\u5b9e\u4f8b\u8fdb\u884c\u8c03\u7528\uff0c\u53ef\u4ee5\u7c7b\u6bd4\u4e3aC++\u4e2d\u7684\u51fd\u6570\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6709\u53c2\u6570\u3002\u8fd9\u6837\u5176\u5b9e\u51fd\u6570\u548c\u5bf9\u8c61\u7684\u8fb9\u754c\u5c31\u5f88\u6a21\u7cca\u4e86\u3002 callable(obj) \u4f1a\u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u53ef\u8c03\u7528\u3002\u6bd4\u5982\u5176\u5b9e\u81ea\u5b9a\u4e49\u7c7b\u4e5f\u662f\u4e00\u4e2a type \u7684\u5bf9\u8c61\uff0c\u521b\u5efa\u65f6\u8c03\u7528 className() \u5176\u5b9e\u5c31\u662f\u8c03\u7528\u4e86 type \u7684 __call__() \u7136\u540e\u53ef\u80fd\u662f\u8f6c\u8c03\u4e86\u81ea\u5b9a\u4e49\u7c7b\u7684 __init__ \u3002 - \u6bcf\u79cd\u5185\u7f6e\u7c7b\u578b\u90fd\u4f1a\u5b9a\u4e49\u5f88\u591a\u7684\u7279\u6b8a\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u901a\u8fc7\u5b9e\u73b0\u540c\u6837\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u6a21\u62df\u8fd9\u4e9b\u884c\u4e3a\uff0c\u751a\u81f3\u4e0d\u9700\u8981\u53bb\u7ee7\u627f\u62bd\u8c61\u7c7b\uff0c\u56e0\u4e3aPython\u662f\u9e2d\u5b50\u7c7b\u578b\u7684\uff0c\u4f9d\u8d56\u65b9\u6cd5\u800c\u4e0d\u4f9d\u8d56\u63a5\u53e3\u3002 - \u5f88\u591a\u5185\u7f6e\u51fd\u6570\u90fd\u662f\u4f9d\u8d56\u4e8e\u7279\u6b8a\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\uff0c\u5c06\u6240\u6709 \u7279\u6b8a\u5c5e\u6027\u3001\u65b9\u6cd5 \u548c \u5185\u7f6e\u51fd\u6570 \u90fd\u7406\u89e3\u4e00\u904d\u662f\u6709\u5fc5\u8981\u7684\u3002 \u679a\u4e3e\u7c7b\uff1a from enum import Enum WeekDay = Enum('WeekDay', ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')) \u66f4\u7cbe\u786e\u7684\u63a7\u5236\u53ef\u4ee5\u6d3e\u751f Enum \uff1a @unique \u88c5\u9970\u5668\u68c0\u67e5\u6ca1\u6709\u91cd\u590d\u503c\u3002 @unique class WeekD(Enum): Sun = 0 Mon = 1 Tue = 2 Wed = 3 Thu = 4 Fri = 5 Sat = 6 print(WeekD) # <enum 'WeekD'> print(WeekD.Sun) print(WeekD[\"Tue\"]) print(WeekD(1)) print(WeekD.Fri.value) for name, member in WeekD.__members__.items(): print(name, \"->\", member) \u8bbf\u95ee\uff1a EnumClassName.member EnumClassName[\"membername\"] EnumClass(valueofenum) \u4ece\u5e38\u91cf\u6784\u5efa\u679a\u4e3e\u503c\u3002 EnumClass.__members__ \u83b7\u53d6\u679a\u4e3e\u540d\u5230\u679a\u4e3e\u5e38\u91cf\u7684\u5b57\u5178\u3002 EnumClass.member.value \u679a\u4e3e\u5e38\u91cf\u7684\u503c\u3002 type \uff1a - \u52a8\u6001\u8bed\u8a00\u548c\u9759\u6001\u8bed\u8a00\u6700\u5927\u7684\u4e0d\u540c\uff0c\u5c31\u662f\u51fd\u6570\u548c\u7c7b\u7684\u5b9a\u4e49\uff0c\u4e0d\u662f\u7f16\u8bd1\u65f6\u5b9a\u4e49\u7684\uff0c\u800c\u662f\u8fd0\u884c\u65f6\u52a8\u6001\u521b\u5efa\u7684\u3002 - \u5f53Python\u89e3\u91ca\u5668\u8f7d\u5165\u4e00\u4e2a\u6a21\u5757\u65f6\uff0c\u5c31\u4f1a\u4f9d\u6b21\u6267\u884c\u8be5\u6a21\u5757\u7684\u6240\u6709\u8bed\u53e5\uff0c\u6267\u884c\u7ed3\u679c\u5c31\u662f\u52a8\u6001\u521b\u5efa\u51fa\u4e00\u4e2a\u5176\u4e2d\u7c7b\u7684class\u5bf9\u8c61\u3002 - type \u51fd\u6570\u67e5\u770b\u4e00\u4e2a\u7c7b\u578b\u6216\u8005\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u7528\u7c7b\u540d\u8868\u793a\u7684\u90a3\u4e2a type \u7c7b\u578b\u5b9e\u4f8b\u3002\u4f20\u5165\u7c7b\u540d\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f type \uff0c\u81ea\u5b9a\u4e49\u7684\u7c7b\u5176\u5b9e\u5c31\u662f type \u7c7b\u578b\u7684\u5b9e\u4f8b\u3002 - type \u51fd\u6570\u8fd8\u53ef\u4ee5\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\u3002\u4f9d\u6b21\u4f20\u5165\uff1a - \u7c7b\u540d\u3002 - \u7ee7\u627f\u7236\u7c7b\u7684\u5143\u7ec4\u3002 - \u65b9\u6cd5\u540d\u79f0\u4e0e\u51fd\u6570\u7ed1\u5b9a\u7684\u5b57\u5178\u3002 def fn(self, name = \"world\"): print(f\"hello, {name}!\") Hello = type(\"Hello\", (object, ), dict(hello = fn)) h = Hello() h.hello() print(type(h)) # <class '__main__.Hello'> print(Hello) # <class '__main__.Hello'> \u901a\u8fc7 type \u521b\u5efa\u7c7b\u76f4\u63a5\u901a\u8fc7 calss \u5173\u952e\u5b57\u521b\u5efa\u65f6\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u4e5f\u975e\u5e38\u7b80\u5355\u3002\u800c\u5728\u9759\u6001\u8bed\u8a00\u4e2d\u521b\u5efa\u7c7b\u5fc5\u987b\u901a\u8fc7\u5404\u79cd\u65b9\u5f0f\u52a8\u6001\u7f16\u8bd1\u624d\u80fd\u505a\u5230\u3002 \u5143\u7c7bmetaclass\uff1a - \u9664\u4e86 type \u8fd8\u53ef\u4ee5\u901a\u8fc7\u5143\u7c7b\u6765\u7ba1\u7406\u7c7b\u7684\u521b\u5efa\u884c\u4e3a\u3002 - \u53ef\u4ee5\u5c06\u7c7b\u7406\u89e3\u4e3a\u5143\u7c7b\u7684\u5b9e\u4f8b\uff0c\u8981\u901a\u8fc7\u5143\u7c7b\u6765\u521b\u5efa\u7c7b\uff0c\u5c31\u9700\u8981\u5148\u5b9a\u4e49\u5143\u7c7b\u3002\u53ef\u4ee5\u901a\u8fc7\u5143\u7c7b\u6765\u521b\u5efa\u6216\u8005\u4fee\u6539\u7c7b\u3002 - \u5143\u7c7b\u662fPython\u9762\u5411\u5bf9\u8c61\u4e2d\u6700\u96be\u7406\u89e3\u3001\u6700\u96be\u4f7f\u7528\u7684\u9b54\u6cd5\u4ee3\u7801\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u78b0\u5230\u3002 - \u5143\u7c7b\u662f\u7c7b\u7684\u6a21\u677f\uff0c\u6240\u4ee5\u9700\u8981\u4ece type \u6d3e\u751f\u3002 # create class dynamically using metaclass # first define metaclass, derived from type class ListMetaClass(type): def __new__(cls, name, bases, attrs): attrs['add'] = lambda self, value: self.append(value) return type.__new__(cls, name, bases, attrs) # create class using metaclass class MyList(list, metaclass = ListMetaClass): pass print(MyList) # <class '__main__.MyList'> print(type(MyList)) # <class '__main__.ListMetaClass'> # create instance using calss l = MyList() l.add(10) l.add(100) print(l) # [10, 100] \u5b9a\u4e49\u7c7b\u65f6\u4f20\u5165 metaclass \u5173\u952e\u5b57\u53c2\u6570\u5373\u53ef\u4f7f\u7528\u5143\u7c7b\u3002 \u6b64\u65f6\u521b\u5efa\u51fa\u7684 MyList \u7c7b\uff08\u5bf9\u8c61\uff09\u7684\u7c7b\u578b\u4e0d\u518d\u662f type \uff0c\u800c\u662f\u81ea\u5b9a\u4e49\u7684\u4ece type \u6d3e\u751f\u7684\u5143\u7c7b\uff0c\u5728\u5176\u4e2d\u91cd\u5199 __new__ \u5e76\u6dfb\u52a0\u65b9\u6cd5\uff0c\u8c03\u7528 __type__ \u7684 __new__ \u5e76\u4e14\u6dfb\u52a0\u4e86\u81ea\u5b9a\u4e49\u7684 add \u65b9\u6cd5\u3002 __new__ \u63a5\u6536\u53c2\u6570\uff1a \u5f53\u524d\u51c6\u5907\u521b\u5efa\u7684\u7c7b\u5bf9\u8c61\u3002 \u7c7b\u540d\u5b57\u3002 \u7c7b\u7236\u7c7b\u96c6\u5408\u3002 \u7c7b\u65b9\u6cd5\u96c6\u5408\u3002 \u6700\u7ec8 MyList \u662f list \u5b50\u7c7b\uff0c\u540c\u65f6\u7c7b\u578b\u662f ListMetaClass \uff08 type \u5b50\u7c7b\uff09\u3002 \u90a3\u4e48\u53ef\u4ee5\u7406\u89e3\u4e3a type \u5c31\u662f\u4e00\u4e2a\u5143\u7c7b\uff0c\u5e76\u4e14\u5e94\u8be5\u4f5c\u4e3a\u81ea\u5b9a\u4e49\u5143\u7c7b\u7684\u57fa\u7c7b\u3002\u6709\u4e00\u70b9\u70b9\u62bd\u8c61\uff0c\u53ef\u80fd\u9700\u8981\u6df1\u5165\u4e86\u89e3\u4e00\u4e2a\u7c7b\u7684\u5177\u4f53\u521b\u5efa\u8fc7\u7a0b\u624d\u7406\u89e3\u3002 __new__ __init__ \u533a\u522b\u662f\u524d\u8005\u662f\u521b\u5efa\u8fc7\u7a0b\uff0c\u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5b9e\u4f8b\uff0c\u540e\u8005\u662f\u5df2\u7ecf\u521b\u5efa\u597d\u4e86\u540e\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u5b9e\u4f8b\u65b9\u6cd5\uff0c\u6784\u9020\u65f6\u4f7f\u7528\u524d\u8005\u8fd4\u56de\u7684\u5b9e\u4f8b\u8c03\u7528 __init__ \uff0c\u8fd4\u56de None \u3002\u4e24\u8005\u52a0\u8d77\u6765\u662f\u5b9e\u4f8b\u5316\u8fc7\u7a0b\u3002 \u5143\u7c7b\u53ef\u4ee5\u9690\u5f0f\u7ee7\u627f\u5230\u5b50\u7c7b\u4e2d\u3002 \u5143\u7c7b\u4f7f\u7528\u4f8b\u5b50\uff1a - \u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684ORM\uff08Object Relational Mapping\uff0c\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff09\u6846\u67b6\uff0c\u5c06\u6570\u636e\u5e93\u7684\u4e00\u5f20\u8868\u6620\u5c04\u4e3a\u4e00\u4e2a\u7c7b\uff0c\u6bcf\u4e00\u884c\u6620\u5c04\u4e3a\u4e00\u4e2a\u5b9e\u4f8b\u3002\u901a\u8fc7\u5b9a\u4e49\u8c03\u7528\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0 update insert delete \u7b49\u64cd\u4f5c\u3002 - \u4ee3\u7801\u5728Python\u5206\u652f \u603b\u7ed3\uff1a - Python\u9762\u5411\u5bf9\u8c61\u5b9e\u73b0\u76f8\u5f53\u81ea\u7531\u4e0e\u7b80\u5355\uff0c\u4f46\u52a8\u6001\u7c7b\u578b\u7684\u786e\u662f\u8fd9\u6837\u7684\u3002 - \u5199\u60ef\u4e86\u9759\u6001\u7c7b\u578b\u5207\u6362\u8fc7\u6765\u611f\u89c9\u786e\u5b9e\u8bf8\u591a\u9b54\u6cd5\u3002 - \u4e07\u7269\u7686\u5bf9\u8c61\uff0c\u751a\u81f3\u7c7b\u4e5f\u662f\u5bf9\u8c61\uff0c\u51fd\u6570\u4e5f\u662f\u5bf9\u8c61\uff0c\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u88ab\u8c03\u7528\u3002 - \u7279\u6b8a\u5c5e\u6027\u975e\u5e38\u6709\u7528\u975e\u5e38\u9b54\u6cd5\uff0c\u81ea\u7531\u5ea6\u53ef\u80fd\u4e0d\u53ca\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0c\u7a0d\u5fae\u7e41\u7410\u4e86\u4e00\u70b9\uff0c\u4f46\u8c03\u7528\u89c4\u5219\u90fd\u662f\u8bed\u6cd5\u5185\u7f6e\u7684\uff0c\u4e0d\u50cf\u8fd0\u7b97\u7b26\u91cd\u8f7d\u8bfb\u8d77\u6765\u90a3\u4e48\u6478\u4e0d\u7740\u5934\u8111\u3002 - \u8fd8\u9700\u8981\u8fdb\u4e00\u6b65\u6df1\u5165\u3002","title":"\u9762\u5411\u5bf9\u8c61"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_10","text":"\u5404\u79cd\u5404\u6837\u9519\u8bef\uff1a - \u8f93\u5165\u975e\u6cd5\u3002\u6dfb\u52a0\u68c0\u6d4b\u3002 - \u903b\u8f91\u95ee\u9898\uff0c\u4fee\u6539\u903b\u8f91\u3002 - \u8fd0\u884c\u65f6\u9519\u8bef\uff0c\u6bd4\u5982\u78c1\u76d8\u5199\u6ee1\uff0c\u7f51\u7edc\u8fde\u63a5\u4e2d\u65ad\u7b49\u3002\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u5f02\u5e38\u5904\u7406\u3002 \u5f02\u5e38\u5904\u7406\uff1a - \u53ef\u4ee5\u4f7f\u7528\u9519\u8bef\u4ee3\u7801\u8fd4\u56de\u503c\uff0c\u9700\u8981\u5927\u91cf\u4ee3\u7801\u5224\u8bfb\u662f\u5426\u51fa\u9519\u3002\u6ca1\u6267\u884c\u4e00\u4e2a\u51fd\u6570\u90fd\u8981\u68c0\u67e5\u8fd4\u56de\u503c\u3002 - \u5f02\u5e38\u5904\u7406\uff1a try...except...finally... \uff0c\u5c06\u53ef\u80fd\u51fa\u9519\u7684\u903b\u8f91\u653e\u5728 try \u4e2d\u8fd0\u884c\uff0c\u51fa\u9519\u5219\u4f1a\u8df3\u8f6c\u5230 except \uff0c\u7136\u540e\u6267\u884c finally \uff08finally\u4e2d\u8bed\u53e5\u65e0\u8bba\u662f\u5426\u53d1\u751f\u9519\u8bef\u90fd\u4f1a\u6267\u884c\uff0c\u53ef\u4ee5\u6ca1\u6709 finally \uff09\u3002 - \u53ef\u4ee5\u6709\u591a\u4e2a except \u4f9d\u6b21\u6355\u83b7\u4e0d\u540c\u7c7b\u578b\u7684\u9519\u8bef\uff0c\u76f4\u5230\u6355\u83b7\u5230\u3002\u672a\u6355\u83b7\u5230\u5219\u4f1a\u7ee7\u7eed\u5411\u4e0a\u629b\uff0c\u76f4\u5230\u88abPython\u89e3\u91ca\u5668\u6355\u83b7\uff0c\u6253\u5370\u51fa\u8c03\u7528\u6808\uff0c\u7ed3\u675f\u7a0b\u5e8f\u8fd0\u884c\u3002 - \u6240\u6709\u9519\u8bef\u7684\u57fa\u7c7b BaseException \u3002 - Python\u5185\u7f6e\u7684\u5f02\u5e38\u7684\u6d3e\u751f\u7ed3\u6784\u5c42\u6b21 \u3002 \u8bb0\u5f55\u9519\u8bef\uff1a - \u4f7f\u7528 logging \u6a21\u5757\uff0c\u6355\u83b7\u9519\u8bef\u8bb0\u5f55\u4e0b\u540e\u7ee7\u7eed\u6267\u884c\u3002 - import logging - \u6355\u83b7\u9519\u8bef\u65f6\uff1a logging.exception(e) \u629b\u51fa\u9519\u8bef\uff1a - \u9519\u8bef\u4e0d\u662f\u51ed\u7a7a\u4ea7\u751f\u7684\uff0c\u800c\u662f\u6709\u610f\u521b\u5efa\u5e76\u629b\u51fa\u7684\u3002Python\u7684\u5185\u7f6e\u51fd\u6570\u4f1a\u629b\u51fa\u5f88\u591a\u9519\u8bef\uff0c\u81ea\u5df1\u7f16\u5199\u7684\u51fd\u6570\u4e5f\u53ef\u4ee5\u629b\u51fa\u9519\u8bef\u3002 - \u53ef\u4ee5\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\uff0c\u9009\u62e9\u597d\u7ee7\u627f\u5173\u7cfb\uff0c\u4f7f\u7528 raise AnExceptionInstance \u629b\u51fa\u3002 - \u5728\u6355\u83b7\u4e00\u4e2a\u9519\u8bef\u540e\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u9519\u8bef\uff0c\u5982\u679c\u65e0\u6cd5\u5904\u7406\uff0c\u518d\u5411\u5916\u629b\u51fa\u3002\u76f4\u63a5 raise \u53ef\u4ee5\u539f\u6837\u629b\u51fa\uff0c\u4e5f\u53ef\u4ee5\u629b\u51fa\u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u9519\u8bef\uff08\u9700\u8981\u6709\u9053\u7406\u53ef\u8a00\u6bd4\u5982\u8bf4\u628a\u591a\u79cd\u9519\u8bef\u5408\u5e76\u6210\u4e00\u79cd\u516c\u5171\u7684\u9519\u8bef\uff0c\u4e0d\u80fd\u8bf4\u8f6c\u6362\u6210\u4e00\u79cd\u4e0d\u76f8\u5e72\u7684\u9519\u8bef\uff0c\u90a3\u6837\u4f1a\u5e72\u6270\u9519\u8bef\u8bca\u65ad\uff09\u3002 - \u51fa\u9519\u90fd\u662f\u5e0c\u671b\u5f97\u5230\u5904\u7406\u7684\uff0c\u5206\u6790\u9519\u8bef\u4fe1\u606f\u5e76\u5b9a\u4f4d\u9519\u8bef\u53d1\u751f\u7684\u4ee3\u7801\u4f4d\u7f6e\u5e76\u4fee\u6b63\u9519\u8bef\u624d\u662f\u6700\u5173\u952e\u7684\u3002 - \u5982\u679c\u7a0b\u5e8f\u7ed9\u522b\u4eba\u7528\uff0c\u5e94\u5f53\u8bf4\u660e\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u629b\u54ea\u4e9b\u9519\u8bef\uff0c\u4ee5\u5e2e\u52a9\u4f7f\u7528\u8005\u7f16\u5199\u9519\u8bef\u5904\u7406\u903b\u8f91\u3002 \u8c03\u8bd5\uff1a - print \u5927\u6cd5\u6c38\u8fdc\u53ef\u884c\uff0c\u4f46\u662f\u8c03\u5b8c\u540e\u5f97\u5220\uff0c\u5176\u5b9e\u5c31\u662f\u7b80\u7565\u7248\u65e5\u5fd7\u3002 - \u65ad\u8a00\uff1a assert assertionCondition, errinfoString \uff0c\u65ad\u8a00\u5931\u8d25\u4f1a\u629b\u51fa AssertionError \u3002\u542f\u52a8\u65f6\u52a0\u4e0a -O \u9009\u9879\u5173\u95ed\u65ad\u8a00\u3002 - \u65e5\u5fd7\uff1a import logging \u3002 - \u4e0d\u540c\u7ea7\u522b\uff1a NOTSET DEBUG INFO WARNING/WARN ERROR FATAL/CRITICAL - \u8bbe\u7f6e\u8f93\u51fa\u7ea7\u522b\uff1a logging.basicConfig(level = logging.INFO) - \u5bf9\u5e94\u8f93\u51fa\u65b9\u6cd5\uff1a debug info warning error/exception critical/fatal - \u6307\u5b9a level = INFO \u65f6 debug \u5c31\u4e0d\u8d77\u4f5c\u7528\u4e86\u3002 - \u9ed8\u8ba4\u65e5\u5fd7\u7ea7\u522b\u4e3a WARNING \u3002 - \u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\uff0c\u4e00\u6761\u8bed\u53e5\u53ef\u4ee5\u8f93\u51fa\u5230\u4e0d\u540c\u5730\u65b9\uff0c\u6bd4\u5982\u63a7\u5236\u53f0\u548c\u6587\u4ef6\u3002 - \u65e5\u5fd7\u662f\u6bd4\u8f83\u65b9\u4fbf\u7684\u5de5\u5177\u3002 - pdb \u5355\u6b65\u8c03\u8bd5\uff1a python -m pdb xxx.py - l \u67e5\u770b\u4ee3\u7801\u3002 - n \u5355\u6b65\u6267\u884c\u3002 - p variable \u67e5\u770b\u53d8\u91cf\u3002 - a \u67e5\u770b\u5f53\u524d\u51fd\u6570\u6240\u6709\u53d8\u91cf\u3002 - q \u9000\u51fa\u7a0b\u5e8f\u3002 - c \u7ee7\u7eed\u6267\u884c\u3002 - pdb \u8bbe\u7f6e\u65ad\u70b9\uff1a - import pdb - pdb.set_trace() \u8bbe\u7f6e\u65ad\u70b9\u3002 - \u547d\u4ee4\u884c\u8c03\u8bd5\u8fd8\u662f\u592a\u9ebb\u70e6\u4e86\uff0c\u4f7f\u7528VsCode\u6216\u8005PyCharm\u5c31\u884c\u3002 - \u4f7f\u7528IDE\u8c03\u8bd5\u867d\u7136\u65b9\u4fbf\uff0c\u4f46\u5230\u6700\u540e logging \u624d\u662f\u7ec8\u6781\u6b66\u5668\u3002\u5bf9\u4e8e\u5927\u578b\u7cfb\u7edf\u5355\u6b65\u8c03\u8bd5\u5173\u6ce8\u5c40\u90e8\uff0c\u5927\u91cf\u65e5\u5fd7\u5206\u6790\u66f4\u5173\u6ce8\u6574\u4f53\uff0c\u90fd\u5fc5\u4e0d\u53ef\u5c11\u3002 \u5355\u5143\u6d4b\u8bd5\uff1a - \u5355\u5143\u6d4b\u8bd5\u662f\u5bf9\u4e00\u4e2a\u6a21\u5757\u3001\u4e00\u4e2a\u7c7b\u6216\u8005\u4e00\u4e2a\u51fd\u6570\u8fdb\u884c\u6b63\u786e\u6027\u68c0\u9a8c\u7684\u6d4b\u8bd5\u5de5\u4f5c\u3002 - \u601d\u8def\uff0c\u6bd4\u5982\u5bf9\u4e8e\u51fd\u6570 abs() \uff1a - \u8f93\u5165\u6b63\u6570\u671f\u5f85\u4e0e\u8f93\u5165\u76f8\u540c\u3002 - \u8f93\u5165\u8d1f\u6570\u671f\u5f85\u4e0e\u8f93\u5165\u76f8\u53cd\u3002 - \u8f93\u51650\u671f\u5f85\u8fd4\u56de0\u3002 - \u8f93\u5165\u975e\u6570\u503c\u7c7b\u578b\uff0c\u6bd4\u5982 [] () {} None \u671f\u5f85\u629b\u51fa TypeError \u3002 - \u4ee5\u4e0a\u6d4b\u8bd5\u653e\u5230\u4e00\u4e2a\u6a21\u5757\u4e2d\u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u9488\u5bf9 abs \u51fd\u6570\u7684\u5355\u5143\u6d4b\u8bd5\u3002 - \u5982\u679c\u6d4b\u8bd5\u672a\u901a\u8fc7\uff0c\u9700\u8981\u786e\u5b9a\u662f\u5355\u5143\u6d4b\u8bd5\u7f16\u5199\u5f97\u6709\u95ee\u9898\u8fd8\u662f\u51fd\u6570\u6709bug\uff0c\u6709\u5219\u4fee\u590d\uff0c\u4f7f\u4e4b\u80fd\u591f\u6d4b\u8bd5\u901a\u8fc7\u3002 - \u5355\u5143\u6d4b\u8bd5\u7684\u610f\u4e49\uff1a\u5728\u6211\u4eec\u4fee\u6539\u4e86 abs() \u4ee3\u7801\u4e4b\u540e\uff0c\u518d\u8dd1\u4e00\u8fb9\u6d4b\u8bd5\u7528\u4f8b\uff0c\u901a\u8fc7\u5219\u8bf4\u660e\u4fee\u6539\u5bf9\u73b0\u6709 abs() \u51fd\u6570\u539f\u6709\u7684\u884c\u4e3a\u672a\u9020\u6210\u5f71\u54cd\u3002\u4e0d\u901a\u8fc7\u7684\u8bdd\uff0c\u8981\u4e48\u4fee\u6539\u4ee3\u7801\u4e0e\u539f\u6765\u9700\u6c42\u4e00\u81f4\uff0c\u8981\u4e48\u4fee\u6539\u6d4b\u8bd5\u51fd\u6570\u529f\u80fd\u53d1\u751f\u53d8\u5316\uff08\u4f7f\u7528\u7684\u5730\u65b9\u540c\u6837\u9700\u8981\u6ce8\u610f\uff09\u3002 - \u8fd9\u79cd\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1\u7684\u597d\u5904\u5c31\u662f\u786e\u4fdd\u7a0b\u5e8f\u6a21\u5757\u884c\u4e3a\u7b26\u5408\u8bbe\u8ba1\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5728\u5c06\u6765\u4fee\u6539\u91cd\u6784\u65f6\uff0c\u53ef\u4ee5\u6781\u5927\u7a0b\u5ea6\u4fdd\u8bc1\u8be5\u6a21\u5757\u884c\u4e3a\u4ecd\u7136\u662f\u6b63\u786e\u7684\u3002 - python\u81ea\u5e26\u7684\u5355\u5143\u6d4b\u8bd5\u6a21\u5757\uff1a unittest - \u6d4b\u8bd5\u7c7b\u4ece unittest.TestCase \u7ee7\u627f\uff0c\u5176\u4e2d\u4ee5 test \u5f00\u5934\u7684\u65b9\u6cd5\u5c31\u662f\u6d4b\u8bd5\u65b9\u6cd5\uff0c\u4e0d\u4ee5 test \u5f00\u5934\u7684\u65b9\u6cd5\u4e0d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u6d4b\u8bd5\u65b9\u5f0f\uff0c\u6d4b\u8bd5\u65f6\u4e0d\u4f1a\u88ab\u6267\u884c\u3002 - unittest.TestCase \u63d0\u4f9b\u4e86\u5f88\u591a\u5185\u7f6e\u7684\u6761\u4ef6\u5224\u65ad\uff1a - assertEqual \u6700\u5e38\u7528 - assertTrue - assertRaises \u5904\u7406\u9519\u8bef\u8f93\u5165\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38\u7684\u60c5\u51b5\u3002 - \u6700\u540e\u6267\u884c\u6d4b\u8bd5\u7684\u903b\u8f91\u4e2d\u76f4\u63a5\u6267\u884c unittest.main() \uff08\u653e\u5230 __name__ == \"__main__\" \u4e2d\uff09\u5373\u53ef\u6267\u884c\u8fd9\u4e9b\u6d4b\u8bd5\uff0c\u4e0d\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u6dfb\u52a0\u5230\u4ee3\u7801\u4e2d\u3002 - \u8fd0\u884c\u6d4b\u8bd5\uff1a python xxx.py \u6216\u8005 python -m unittest xxx \u6d4b\u8bd5\u6a21\u5757\u3002 - \u53ef\u4ee5\u5728\u5355\u5143\u6d4b\u8bd5\u4e2d\u7f16\u5199\u4e24\u4e2a\u7279\u6b8a\u7684 setUp() \u548c tearDown() \u65b9\u6cd5\u3002\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4f1a\u5206\u522b\u5728\u6bcf\u8c03\u7528\u4e00\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u7684\u524d\u540e\u5206\u522b\u88ab\u6267\u884c\u3002\u8bbe\u60f3\u4f60\u7684\u6d4b\u8bd5\u9700\u8981\u542f\u52a8\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u8fd9\u65f6\uff0c\u5c31\u53ef\u4ee5\u5728 setUp() \u65b9\u6cd5\u4e2d\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u5728 tearDown() \u65b9\u6cd5\u4e2d\u5173\u95ed\u6570\u636e\u5e93\u3002 - \u5355\u5143\u6d4b\u8bd5\u901a\u8fc7\u5e76\u4e0d\u4ee3\u8868\u6ca1\u6709bug\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u901a\u8fc7\u4e00\u5b9a\u5c31\u6709bug\uff0c\u65e0\u8bba\u662f\u6d4b\u8bd5\u4ee3\u7801\u8fd8\u662f\u5177\u4f53\u903b\u8f91\u3002 \u6587\u6863\u6d4b\u8bd5\uff1a - Python\u5185\u7f6e\u7684\u6587\u6863\u6d4b\u8bd5 doctest \u53ef\u4ee5\u76f4\u63a5\u63d0\u53d6\u6ce8\u91ca\u4e2d\u7684\u4ee3\u7801\u5e76\u6267\u884c\u6d4b\u8bd5\u3002 - doctest \u4e25\u683c\u6309\u7167Python\u4ea4\u4e92\u5f0f\u547d\u4ee4\u884c\u7684\u8f93\u5165\u548c\u8f93\u51fa\u6765\u5224\u65ad\u6d4b\u8bd5\u7ed3\u679c\u662f\u5426\u6b63\u786e\u3002\u53ea\u6709\u5728\u6d4b\u8bd5\u5f02\u5e38\u65f6\uff0c\u53ef\u4ee5\u7528 ... \u8868\u793a\u5176\u4e2d\u4e00\u5927\u6bb5\u70e6\u4eba\u7684\u8f93\u51fa\u3002 - \u6267\u884c\u6d4b\u8bd5\uff1a import doctest doctest.testmod() \u4e00\u822c\u540c\u6837\u5199\u5728 __name__ == \"__main__\" \u6761\u4ef6\u4e2d\uff0c\u88ab\u5176\u4ed6\u6a21\u5757\u5bfc\u5165\u65f6\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c\u53ea\u6709\u5355\u72ec\u6267\u884c\u6539\u6587\u4ef6\u624d\u4f1a\u6267\u884c\u3002\u6267\u884c\u5931\u8d25\u4f1a\u6709\u63d0\u793a\uff0c\u6267\u884c\u6210\u529f\u4e0d\u4f1a\u6709\u4efb\u4f55\u63d0\u793a\u3002","title":"\u9519\u8bef\u3001\u8c03\u8bd5\u4e0e\u6d4b\u8bd5"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#io","text":"IO\u5206\u4e3a\u540c\u6b65IO\u548c\u5f02\u6b65IO\uff0c\u56e0\u4e3a\u78c1\u76d8\u8bfb\u5199\u7f51\u7edc\u64cd\u4f5c\u7b49\u90fd\u6bd4CPU\u5904\u7406\u6162\uff0c\u6240\u4ee5\u53d1\u8d77\u4e00\u4e2aIO\u64cd\u4f5cCPU\u53ef\u4ee5\u9009\u62e9\u7b49\u5f85\u5904\u7406\u7ed3\u675f\u518d\u7ee7\u7eed\u6267\u884c\uff0c\u8fd8\u662f\u8bf4\u76f4\u63a5\u7ee7\u7eed\u6267\u884c\uff0c\u4ee5\u5176\u4ed6\u65b9\u5f0f\u5904\u7406IO\uff08IO\u5904\u7406\u7ed3\u675f\u540e\u56de\u8c03\u6216\u8005CPU\u53bb\u8f6e\u8be2IO\u72b6\u6001\uff09\u3002\u5f02\u6b65IO\u590d\u6742\u9ad8\u6548\uff0c\u540c\u6b65IO\u7b80\u5355\u4f46\u662f\u4f4e\u6548\uff0c\u8fd9\u91cc\u4ec5\u5148\u63a2\u8ba8\u540c\u6b65IO\u3002 \u6587\u4ef6\u8bfb\u5199\uff1a - \u6253\u5f00\u6587\u4ef6\uff1a f = open(\"Test.txt\", \"r\") - \u51fd\u6570\u539f\u578b\uff1a open(file, mode='r', buffering=- 1, encoding=None, errors=None, newline=None, closefd=True, opener=None) - \u8bfb\u5199\u6a21\u5f0f\uff1a\u53ef\u4ee5\u8bfb\u6216\u8005\u5199\uff0c\u5199\u65f6\u53ef\u4ee5\u9009\u62e9\u8986\u76d6\u8fd8\u662f\u6dfb\u52a0\u5230\u672b\u5c3e\uff0c\u8bfb\u5199\u53ef\u4ee5\u9009\u62e9\u6587\u672c\u683c\u5f0f\u8fd8\u662f\u4e8c\u8fdb\u5236\u683c\u5f0f\uff0c\u5199\u65f6\u53ef\u4ee5\u9009\u62e9\u6587\u4ef6\u4e0d\u5b58\u5728\u548c\u5b58\u5728\u65f6\u7684\u9ed8\u8ba4\u64cd\u4f5c\uff08\u521b\u5efa\u8fd8\u662f\u62a5\u9519\uff09\u3002 - \u5177\u4f53\u8bfb\u5199\u9009\u9879\uff1a rwxa bt + \u53ef\u4ee5\u6392\u5217\u7ec4\u5408\uff0c\u6839\u636e\u9700\u8981\u6dfb\u52a0\uff0c\u9ed8\u8ba4\u662f rt \u6587\u672c\u683c\u5f0f\u8bfb\u6253\u5f00\u3002 \u5b57\u7b26 \u542b\u610f 'r' \u8bfb\u53d6\uff08\u9ed8\u8ba4\uff09 'w' \u5199\u5165\uff0c\u5e76\u5148\u622a\u65ad\u6587\u4ef6 'x' \u6392\u5b83\u6027\u521b\u5efa\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u5931\u8d25 'a' \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u5199\u5165\uff0c\u5982\u679c\u6587\u4ef6\u5b58\u5728\u5219\u5728\u672b\u5c3e\u8ffd\u52a0 'b' \u4e8c\u8fdb\u5236\u6a21\u5f0f 't' \u6587\u672c\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09 '+' \u6253\u5f00\u7528\u4e8e\u66f4\u65b0\uff08\u8bfb\u53d6\u4e0e\u5199\u5165\uff09 Python\u533a\u5206\u4e8c\u8fdb\u5236\u548c\u6587\u672cIO\uff0c\u4e8c\u8fdb\u5236\u683c\u5f0f\u6253\u5f00\u7684\u5185\u5bb9\u8fd4\u56de bytes \u5bf9\u8c61\uff0c\u4e0d\u8fdb\u884c\u4efb\u4f55\u89e3\u7801\u3002\u6587\u672c\u683c\u5f0f\u6253\u5f00\u5185\u5bb9\u8fd4\u56de str \uff0c\u4f7f\u7528\u6307\u5b9a\u7684 encoding \uff08\u5982\u679c\u6307\u5b9a\u4e86\u7684\u8bdd\uff09\u6216\u8005\u5e73\u53f0\u9ed8\u8ba4\u5b57\u8282\u7f16\u7801\u89e3\u7801\u3002 \u5e73\u53f0\u65e0\u5173\uff0c\u4e0d\u4f9d\u8d56\u64cd\u4f5c\u7cfb\u7edf\u5e95\u5c42\u7684\u6587\u672c\u6587\u4ef6\u6982\u5ff5\uff0c\u6240\u6709\u5904\u7406\u7531python\u81ea\u8eab\u5b8c\u6210\u3002 \u66f4\u591a\u53c2\u6570\u7ec6\u8282\u67e5\u770b \u6587\u6863 \u3002 \u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61\uff0c\u7c7b\u578b\u53d6\u51b3\u4e8e\u6240\u7528\u6a21\u5f0f\uff0c\u6587\u672c\u4e8c\u8fdb\u5236\u3001\u662f\u5426\u4f7f\u7528\u7f13\u51b2\u90fd\u4f1a\u6709\u5f71\u54cd\uff0c\u4e00\u822c\u6587\u672c\u6a21\u5f0f\u8bfb\u6216\u5199\u6253\u5f00\u662f\u8fd4\u56de\u7684\u662f\u4e00\u4e2a io.TextIOBase \u5b50\u7c7b\uff08\u7279\u522b\u662f io.TextIOWrapper \uff09\u3002 \u8c03\u7528 read \u8bfb\u53d6\u5168\u90e8\u5185\u5bb9\uff0c\u5f97\u5230\u7684\u6587\u4ef6\u5bf9\u8c61\u53ef\u4ee5\u8fed\u4ee3\uff0c\u6587\u672c\u6a21\u5f0f\u4e0b\u8fed\u4ee3\u5355\u4f4d\u662f\u884c\u3002 \u4f7f\u7528\u7ed3\u675f\u540e\u9700\u8981 close \u5173\u95ed\u3002 \u6587\u4ef6\u8bfb\u5199\u65f6\u90fd\u6709\u53ef\u80fd\u9519\u8bef\uff0c\u53ef\u4ee5\u4f7f\u7528 try ... finally \u786e\u4fdd\u6587\u4ef6\u4e00\u5b9a\u88ab\u5173\u95ed\u3002 try: f = open(\"Test.txt\", \"r\") print(f.read()) finally: if f: f.close() \u4e3a\u4e86\u7b80\u5316\uff0cPython\u5f15\u5165\u4e86 with \u8bed\u53e5\u6765\u81ea\u52a8\u8c03\u7528 close \u3002 with open(\"Test.txt\", \"r\") as f: print(f.read()) \u6587\u4ef6\u5f88\u5927\u65f6 read \u76f4\u63a5\u8bfb\u53d6\u53ef\u80fd\u5e76\u4e0d\u597d\uff0c\u53ef\u4ee5\u4f7f\u7528 read(size) \u8bfb\u53d6\u6307\u5b9a\u5b57\u8282\u5185\u5bb9\uff0c readline() \u6bcf\u6b21\u8bfb\u53d6\u4e00\u884c\uff0c readlines() \u8bfb\u53d6\u6240\u6709\u884c\u653e\u5230\u5217\u8868\u4e2d\u3002 for line in f.readlines(): # iterate list of lines print(line) for line in f: # iterate line in file print(line) open \u8fd4\u56de\u7684\u5177\u6709 read() \u65b9\u6cd5\u7684\u5bf9\u8c61\u6210\u4e3afile-like object\uff0c\u9664\u4e86\u6587\u4ef6\u8fd8\u53ef\u4ee5\u662f\u5b57\u8282\u6d41\u3001\u7f51\u7edc\u6d41\u3001\u81ea\u5b9a\u4e49\u6d41\u7b49\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u4e0d\u8981\u6c42\u4ece\u7279\u5b9a\u7c7b\u6d3e\u751f\uff0c\u56e0\u4e3a\u662f\u9e2d\u5b50\u7c7b\u578b\u7684\uff0c\u53ea\u9700\u8981\u5b9e\u73b0 read() \u65b9\u6cd5\u5c31\u884c\u3002 \u5199\u6587\u4ef6\u4f7f\u7528 write \u3002\u5199\u65f6\u4f1a\u7f13\u51b2\uff0c\u4e0d\u4f1a\u7acb\u5373\u5199\u5230\u78c1\u76d8\uff0c\u6587\u4ef6\u5173\u95ed\u65f6\u624d\u88ab\u5199\u5230\u78c1\u76d8\u3002 python\u4e2d\u6700\u597d\u4f7f\u7528 with \u8bed\u53e5\u64cd\u4f5c\u6587\u4ef6IO\u3002 StringIO / BytesIO \uff1a - \u5f88\u591a\u65f6\u5019\u6570\u636e\u8bfb\u5199\u4e0d\u4e00\u5b9a\u5c31\u662f\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u5728\u5185\u5b58\u4e2d\u8bfb\u5199\uff0c\u5185\u5b58\u4e2d\u8bfb\u5199 str \u548c bytes \u5206\u522b\u4f7f\u7528 io.StringIO io.BytesIO \u3002 - \u7528\u6cd5\u548c\u6587\u4ef6\u6d41\u4e00\u6837\uff0c\u521b\u5efa\u4e4b\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528\uff0c\u53e6\u5916\u53ef\u4ee5\u4f7f\u7528 getvalue() \u83b7\u53d6\u5185\u5bb9\u3002 - \u9664\u4e86\u8bfb\u5199\uff0c\u5176\u5b9eIO\u5bf9\u8c61\u6709\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5f53\u524d\u7684\u4f4d\u7f6e\uff0c\u4f7f\u7528 tell \u83b7\u53d6\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528 seek(offset, whence) \u79fb\u52a8\uff08\u504f\u79fb\u53ef\u8d1f\u53ef\u6b63\u8868\u5411\u524d\u540e\u79fb\u52a8\uff0c\u540e\u4e00\u4e2a\u53c2\u6570\u8868\u76f8\u5bf9\u7684\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a0\u6587\u4ef6\u5f00\u5934\uff0c1\u5f53\u524d\u4f4d\u7f6e\uff0c2\u6587\u4ef6\u672b\u5c3e\uff09\uff0c\u8bfb\u5199\u3001\u8bfb\u53d6\u884c\u7b49\u64cd\u4f5c\u540e\u6307\u9488\u5c31\u4f1a\u79fb\u52a8\u5230\u5199\u7684\u5185\u5bb9\u672b\u5c3e\u6216\u8005\u4e0b\u4e00\u884c\u3002 - \u641e\u6e05\u695a\u5f53\u524d\u4f4d\u7f6e\uff0c\u540c\u65f6\u53ea\u7528\u6765\u8bfb\u6216\u5199\uff0c\u4e00\u822c\u4e0d\u8981\u540c\u65f6\u8bfb\u6216\u5199\uff0c\u4f1a\u5f88\u8ff7\u60d1\u5bb9\u6613\u51fa\u9519\u3002 \u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3\uff1a - \u4f7f\u7528 os \u6a21\u5757\u76f4\u63a5\u8c03\u7528\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u4e86\u63a5\u53e3\u3002 - import os - os.name \u8868\u660e\u5f53\u524d\u7cfb\u7edf\uff0c\u7c7bUnix\u7cfb\u7edf\u662f posix \uff0cwindows\u7cfb\u7edf\u662f nt \u3002 - os.uname() \u83b7\u53d6\u7cfb\u7edf\u8be6\u7ec6\u4fe1\u606f\u3002windows\u4e0a\u4e0d\u63d0\u4f9b\uff0c\u67d0\u4e9b\u51fd\u6570\u662f\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u7684\u3002 - \u73af\u5883\u53d8\u91cf\uff1a print(os.environ) # environment variables print(os.environ.get(\"path\")) # get specific environment variable \u64cd\u4f5c\u6587\u4ef6\u4e0e\u76ee\u5f55\uff1a - \u63a5\u53e3\u4e00\u90e8\u5206\u5728 os \u6a21\u5757\uff0c os.path \u4e0b\u3002 - os.mkdir() os.rmdir() \u65b0\u5efa\u548c\u5220\u9664\u76ee\u5f55\u3002 - os.path.abspath('.') \u83b7\u53d6\u7edd\u5bf9\u8def\u5f84\u3002 - \u5408\u5e76\u8def\u5f84\u65f6\uff0c\u4f7f\u7528 os.path.join() \u800c\u4e0d\u662f\u4f7f\u7528\u5b57\u7b26\u4e32\u7684 join \uff0c\u8fd9\u4e2a\u63a5\u53e3\u4f1a\u5904\u7406\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u76ee\u5f55\u5206\u9694\u7b26\u3002 print(os.path.join('..', \"test\", \"hello\")) # ../test/hello in Unix-like, ..\\test\\hello in windows \u540c\u7406\u62c6\u5206\u8def\u5f84\u65f6\u4f7f\u7528 os.path.split() \uff0c\u62c6\u6210\u76ee\u5f55\u548c\u6587\u4ef6\u540d\u7684\u5143\u7ec4\u3002 \u62c6\u5206\u6587\u4ef6\u6269\u5c55\u540d os.path.splitext() \u3002 \u8def\u5f84\u62c6\u5206\u4e0d\u8981\u6c42\u6587\u4ef6\u5b58\u5728\uff0c\u4ec5\u5904\u7406\u8def\u5f84\u3002 \u66f4\u591a\u51fd\u6570 os.rename() os.remove() os \u4e2d\u4e0d\u5b58\u5728\u590d\u5236\u6587\u4ef6\u7684\u63a5\u53e3\uff0c\u5728 shutil \u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86 copyfile \u7528\u4e8e\u590d\u5236\uff0c\u8fd9\u4e2a\u6a21\u5757\u53ef\u4ee5\u770b\u505a\u662f os \u6a21\u5757\u7684\u8865\u5145\u3002 \u8fd8\u6709\u66f4\u591a\u63a5\u53e3\uff0c\u53ef\u4ee5\u67e5\u770b\u6807\u51c6\u5e93\u6587\u6863\u3002 \u5e8f\u5217\u5316\uff1a - \u5e8f\u5217\u5316\u5c31\u662f\u5c06\u5bf9\u8c61\u5199\u8fdb\u6587\u4ef6\uff0c\u53cd\u8fc7\u6765\u7684\u8fc7\u7a0b\u79f0\u4e3a\u53cd\u5e8f\u5217\u5316\u3002Python\u4e2d\u79f0\u4e4b\u4e3aPickling\u548cUnpickling\u3002 - Python\u7684\u5bf9\u8c61\u5e8f\u5217\u5316\u53ef\u4ee5\u4f7f\u7528 pickle \u6a21\u5757\uff0c\u4f7f\u7528 pickle.dumps(obj) \u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u8282\u5e8f\u5217 bytes \uff0c\u53ef\u4ee5\u76f4\u63a5\u4fdd\u5b58\u5230\u6587\u4ef6 pickle.dump(obj, fd) \u3002 - \u53cd\u5e8f\u5217\u5316\u5219\u4f7f\u7528 obj = pickle.load(fd) \u4ece\u6587\u4ef6\u52a0\u8f7d\uff0c obj = pickle.loads(s) \u4ece bytes \u52a0\u8f7d\u3002 - \u4f7f\u7528 pickle \u6a21\u5757\u95ee\u9898\u548c\u5176\u4ed6\u8bed\u8a00\u7279\u6709\u7684\u5e8f\u5217\u5316\u95ee\u9898\u4e00\u6837\uff0c\u53ea\u80fd\u7528\u4e8ePython\u8bed\u8a00\uff0c\u4e0d\u540c\u7248\u672c\u53ef\u80fd\u4e0d\u517c\u5bb9\u3002\u6cdb\u7528\u6027\u6709\u9650\u3002 - \u66f4\u4e00\u822c\u7684\u5e8f\u5217\u5316\u65b9\u6cd5\u8fd8\u662f\u4f7f\u7528JSON\u6216\u8005XML\u8fd9\u79cd\u7ed3\u6784\u5316\u63cf\u8ff0\u3002JSON\u8868\u793a\u7684\u5bf9\u8c61\u5c31\u662f\u6807\u51c6\u7684Javascript\u8bed\u8a00\u7684\u5bf9\u8c61\u3002 - JSON\u548cpython\u5185\u7f6e\u7c7b\u578b\u5bf9\u5e94\u5173\u7cfb\u3002 JSON\u7c7b\u578b Python\u7c7b\u578b {} dict [] list \"string\" str 1234.56 int \u6216 float true/false True/False null None - Python\u5185\u7f6e\u7684 json \u6a21\u5757\u63d0\u4f9b\u4e86\u975e\u5e38\u5b8c\u5584\u7684JSON\u683c\u5f0f\u8f6c\u6362\u3002 - json.dumps(obj) -> str json.dump(obj, fd) - json.loads(json_str) -> obj json.load(fd) -> obj - \u5b9e\u9645\u4f7f\u7528\u4e2d\u8fd8\u9700\u8981\u80fd\u5e8f\u5217\u5316\u4e00\u822c\u5bf9\u8c61\uff0c\u4e3a\u6b64\u5bf9\u8c61\u9700\u8981\u662f\u80fd\u591f\u5e8f\u5217\u5316\u4e3aJSON\u7684\u5bf9\u8c61\u624d\u884c\uff0c\u4e3a\u6b64\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u5178\u7684\u65b9\u6cd5\uff0c\u4f5c\u4e3a\u5173\u952e\u5b57\u53c2\u6570 default \u4f20\u5165 dumps dump \u3002 class Person: def __init__(self, name, age): self.name = name self.age = age def __str__(self) -> str: return f\"Person -> name : {self.name}, age : {self.age}\" def person2dict(p): return { \"name\": p.name, \"age\": p.age } def dict2person(d): return Person(d['name'], d['age']) json_str = json.dumps(Person(\"Kim\", 18), default=person2dict) print(json_str) print(json.dumps(Person(\"Jim\", 17), default=lambda x : x.__dict__)) print(json.loads(json_str, object_hook=dict2person)) \u540c\u7406\u53cd\u5e8f\u5217\u5316\u65f6\u4e5f\u53ef\u4ee5\u5b9a\u5236\u4e00\u4e2a\u5c06\u5b57\u5178\u8f6c\u6362\u4e3a\u5bf9\u8c61\u7684\u94a9\u5b50\u65b9\u6cd5\uff0c\u4f5c\u4e3a object_hook \u5173\u952e\u5b57\u53c2\u6570\u4f20\u5165\u3002 \u901a\u5e38\u7684\u5b9e\u4f8b\u90fd\u6709\u4e00\u4e2a __dict__ \u5c5e\u6027\uff0c\u5c31\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u7528\u6765\u5b58\u50a8\u5b9e\u4f8b\u53d8\u91cf\uff0c\u6240\u4ee5\u5e8f\u5217\u5316\u65f6\u53ef\u4ee5\u4f20\u5165 default=lambda x : x.__dict__ \u3002\u4e5f\u6709\u5c11\u6570\u4f8b\u5916\uff0c\u6bd4\u5982\u5b9a\u4e49\u4e86 __slots__ \u7684class\u3002 \u5f53\u9ed8\u8ba4\u7684\u5e8f\u5217\u5316\u6216\u53cd\u5e8f\u5217\u673a\u5236\u4e0d\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42\u65f6\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u4f20\u5165\u66f4\u591a\u7684\u53c2\u6570\u6765\u5b9a\u5236\u5e8f\u5217\u5316\u6216\u53cd\u5e8f\u5217\u5316\u7684\u89c4\u5219\uff0c\u65e2\u505a\u5230\u4e86\u63a5\u53e3\u7b80\u5355\u6613\u7528\uff0c\u53c8\u505a\u5230\u4e86\u5145\u5206\u7684\u6269\u5c55\u6027\u548c\u7075\u6d3b\u6027\u3002 \u6bd4\u5982 ensure_ascii \u53c2\u6570\u53ef\u4ee5\u786e\u4fdd\u5199\u5230Json\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u662f\u5426\u5141\u8bb8\u975eASCII\u5b57\u7b26\uff0c\u9ed8\u8ba4\u662f True \u5219\u4f1a\u5c06\u975eASCII\u7684Unicode\u5b57\u7b26\u7528 \\uxxxx \u8f6c\u4e49\u3002","title":"IO"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_11","text":"\u591a\u4efb\u52a1\uff1a - \u5373\u64cd\u4f5c\u7cfb\u7edf\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u4efb\u52a1\uff0c\u8868\u73b0\u4e0a\u5c31\u662f\u5e76\u53d1\u6267\u884c\u7684\u3002 - \u64cd\u4f5c\u7cfb\u7edf\u7684\u4efb\u52a1\u5c31\u662f\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u5185\u90e8\u53ef\u4ee5\u6709\u5b50\u4efb\u52a1\uff0c\u5c31\u662f\u7ebf\u7a0b\u3002 - \u591a\u4efb\u52a1\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a - \u591a\u8fdb\u7a0b\u3002 - \u591a\u7ebf\u7a0b\u3002 - \u591a\u8fdb\u7a0b+\u591a\u7ebf\u7a0b\u3002 - Python\u65e2\u652f\u6301\u591a\u8fdb\u7a0b\uff0c\u53c8\u652f\u6301\u591a\u7ebf\u7a0b\u3002 - \u7ebf\u7a0b\u662f\u6700\u5c0f\u7684\u6267\u884c\u5355\u5143\uff0c\u8fdb\u7a0b\u81f3\u5c11\u7531\u4e00\u4e2a\u7ebf\u7a0b\u7ec4\u6210\u3002\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u8c03\u5ea6\u7531\u64cd\u4f5c\u7cfb\u7edf\u51b3\u5b9a\uff0c\u7a0b\u5e8f\u4e0d\u80fd\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u6267\u884c\uff0c\u6267\u884c\u591a\u957f\u65f6\u95f4\u3002 - \u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b\u7684\u7a0b\u5e8f\u6d89\u53ca\u5230\u540c\u6b65\u3001\u6570\u636e\u5171\u4eab\u7b49\u95ee\u9898\uff0c\u7f16\u5199\u8d77\u6765\u66f4\u590d\u6742\u3002 \u7c7bUnix\u7cfb\u7edf\u7684\u591a\u8fdb\u7a0b\uff1a - fork() \u7cfb\u7edf\u8c03\u7528\u4e00\u6b21\uff0c\u8fd4\u56de\u4e24\u6b21\uff0c\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u628a\u5f53\u524d\u8fdb\u7a0b\uff08\u7236\u8fdb\u7a0b\uff09\u590d\u5236\u4e86\u4e00\u4efd\uff08\u5b50\u8fdb\u7a0b\uff09\uff0c\u7136\u540e\u5728\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u5185\u5206\u522b\u8fd4\u56de\u3002 - \u5b50\u8fdb\u7a0b\u6c38\u8fdc\u8fd4\u56de0\uff0c\u7236\u8fdb\u7a0b\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684ID\u3002\u4e00\u4e2a\u7236\u8fdb\u7a0b\u53ef\u4ee5 fork \u51fa\u591a\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u6240\u4ee5\u7236\u8fdb\u7a0b\u8981\u8bb0\u4e0b\u5b50\u8fdb\u7a0b\u7684ID\uff0c\u5b50\u8fdb\u7a0b\u53ea\u9700\u8981\u8c03\u7528 getppid() \u5c31\u53ef\u4ee5\u62ff\u5230\u7236\u8fdb\u7a0bID\u3002 - Python\u7684 os \u6a21\u5757\u5c01\u88c5\u4e86\u5e38\u89c1\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u5305\u62ec fork \u3002\u4ec5\u5728*nix\u4e0a\u6709\u8fd9\u4e2a\u63a5\u53e3\uff0cwindows\u4e0a\u6ca1\u6709\u3002 # -*- coding: utf-8 -*- import os print(f\"porcess {os.getpid()} start ...\") # only works on *nix(Linux/Unix/MacOS) pid = os.fork() if pid == 0: print(f\"This is child process {os.getpid()}, and parent is {os.getppid()}.\") else: print(f\"This is parent process {os.getpid()}, and just created a child process {pid}\") \u8de8\u5e73\u53f0\u7684\u591a\u7ebf\u7a0b\uff1a - \u5982\u679c\u662f\u6253\u7b97\u7f16\u5199\u591a\u8fdb\u7a0b\u7684\u670d\u52a1\u7a0b\u5e8f\uff0c\u8fd0\u884c\u5728Linux\u5e73\u53f0\u663e\u7136\u662f\u6700\u4f73\u7684\u9009\u62e9\u3002 - Python\u662f\u8de8\u5e73\u53f0\u7684\uff0c\u6240\u4ee5\u4e5f\u5c01\u88c5\u4e86\u8de8\u5e73\u53f0\u7684\u591a\u7ebf\u7a0b\u6a21\u5757 multiprocessing \u3002 - \u5176\u4e2d\u63d0\u4f9b\u4e86 Process \u7c7b\u4ee3\u8868\u4e00\u4e2a\u8fdb\u7a0b\u3002 from multiprocessing import Process import os # subprocess will execute def run_proc(name): print(f\"Run child process {name} ({os.getpid()})...\") if __name__ == \"__main__\": print(f\"Parent process {os.getpid()}.\") p = Process(target = run_proc, args = ('test', )) print(\"Child process will start.\") p.start() p.join() print(\"Child process end.\") \u521b\u5efa\u5b50\u8fdb\u7a0b\u65f6\uff0c\u4f20\u5165\u4e00\u4e2a\u6267\u884c\u51fd\u6570\u548c\u51fd\u6570\u53c2\u6570\u6784\u9020\u65b0\u7684 Process \u5bf9\u8c61\uff0c\u4f7f\u7528 start \u65b9\u6cd5\u542f\u52a8\uff0c join() \u65b9\u6cd5\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f\u540e\u518d\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c\uff0c\u901a\u5e38\u7528\u4e8e\u8fdb\u7a0b\u95f4\u540c\u6b65\u3002 \u8fdb\u7a0b\u6c60\uff1a - \u5982\u679c\u8981\u521b\u5efa\u5927\u91cf\u5b50\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fdb\u7a0b\u6c60 multiprocessing.Pool \u6279\u91cf\u521b\u5efa\u5b50\u8fdb\u7a0b\u3002 from multiprocessing import Pool, Process import os, time, random def long_time_task(name): print(f\"Run task {name} ({os.getpid()})...\") start = time.time() time.sleep(random.random() * 3) end = time.time() print(f\"Task {name} runs {end-start:0.2f} seconds.\") if __name__ == \"__main__\": print(f\"Parent process {os.getpid()}.\") p = Pool(4) for i in range(5): p.apply_async(long_time_task, args = (i, )) print(\"Waiting for all subprocess done...\") p.close() p.join() print(\"All subprocess done.\") \u901a\u8fc7 Pool \u5bf9\u8c61\u521b\u5efa\u8fdb\u7a0b\u6c60\uff0c\u8c03\u7528 apply_async \u6dfb\u52a0\u5b50\u8fdb\u7a0b\uff0c\u8c03\u7528 join() \u4f1a\u7b49\u5f85\u8fdb\u7a0b\u6c60\u5185\u6240\u6709\u5b50\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u4e4b\u524d\u5fc5\u987b\u8c03\u7528 close() \uff0c\u8c03\u7528 close() \u4e4b\u540e\u4fbf\u4e0d\u80fd\u518d\u6dfb\u52a0\u65b0\u7684\u5b50\u8fdb\u7a0b\u4e86\u3002 \u67d0\u4e00\u6b21\u8fd0\u884c\u7ed3\u679c\uff1a\u5b50\u8fdb\u7a0b0,1,2,3\u662f\u7acb\u5373\u6267\u884c\u7684\uff0c\u800c\u5b50\u8fdb\u7a0b4\u8981\u7b49\u5f85\u524d\u9762\u67d0\u4e2a\u5b50\u8fdb\u7a0b\u6267\u884c\u5b8c\u540e\u624d\u6267\u884c\uff0c\u8fd9\u662f\u56e0\u4e3a Pool(4) \u6307\u5b9a\u4e86\u540c\u65f6\u6267\u884c\u7684\u5b50\u8fdb\u7a0b\u6570\u91cf\u662f4\uff0c\u56e0\u6b64\u6700\u591a\u540c\u65f6\u6267\u884c4\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u8fd9\u662f\u523b\u610f\u7684\u8bbe\u8ba1\u3002\u5982\u679c\u6539\u6210 Pool(5) \u5c31\u80fd\u540c\u65f6\u6267\u884c5\u4e2a\u8fdb\u7a0b\u4e86\u3002\u5982\u679c\u4e0d\u6307\u5b9a\u7684\u8bdd\uff0c\u9ed8\u8ba4\u5927\u5c0f\u662fCPU\u7684\u6838\u5fc3\u6570\u91cf\uff08\u903b\u8f91\u6838\u5fc3\u800c\u975e\u7269\u7406\u6838\u5fc3\u6570\u91cf\uff0c\u6bd4\u5982Intel\u7684\u56db\u6838\u516b\u7ebfCPU\uff0c\u903b\u8f91\u6838\u5fc3\u6570\u91cf\u5c31\u662f8\uff09\u3002 Parent process 7400. Waiting for all subprocess done... Run task 0 (17464)... Run task 1 (10520)... Run task 2 (1504)... Run task 3 (5836)... Task 2 runs 0.20 seconds. Run task 4 (1504)... Task 3 runs 0.89 seconds. Task 1 runs 1.23 seconds. Task 0 runs 1.31 seconds. Task 4 runs 1.58 seconds. All subprocess done. \u548c\u5916\u90e8\u8fdb\u7a0b\u901a\u4fe1\uff1a - \u5f88\u591a\u65f6\u5019\u5b50\u8fdb\u7a0b\u53ef\u80fd\u662f\u5916\u90e8\u8fdb\u7a0b\uff0c\u8fd9\u65f6\u5019\u5982\u679c\u8981\u901a\u4fe1\uff0c\u53ef\u4ee5\u4f7f\u7528 subprocess \u6a21\u5757\u8c03\u7528\u5916\u90e8\u547d\u4ee4\u3002 - \u901a\u8fc7 Popen \u8c03\u7528\uff0c\u901a\u8fc7 communicate \u901a\u4fe1\uff0c\u4f20\u5165\u8f93\u5165\u4fe1\u606f\uff0c\u5f97\u5230\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u3002 import subprocess p = subprocess.Popen(['python', '-c', 'print(\"hello,world!\")'], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE) out, err = p.communicate() print(out.decode(\"utf-8\"), err.decode(\"utf-8\")) print(\"exit code: \", p.returncode) \u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\uff1a - Process \u9700\u8981\u901a\u4fe1\u7684\u8bdd\uff0cpython\u7684 multiprocessing \u6a21\u5757\u5c01\u88c5\u4e86\u5e95\u5c42\u673a\u5236\uff0c\u63d0\u4f9b\u4e86 Queue Pipes \u591a\u79cd\u65b9\u5f0f\u7528\u6765\u4ea4\u6362\u6570\u636e\u3002 - \u4ee5 Queue \u4e3a\u4f8b\uff0c\u7236\u8fdb\u7a0b\u4e2d\u521b\u5efa\u4e24\u4e2a\u5b50\u8fdb\u7a0b\u3002\u4e00\u4e2a\u5f80\u961f\u5217\u4e2d\u5199\u6570\u636e\uff0c\u53e6\u4e00\u4e2a\u8bfb\u53d6\u6570\u636e\u3002 from multiprocessing import Process, Queue import os, time, random # write to queue def write(q): print(f\"Process to write : {os.getpid()}\") for value in ['A', 'B', 'C']: print(f\"Put {value} in queue...\") q.put(value) time.sleep(random.random()) # read from queue def read(q : Queue): print(f\"Process to read : {os.getpid()}\") while True: value = q.get(True) # block = True print(f\"Get value {value} from queue.\") if __name__ == \"__main__\": # create queue and pass to subprocess q = Queue() pw = Process(target=write, args=(q,)) pr = Process(target=read, args=(q,)) # start subprocess to write pw.start() # start subprocess to read pr.start() # wait pw end pw.join() # pr is infinite loop, can not end by itself, must be terminated. pr.terminate() \u5728Unix/Linux\u4e0b\uff0c multiprocessing \u6a21\u5757\u5c01\u88c5\u4e86 fork() \u8c03\u7528\uff0c\u4f7f\u6211\u4eec\u4e0d\u9700\u8981\u5173\u6ce8 fork() \u7684\u7ec6\u8282\u3002\u7531\u4e8eWindows\u6ca1\u6709 fork \u8c03\u7528\uff0c\u56e0\u6b64\uff0c multiprocessing \u9700\u8981\u201c\u6a21\u62df\u201d\u51fa fork \u7684\u6548\u679c\uff0c\u7236\u8fdb\u7a0b\u6240\u6709Python\u5bf9\u8c61\u90fd\u5fc5\u987b\u901a\u8fc7 pickle \u5e8f\u5217\u5316\u518d\u4f20\u5230\u5b50\u8fdb\u7a0b\u53bb\uff0c\u6240\u4ee5\uff0c\u5982\u679c multiprocessing \u5728Windows\u4e0b\u8c03\u7528\u5931\u8d25\u4e86\uff0c\u8981\u5148\u8003\u8651\u662f\u4e0d\u662f pickle \u5931\u8d25\u4e86\u3002 Pipe \u5c31\u662f\u7ba1\u9053\uff0c\u6bcf\u7aef\u90fd\u6709 send() \u548c recv() \u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u53d1\u9001\u548c\u63a5\u6536\uff0c\u5982\u679c\u4e24\u4e2a\u8fdb\u7a0b\u8bd5\u56fe\u5728\u540c\u4e00\u65f6\u95f4\u7684\u540c\u4e00\u7aef\u8fdb\u884c\u8bfb\u53d6\u548c\u5199\u5165\u90a3\u4e48\uff0c\u8fd9\u53ef\u80fd\u4f1a\u635f\u574f\u7ba1\u9053\u4e2d\u7684\u6570\u636e\u3002 \u591a\u7ebf\u7a0b \uff1a - \u8fdb\u7a0b\u662f\u7531\u82e5\u5e72\u7ebf\u7a0b\u7ec4\u6210\u7684\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u6709\u4e00\u4e2a\u7ebf\u7a0b\u3002\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u76f4\u63a5\u652f\u6301\u7684\u6267\u884c\u5355\u5143\uff0c\u9ad8\u7ea7\u8bed\u8a00\u90fd\u6709\u5185\u7f6e\u591a\u7ebf\u7a0b\u652f\u6301\u3002Python\u7684\u7ebf\u7a0b\u662f\u771f\u6b63\u7684Posix Thread\uff0c\u800c\u4e0d\u662f\u6a21\u62df\u51fa\u6765\u7684\u7ebf\u7a0b\u3002 - Python\u7684\u591a\u7ebf\u7a0b\u6a21\u5757\uff1a _thread \u548c threading \uff0c _thread \u662f\u4f4e\u7ea7\u6a21\u5757\uff0c threading \u662f\u9ad8\u7ea7\u6a21\u5757\uff0c\u5bf9 _thread \u8fdb\u884c\u4e86\u5c01\u88c5\u3002\u7edd\u5927\u591a\u6570\u60c5\u51b5\u8bdd\u90fd\u662f\u76f4\u63a5\u4f7f\u7528 threading \u6a21\u5757\u3002 - \u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\uff1a\u521b\u5efa\u4e00\u4e2a Thread \u5b9e\u4f8b\uff0c\u4f20\u5165\u51fd\u6570\uff0c\u8c03\u7528 start() \u5f00\u59cb\u6267\u884c\u3002 import time, threading def loop(): print(f\"thread {threading.current_thread().name} is running...\") for i in range(5): print(f\"thread {threading.current_thread().name} >>> {i}\") time.sleep(1) print(f\"thread {threading.current_thread().name} end.\") if __name__ == \"__main__\": print(f\"thread {threading.current_thread().name} is running...\") t = threading.Thread(target=loop, name=\"LoopThread\") t.start() t.join() print(f\"thread {threading.current_thread().name} end.\") \u4e3b\u7ebf\u7a0b\u540d\u79f0\u9ed8\u8ba4\u662f MainThread \u3002 \u591a\u8fdb\u7a0b\u4e2d\uff0c\u540c\u4e00\u4e2a\u53d8\u91cf\u6709\u591a\u4efd\u62f7\u8d1d\uff0c\u4e92\u4e0d\u5f71\u54cd\uff0c\u4ea4\u4e92\u4e00\u822c\u901a\u8fc7\u6587\u4ef6\u6216\u8005\u7ba1\u9053\u3002\u800c\u5728\u591a\u7ebf\u7a0b\u4e2d\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u662f\u4e00\u4e2a\u8c03\u7528\u6808\uff0c\u53d8\u91cf\u662f\u5171\u4eab\u7684\u3002\u800c\u7ebf\u7a0b\u4e4b\u95f4\u6267\u884c\u987a\u5e8f\u4e0d\u662f\u786e\u5b9a\u7684\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u53d8\u91cf\u4e4b\u540e\u4f1a\u5f71\u54cd\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u7684\u6267\u884c\u3002\u6240\u4ee5\u5fc5\u987b\u5bf9\u8fd9\u79cd\u884c\u4e3a\u52a0\u4ee5\u9650\u5236\u3002 \u8c03\u7528 threading.active_count() \u83b7\u53d6\u5f53\u524d\u6d3b\u8dc3\u7684\u7ebf\u7a0b\u6570\u91cf\uff08\u4e3b\u7ebf\u7a0b\u6216\u8005\u5b50\u7ebf\u7a0b\uff09\u3002 Thread.setDaemon(True) \u8bbe\u7f6e\u5f53\u524d\u7ebf\u7a0b\u4e3a\u4e3b\u7ebf\u7a0b\u7684\u5b88\u62a4\u7ebf\u7a0b\uff0c\u5b88\u62a4\u7ebf\u7a0b\u4e0d\u5fc5\u88ab\u5168\u90e8\u6267\u884c\u5b8c\u6bd5\uff0c\u5f53\u4e3b\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\u65f6\uff0c\u5b83\u7684\u5b88\u62a4\u7ebf\u7a0b\u5c31\u4f1a\u81ea\u52a8\u505c\u6b62\u7ed3\u675f\uff0c\u76f4\u63a5\u9000\u51fa\u3002 \u9501\uff1a - \u4e3a\u4e86\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u5fc5\u987b\u7ed9\u591a\u4e2a\u7ebf\u7a0b\u4f7f\u7528\u6216\u8005\u4fee\u6539\u4e86\u5171\u4eab\u53d8\u91cf\u7684\u4ee3\u7801\u52a0\u9501\u3002\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u65f6\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4e0d\u5f97\u540c\u65f6\u8fdb\u5165\uff0c\u5fc5\u987b\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f\u4e4b\u540e\u624d\u80fd\u8fdb\u5165\u3002 - \u901a\u8fc7 threading.Lock() \u521b\u5efa\u4e92\u65a5\u9501\u3002 - \u4f7f\u7528 lock.acquire() \u83b7\u53d6\u9501\uff0c lock.release() \u91ca\u653e\u9501\u3002\u83b7\u53d6\u9501\u65f6\u5982\u679c\u5df2\u7ecf\u88ab\u5176\u4ed6\u7ebf\u7a0b\u83b7\u53d6\uff0c\u90a3\u4e48\u5c31\u4f1a\u6302\u8d77\u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u6267\u884c\u5b8c\u91ca\u653e\u9501\u4e4b\u540e\u518d\u624d\u80fd\u83b7\u53d6\u3002\u5982\u679c\u52a0\u9501\u7684\u4ee3\u7801\u53ef\u80fd\u53ef\u80fd\u4f1a\u629b\u5f02\u5e38\uff0c\u53ef\u4ee5\u4f7f\u7528 try ... finally \u786e\u4fdd\u4e00\u5b9a\u80fd\u591f\u91ca\u653e\u9501\u3002 - \u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u83b7\u53d6\u9501\u65f6\uff0c\u53ea\u8981\u4e00\u4e2a\u80fd\u83b7\u53d6\u6210\u529f\u3002\u52a0\u4e86\u9501\u7684\u90e8\u5206\u5728\u7ebf\u7a0b\u5185\u53ef\u662f\u89c6\u4e3a\u539f\u5b50\u7684\u64cd\u4f5c\uff0c\u4e00\u5b9a\u80fd\u591f\u987a\u5e8f\u5730\u5b8c\u6574\u6267\u884c\u5b8c\u3002 - \u83b7\u53d6\u9501\u4e4b\u540e\u4e00\u5b9a\u8981\u91ca\u653e\uff0c\u5426\u5219\u5176\u4ed6\u9700\u8981\u83b7\u53d6\u8be5\u9501\u7684\u7ebf\u7a0b\u5c31\u4f1a\u82e6\u82e6\u7b49\u5f85\uff0c\u6210\u4e3a\u6b7b\u7ebf\u7a0b\u3002 - \u9501\u7684\u7684\u5b58\u5728\u5b9e\u9645\u4e0a\u963b\u6b62\u4e86\u591a\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\uff0c\u5305\u542b\u9501\u7684\u4ee3\u7801\u4e5f\u53ea\u80fd\u540c\u65f6\u5728\u4e00\u4e2a\u7ebf\u7a0b\u5185\u6267\u884c\u3002 - \u53ef\u4ee5\u5b58\u5728\u591a\u4e2a\u9501\uff0c\u5f53\u4e0d\u540c\u7ebf\u7a0b\u62e5\u6709\u4e0d\u540c\u9501\uff0c\u5e76\u5c1d\u8bd5\u53bb\u83b7\u53d6\u5bf9\u65b9\u7684\u9501\u65f6\uff0c\u5c31\u4f1a\u9020\u6210\u6b7b\u9501\u3002 - Python\u4e2d\u7684\u591a\u7ebf\u7a0b\u6709\u4e00\u4e2a\u5168\u5c40\u7684GIL\u9501\uff08Global Interpreter Lock\uff0c\u5b98\u65b9\u89e3\u91ca\u5668CPython\u7684\u5386\u53f2\u9057\u7559\u95ee\u9898\uff09\uff0c\u4efb\u4f55Python\u4ee3\u7801\u6267\u884c\u524d\u5fc5\u987b\u5148\u83b7\u5f97GIL\u9501\u3002\u7136\u540e\uff0c\u6bcf\u6267\u884c100\u6761\u5b57\u8282\u7801\uff0c\u89e3\u91ca\u5668\u5c31\u81ea\u52a8\u91ca\u653eGIL\u9501\uff0c\u8ba9\u522b\u7684\u7ebf\u7a0b\u6709\u673a\u4f1a\u6267\u884c\u3002\u6240\u4ee5\u5176\u5b9ePython\u4e2d\u591a\u7ebf\u7a0b\u4e5f\u53ea\u80fd\u4ea4\u66ff\u6267\u884c\uff0c\u800c\u65e0\u6cd5\u5728\u591a\u6838CPU\u7684\u591a\u4e2a\u6838\u5fc3\u4e0a\u540c\u65f6\u6267\u884c\u3002PyPy\u548cJpython\u4e2d\u662f\u6ca1\u6709GIL\u7684\u3002 - Python\u867d\u7136\u4e0d\u80fd\u5229\u7528\u591a\u7ebf\u7a0b\u5b9e\u73b0\u591a\u6838\u4efb\u52a1\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u591a\u8fdb\u7a0b\u5b9e\u73b0\u591a\u6838\u4efb\u52a1\u3002\u591a\u4e2aPython\u8fdb\u7a0b\u6709\u5404\u81ea\u72ec\u7acb\u7684GIL\u9501\uff0c\u4e92\u4e0d\u5f71\u54cd\u3002 - \u5982\u679c\u4e00\u5b9a\u8981\u5728Python\u591a\u7ebf\u7a0b\u4e2d\u5229\u7528\u591a\u6838\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7C\u6269\u5c55\u5b9e\u73b0\u3002 - \u9501\u672c\u8eab\u5c5e\u4e8e\u5171\u4eab\u53d8\u91cf\uff0c\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u8fd9\u91cc\u7684\u8bf4\u7684\u9501\u4e3b\u8981\u662f threading.Lock() \u4e92\u65a5\u9501\uff0c\u8fd8\u6709\u5176\u4ed6\u9501\u7c7b\u578b\u3002 ThreadLocal \uff1a - \u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u7ebf\u7a0b\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\u66f4\u597d\uff08\u8fd9\u6837\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u6709\u4e00\u4efd\uff09\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5171\u4eab\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u5168\u5c40\u53d8\u91cf\u4f7f\u7528\u5fc5\u987b\u52a0\u9501\u3002 - \u8981\u5728\u4e00\u4e2a\u7ebf\u7a0b\u5185\u5c40\u90e8\u53d8\u91cf\uff0c\u9ebb\u70e6\u7684\u662f\uff0c\u5982\u679c\u53e6\u4e00\u4e2a\u51fd\u6570\u9700\u8981\u4f7f\u7528\u8be5\u53d8\u91cf\u5c31\u5fc5\u987b\u4f5c\u4e3a\u53c2\u6570\u4f20\u8fdb\u53bb\u3002\u8fd9\u6837\u591a\u8c03\u7528\u51e0\u5c42\u540e\u53c2\u6570\u4f1a\u8d8a\u6765\u8d8a\u591a\u3002 - \u8fd8\u6709\u4e00\u4e2a\u65b9\u6cd5\u5c31\u662f\u5728\u4e00\u4e2a\u5168\u5c40\u7684\u5b57\u5178\u4e2d\u6839\u636e\u7ebf\u7a0bID\u4f5c\u4e3akey\uff0c\u4fdd\u5b58\u5c5e\u4e8e\u4e0d\u540c\u7ebf\u7a0b\u7684\u540c\u7c7b\u578b\u5bf9\u8c61\uff0c\u7ebf\u7a0b\u4e2d\u6839\u636eID\u53bb\u83b7\u53d6\u3002\u8fd9\u6837\u7406\u8bba\u4e0a\u867d\u7136\u53ef\u884c\uff0c\u4f46\u662f\u592a\u9ebb\u70e6\u4e86\uff0c\u5e76\u4e14\u8fd8\u9700\u8981\u6ce8\u610f\u5b57\u5178\u7684\u5e76\u53d1\u8bbf\u95ee\u3002 - \u4e3a\u4e86\u5e94\u5bf9\u8fd9\u79cd\u95ee\u9898\uff0c\u5c31\u51fa\u73b0\u4e86 ThreadLocal \u5bf9\u8c61\u3002 import threading class Student(): def __init__(self, name) -> None: self.name = name def __str__(self) -> str: return f\"Student {self.name}\" # create global ThreadLocal object local_shool = threading.local() def process_student(): std = local_shool.student print(f\"hello, {std} in thread {threading.current_thread().name}\") def process_thread(name): local_shool.student = Student(name) # bind thread local object to atrribute of global threading.local object process_student() if __name__ == \"__main__\": t1 = threading.Thread(target=process_thread, args=(\"Alice\",), name=\"Thread-A\") t2 = threading.Thread(target=process_thread, args=(\"Bob\",), name=\"Thread-B\") t1.start() t2.start() t1.join() t2.join() \u521b\u5efa\u5168\u5c40\u7684 thread.local() \u5bf9\u8c61\u4e4b\u540e\uff0c\u5c06\u7ebf\u7a0b\u5c40\u90e8\u7684\u53d8\u91cf\u7ed1\u5b9a\u5230\u5176\u4e0a\uff0c\u5c31\u53ef\u4ee5\u5728\u7ebf\u7a0b\u5185\u90e8\u8bbf\u95ee\u8be5\u7ebf\u7a0b\u5bf9\u5e94\u7684\u5bf9\u8c61\u4e86\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u6709\u8be5\u5bf9\u8c61\uff0c\u4f46\u662f\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u4e0d\u4e00\u6837\u3002 ThreadLocal \u6700\u5e38\u89c1\u7684\u7528\u6cd5\u662f\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u7ed1\u5b9a\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\uff0cHTTP\u8bf7\u6c42\uff0c\u7528\u6237\u8eab\u4efd\u4fe1\u606f\u7b49\u3002 \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\uff1a - \u4e3a\u4e86\u5b9e\u73b0\u591a\u4efb\u52a1\uff0c\u6211\u4eec\u901a\u5e38\u4e3a\u4f7f\u7528Master-Worker\u6a21\u5f0f\uff0c\u4e00\u4e2a\u4e3b\u8fdb\u7a0b/\u7ebf\u7a0b\u8d1f\u8d23\u4efb\u52a1\u5206\u53d1\uff0c\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b/\u7ebf\u7a0b\u8d1f\u8d23\u4efb\u52a1\u6267\u884c\u3002 - \u591a\u8fdb\u7a0b\u6a21\u5f0f\u4f18\u70b9\u662f\u7a33\u5b9a\u6027\u9ad8\uff0c\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u5d29\u6e83\uff0c\u4e0d\u4f1a\u5f71\u54cd\u4e3b\u8fdb\u7a0b\u548c\u5176\u4ed6\u5b50\u8fdb\u7a0b\u3002\uff08\u5f53\u7136\u4e3b\u8fdb\u7a0b\u5d29\u6e83\u5176\u4ed6\u8fdb\u7a0b\u4e5f\u65e0\u6cd5\u5e78\u514d\uff0c\u4f46\u662f\u4e3b\u8fdb\u7a0b\u53ea\u8d1f\u8d23\u4efb\u52a1\u5206\u53d1\u4e00\u822c\u5d29\u6e83\u6982\u7387\u6bd4\u8f83\u4f4e\uff09\u3002 - \u591a\u8fdb\u7a0b\u7684\u7f3a\u70b9\u662f\u521b\u5efa\u8fdb\u7a0b\u7684\u4ee3\u4ef7\u8f83\u5927\uff0c\u7c7bUnix\u4e0b\uff0c fork \u8fd8\u884c\uff0c\u4f46Windows\u4e0b\uff0c\u8fdb\u7a0b\u521b\u5efa\u7684\u5f00\u9500\u5f88\u5927\u3002\u64cd\u4f5c\u7cfb\u7edf\u80fd\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u91cf\u4e5f\u662f\u6709\u9650\u7684\u3002 - \u591a\u7ebf\u7a0b\u6a21\u5f0f\u7684\u8bdd\uff0c\u7ebf\u7a0b\u521b\u5efa\u7684\u5f00\u9500\u4f1a\u6bd4\u8fdb\u7a0b\u5c0f\u4e00\u4e9b\u3002\u591a\u7ebf\u7a0b\u4e0b\u4efb\u4f55\u4e00\u4e2a\u5b50\u7ebf\u7a0b\u5d29\u6e83\u90fd\u53ef\u80fd\u5bfc\u81f4\u6574\u4e2a\u7a0b\u5e8f\u5d29\u6e83\uff0c\u56e0\u4e3a\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u5185\u5b58\u3002 - \u65e0\u8bba\u662f\u7ebf\u7a0b\u8fd8\u662f\u8fdb\u7a0b\uff0c\u5207\u6362\u90fd\u662f\u6709\u5f00\u9500\u7684\uff0c\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u591a\u5230\u4e00\u5b9a\u7a0b\u5ea6\uff0c\u5149\u662f\u5207\u6362\u53ef\u80fd\u5c31\u4f1a\u6d88\u8017\u5927\u91cfCPU\u8d44\u6e90\uff0c\u5f97\u4e0d\u507f\u5931\u3002 - \u8003\u8651\u91c7\u7528\u591a\u4efb\u52a1\u5904\u7406\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u5c06\u4efb\u52a1\u5206\u4e3aIO\u5bc6\u96c6\u578b\u8fd8\u662f\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u3002\u8ba1\u7b97\u5bc6\u96c6\u578b\u5927\u91cf\u6d88\u8017CPU\u8d44\u6e90\uff0c\u5bf9\u7a0b\u5e8f\u6027\u80fd\u6709\u8981\u6c42\uff0cPython\u8fd9\u79cd\u811a\u672c\u8bed\u8a00\u8fd0\u884c\u6548\u7387\u4f4e\u4e0b\uff0c\u4e0d\u9002\u5408\u7528\u6765\u7f16\u5199\u8ba1\u7b97\u5bc6\u96c6\u578b\u7a0b\u5e8f\u3002IO\u5bc6\u96c6\u578b\u4efb\u52a1\u6d89\u53ca\u7f51\u7edc\u6587\u4ef6\u7b49IO\uff0cCPU\u6d88\u8017\u5c11\uff0c\u5927\u90e8\u5206\u65f6\u95f4\u7528\u4e8e\u7b49\u5f85IO\u64cd\u4f5c\uff0c\u5bf9\u4e8eIO\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u5e76\u884c\u7684\u4efb\u52a1\u8d8a\u591a\uff0cCPU\u6548\u7387\u8d8a\u9ad8\uff0c\u4f46\u4e5f\u6709\u4e00\u4e2a\u9650\u5ea6\u3002\u5e38\u89c1\u7684\u5927\u90e8\u5206\u4efb\u52a1\u90fd\u662fIO\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u6bd4\u5982Web\u5e94\u7528\u3002\u5bf9\u4e8eIO\u5bc6\u96c6\u578b\u8bed\u8a00\uff0c\u4f7f\u7528Python\u8fd9\u6837\u7684\u811a\u672c\u8bed\u8a00\u5f00\u53d1\u6bd4\u8f83\u5408\u9002\uff0c\u5f00\u53d1\u6548\u7387\u9ad8\uff0c\u8fd0\u884c\u6548\u7387\u4e5f\u4e0d\u5dee\u3002 - \u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u5982\u679c\u6d89\u53ca\u5230IO\u5bc6\u96c6\u64cd\u4f5c\uff0c\u5982\u679c\u91c7\u7528\u5355\u8fdb\u7a0b/\u7ebf\u7a0b\u6a21\u578b\u53ef\u80fd\u4f1a\u5bfc\u81f4IO\u65f6\u5176\u4ed6\u4efb\u52a1\u65e0\u6cd5\u5e76\u884c\u6267\u884c\uff0c\u9700\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u7b49\u5f85IO\u7684\u60c5\u51b5\u3002\u4e3a\u6b64\u624d\u9700\u8981\u591a\u8fdb\u7a0b\u548c\u591a\u7ebf\u7a0b\u6a21\u578b\u6765\u652f\u6301\u5e76\u884c\u3002 - \u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5bf9IO\u64cd\u4f5c\u505a\u4e86\u5de8\u5927\u6539\u8fdb\uff0c\u6700\u5927\u7684\u7279\u70b9\u5c31\u662f\u652f\u6301\u5f02\u6b65IO\uff0c\u5982\u679c\u5145\u5206\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f02\u6b65IO\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u8fdb\u7a0b/\u7ebf\u7a0b\u6765\u6267\u884c\u591a\u4efb\u52a1\u3002\u8fd9\u79cd\u5168\u65b0\u7684\u6a21\u578b\u6210\u4e3a \u4e8b\u4ef6\u9a71\u52a8\u6a21\u578b \u3002Nginx\u5c31\u662f\u652f\u6301\u5f02\u6b65IO\u7684Web\u670d\u52a1\u5668\uff0c\u5b83\u5728\u5355\u6838CPU\u4e0a\u91c7\u7528\u5355\u8fdb\u7a0b\u6a21\u578b\u5c31\u53ef\u4ee5\u9ad8\u6548\u5730\u652f\u6301\u591a\u4efb\u52a1\u3002\u5728\u591a\u6838CPU\u4e0a\uff0c\u53ef\u4ee5\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\uff08\u6570\u91cf\u4e0eCPU\u6838\u5fc3\u6570\u76f8\u540c\uff09\uff0c\u5145\u5206\u5229\u7528\u591a\u6838CPU\u3002 - \u5728Python\u8bed\u8a00\u4e2d\uff0c\u5355\u7ebf\u7a0b\u7684\u5f02\u6b65\u6a21\u578b\u6210\u4e3a\u534f\u7a0b\uff08\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u6709\u5bf9\u534f\u7a0b\u7684\u652f\u6301\uff09\uff0c\u6709\u4e86\u534f\u7a0b\u7684\u652f\u6301\uff0c\u5c31\u53ef\u4ee5\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7f16\u5199\u9ad8\u6548\u7684\u591a\u4efb\u52a1\u7a0b\u5e8f\u3002\u540e\u7eed\u63a2\u8ba8\u534f\u7a0b\uff08\u5b9e\u8df5\u4e2d\u771f\u6b63\u7528\u5f97\u591a\u7684\u4e1c\u897f\uff09\u3002 \u534f\u7a0b\uff1aTODO\u3002 - \u5bf9\u4e8e\u591a\u7ebf\u7a0b\u5e94\u7528\uff0cCPU\u901a\u8fc7\u5207\u7247\u7684\u65b9\u5f0f\u6765\u5207\u6362\u7ebf\u7a0b\u95f4\u7684\u6267\u884c\uff0c\u7ebf\u7a0b\u5207\u6362\u65f6\u9700\u8981\u8017\u65f6\u3002\u534f\u7a0b\uff0c\u5219\u53ea\u4f7f\u7528\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5206\u89e3\u4e00\u4e2a\u7ebf\u7a0b\u6210\u4e3a\u591a\u4e2a\u201c\u5fae\u7ebf\u7a0b\u201d\uff0c\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u89c4\u5b9a\u67d0\u4e2a\u4ee3\u7801\u5757\u7684\u6267\u884c\u987a\u5e8f\u3002 - \u9002\u7528\u573a\u666f\uff1a\u5f53\u7a0b\u5e8f\u4e2d\u5b58\u5728\u5927\u91cf\u4e0d\u9700\u8981CPU\u7684\u64cd\u4f5c\u65f6\uff08IO\uff09 \u5e38\u7528\u7b2c\u4e09\u65b9\u6a21\u5757 gevent \u548c greenlet \uff0c\u524d\u8005\u662f\u540e\u8005\u7684\u5c01\u88c5\uff0c\u5e38\u7528\u524d\u8005\u3002 \u5206\u5e03\u5f0f\u8fdb\u7a0b\uff1a - \u521b\u5efa\u591a\u4efb\u52a1\u7a0b\u5e8f\u65f6\uff0c\u5e94\u8be5\u9996\u9009\u591a\u8fdb\u7a0b\uff0c\u591a\u8fdb\u7a0b\u66f4\u7a33\u5b9a\uff0c\u800c\u4e14\u591a\u8fdb\u7a0b\u53ef\u4ee5\u90e8\u7f72\u5230\u4e0d\u540c\u7684\u673a\u5668\u4e0a\uff0c\u800c\u591a\u7ebf\u7a0b\u6700\u591a\u53ea\u80fd\u90e8\u7f72\u5230\u540c\u4e00\u673a\u5668\u7684\u591a\u4e2aCPU\u4e0a\u3002\u4f55\u51b5CPython\u7684\u591a\u7ebf\u7a0b\u4e0d\u80fd\u5e76\u884c\u3002 - Python\u7684 multiprocessing \u4e0d\u4ec5\u652f\u6301\u591a\u7ebf\u7a0b\uff0c\u5176\u4e2d\u7684\u5b50\u6a21\u5757 managers \u8fd8\u652f\u6301\u628a\u591a\u8fdb\u7a0b\u5206\u5e03\u5230\u591a\u53f0\u673a\u5668\u4e0a\uff0c\u4e00\u4e2a\u670d\u52a1\u8fdb\u7a0b\u4f5c\u4e3a\u8c03\u5ea6\u8005\uff0c\u4f9d\u9760\u7f51\u7edc\u901a\u4fe1\u5c06\u4efb\u52a1\u5206\u5e03\u5230\u5176\u4ed6\u591a\u4e2a\u8fdb\u7a0b\u3002\u5c01\u88c5\u5f88\u597d\uff0c\u4e0d\u5fc5\u4e86\u89e3\u7f51\u7edc\u901a\u4fe1\u7684\u7ec6\u8282\u3002 - \u4f8b\u5b50\uff1a\u901a\u8fc7 Queue \u901a\u4fe1\uff0c\u591a\u8fdb\u7a0b\uff0c\u53d1\u9001\u4efb\u52a1\u7684\u8fdb\u7a0b\u548c\u5904\u7406\u4efb\u52a1\u7684\u8fdb\u7a0b\u5206\u5e03\u5230\u4e0d\u540c\u673a\u5668\u4e0a\u3002\u901a\u8fc7 managers \u6a21\u5757\u628a Queue \u901a\u8fc7\u7f51\u7edc\u66b4\u9732\u51fa\u53bb\uff0c\u5c31\u53ef\u4ee5\u8ba9\u5176\u4ed6\u673a\u5668\u7684\u8fdb\u7a0b\u8bbf\u95ee Queue \u4e86\u3002 - \u4e3b\u8fdb\u7a0b\uff1a # -*- coding: utf-8 -*- # TaskMaster.py # distributed multi process, task manager import random, time, queue from multiprocessing.managers import BaseManager # queue that send tasks task_queue = queue.Queue() # queue that receive tasks result_queue = queue.Queue() class QueueManager(BaseManager): pass def get_task_q(): return task_queue def get_result_q(): return result_queue if __name__ == '__main__': # register two queues to network QueueManager.register('get_task_queue', callable=get_task_q) QueueManager.register('get_result_queue', callable=get_result_q) # bind to port 5000, authentication code abc manager = QueueManager(address=('127.0.0.1', 5000), authkey=b'abc') # start the manager manager.start() # get Queue object through network task = manager.get_task_queue() result = manager.get_result_queue() # put some tasks to task queue for i in range(10): n = random.randint(0, 10000) print(f\"Put task {n}\") task.put(n) # read result from result queue print(\"Try get results...\") for i in range(10): try: r = result.get(timeout=10) print(f\"Result : {r}\") except queue.Empty: print(\"The queue is empty...\") # shudown manager manager.shutdown() print(\"Master exit.\") \u5de5\u4f5c\u8fdb\u7a0b\uff1b # -*- coding: utf-8 -*- # TaskWorker.py # distributed multi process, task wroker import time, sys, queue from multiprocessing.managers import BaseManager class QueueManager(BaseManager): pass if __name__ == '__main__': QueueManager.register('get_task_queue') QueueManager.register('get_result_queue') server_addr = \"127.0.0.1\" print(f\"Connect to server {server_addr}...\") m = QueueManager(address=(server_addr, 5000), authkey=b'abc') # connect to server m.connect() # get Queue from network task = m.get_task_queue() result = m.get_result_queue() # get task from task queue, calculate and put result to result queue for i in range(10): try: n = task.get(timeout=1) print(f\"Run task {n} * {n}...\") r = f\"{n} * {n} = {n * n}\" time.sleep(1) result.put(r) except queue.Empty: print(\"task queue is empty.\") # end wrok process print(\"Worker exit.\") \u52a0\u4e86\u591a\u4f59\u7684\u5faa\u73af\u4fdd\u8bc15\u6b21\u4efb\u52a1\u80fd\u6267\u884c\u5b8c\uff0c\u6267\u884c\u65f6\u5728\u4e24\u4e2a\u7ec8\u7aef\u4e2d\u5206\u522b\u4f9d\u6b21\u6267\u884c python TaskMaster.py \u548c python TaskWorker.py \u3002\u5c06\u4f1a\u901a\u8fc7\u672c\u673a\u76845000\u7aef\u53e3\u8fdb\u884c\u7f51\u8def\u4ea4\u4e92\uff0c\u5b8c\u6210\u4efb\u52a1\u5206\u53d1\u3001\u6267\u884c\u548c\u7ed3\u679c\u83b7\u53d6\u3002\u4fee\u6539\u5730\u5740\u4e3a\u5c40\u57df\u7f51IP\u540e\u8fd8\u53ef\u4ee5\u5728\u865a\u62df\u673a/WSL\u548c\u672c\u673a\u4e2d\u6267\u884c\u3002 \u6ca1\u6709\u5bf9\u7f51\u7edc\u8fde\u63a5\u662f\u5426\u6210\u529f\u505a\u68c0\u67e5\uff0c\u9700\u8981\u5728\u4e3b\u7ebf\u7a0b\u8fde\u63a5\u8fd8\u5b58\u5728\u65f6\u6267\u884c\u5de5\u4f5c\u7ebf\u7a0b\u3002 QueueManager \u7ed9\u4efb\u52a1\u548c\u7ed3\u679c\u961f\u5217\u90fd\u6ce8\u518c\u4e86\u7f51\u7edc\u8c03\u7528\u63a5\u53e3\uff0c\u5728\u5de5\u4f5c\u8fdb\u7a0b\u4e2d\u8c03\u7528\u5c31\u80fd\u591f\u83b7\u53d6\u5230\u4e86\u3002 authkey \u662f\u6821\u9a8c\u7801\uff0c\u4fdd\u8bc1\u4e24\u53f0\u673a\u5668\u901a\u4fe1\u4e0d\u53d7\u5e72\u6270\u3002\u5982\u679c\u4e0d\u4e00\u81f4\uff0c\u7f51\u7edc\u8fde\u63a5\u4f1a\u5931\u8d25\u3002 \u603b\u7ed3\uff1a Python\u7684\u5206\u5e03\u5f0f\u8fdb\u7a0b\u63a5\u53e3\u7b80\u5355\u3001\u5c01\u88c5\u826f\u597d\uff0c\u9002\u5408\u628a\u7e41\u91cd\u4efb\u52a1\u5206\u5e03\u5230\u591a\u53f0\u673a\u5668\u3002 \u6ce8\u610f Queue \u7684\u4f5c\u7528\u662f\u7528\u6765\u4f20\u9012\u548c\u63a5\u6536\u7ed3\u679c\uff0c\u6bcf\u4e2a\u4efb\u52a1\u7684\u63cf\u8ff0\u5e94\u8be5\u5c3d\u91cf\u5c0f\u3002\u6bd4\u5982\u53d1\u9001\u4e00\u4e2a\u5904\u7406\u65e5\u5fd7\u6587\u4ef6\u7684\u4efb\u52a1\uff0c\u5c31\u4e0d\u8981\u53d1\u9001\u51e0\u767e\u5146\u7684\u65e5\u5fd7\u6587\u4ef6\u672c\u8eab\uff0c\u800c\u662f\u53d1\u9001\u65e5\u5fd7\u6587\u4ef6\u5b58\u653e\u7684\u5b8c\u6574\u8def\u5f84\uff0c\u7531Worker\u8fdb\u7a0b\u518d\u53bb\u5171\u4eab\u7684\u78c1\u76d8\u4e0a\u8bfb\u53d6\u6587\u4ef6\u3002 \u9605\u8bfb\uff1a - \u641e\u5b9apython\u591a\u7ebf\u7a0b\u548c\u591a\u8fdb\u7a0b","title":"\u5e76\u53d1\u7f16\u7a0b"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_12","text":"\u6b63\u5219\u8868\u8fbe\u5f0f\uff1a - \u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u4e00\u79cd\u7528\u6765\u5339\u914d\u5b57\u7b26\u4e32\u7684\u5f3a\u6709\u529b\u7684\u6b66\u5668\u3002\u5b83\u7684\u8bbe\u8ba1\u601d\u60f3\u662f\u7528\u4e00\u79cd\u63cf\u8ff0\u6027\u7684\u8bed\u8a00\u6765\u7ed9\u5b57\u7b26\u4e32\u5b9a\u4e49\u4e00\u4e2a\u89c4\u5219\uff0c\u51e1\u662f\u7b26\u5408\u89c4\u5219\u7684\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u5c31\u8ba4\u4e3a\u5b83\u201c\u5339\u914d\u201d\u4e86\uff0c\u5426\u5219\uff0c\u8be5\u5b57\u7b26\u4e32\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u3002 - \u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u662f\u5408\u6cd5\u7684\u6b63\u5219\u7684\u65b9\u6cd5\uff0c\u521b\u5efa\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u8be5\u6b63\u5219\u8868\u8fbe\u5f0f\u53bb\u5339\u914d\u7528\u6237\u8f93\u5165\u3002 \u89c4\u5219\uff1a - \u6b63\u5219\u8868\u8fbe\u5f0f\u4e5f\u662f\u7528\u5b57\u7b26\u4e32\u6765\u8868\u793a\u7684\uff0c\u8868\u793a\u89c4\u5219\uff1a - \u76f4\u63a5\u7ed9\u51fa\u5b57\u7b26\u5219\u7cbe\u786e\u5339\u914d\u5b57\u7b26\u3002 - \\d \u5339\u914d\u6570\u5b57\u3002 - \\w \u5339\u914d\u6570\u5b57\u6216\u8005\u5b57\u6bcd\u3002 - \\b \u5339\u914d\u5355\u8bcd\u7684\u5f00\u59cb\u6216\u8005\u7ed3\u675f\u3002 - \\s \u5339\u914d\u7a7a\u767d\u7b26\uff0cTab\u7a7a\u683c\u7b49\u3002 - \u4e0a\u9762\u51e0\u4e2a\u7684\u5927\u5199\u7248\u672c\u8868\u53cd\u4e49\uff1a \\D \\W \\B \\S \u3002 - . \u5339\u914d\u9664\u6362\u884c\u7b26\u4ee5\u5916\u7684\u4efb\u610f\u5b57\u7b26\u3002 - \u53d8\u957f\u5b57\u7b26\uff1a\u8ddf\u5728\u4e00\u4e2a\u89c4\u5219\u540e\u3002 - * \u5339\u914d\u4efb\u610f\u5b57\u7b26\uff0c\u5305\u62ec0\u4e2a\u3002 - + \u5339\u914d\u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26\u3002 - ? \u5339\u914d0\u4e2a\u62161\u4e2a\u5b57\u7b26\u3002 - {m} \u5339\u914dm\u4e2a\u5b57\u7b26\u3002 - {n,} \u5339\u914dn\u4e2a\u6216\u66f4\u591a\u4e2a\u5b57\u7b26\u3002 - {n,m} \u5339\u914dn\u5230m\u4e2a\uff08\u5305\u62ecm\uff09\u5b57\u7b26\u3002 - \u7279\u6b8a\u5b57\u7b26 .*+?,;-\\_{}()|^$ \u9700\u8981\u4f7f\u7528 \\ \u8f6c\u4e49\u3002 - \u8868\u793a\u8303\u56f4\uff1a [] \uff0c\u5176\u4e2d\u53ef\u4ee5\u4f7f\u7528 - \u524d\u540e\u8ddf\u6570\u5b57\u6216\u5b57\u6bcd\uff0c\u8868\u793a\u67d0\u4e2a\u5b57\u7b26\u5230\u67d0\u4e2a\u5b57\u7b26\u3002 - \u5982 [a-zA-Z0-9_] \u5339\u914d\u6570\u5b57\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\u3002 [a-z0-9A-Z_] \u7b49\u4ef7\u4e8e \\w - \u5339\u914d\u4e00\u4e2a\u8303\u56f4\u4e2d\u7684\u67d0\u5b57\u7b26\u65f6\u524d\u9762\u52a0 ^ \u8868\u53cd\u4e49\uff1a [^a-z] \u5339\u914d\u6240\u6709\u975e\u5c0f\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u3002 - \u5339\u914d\u4e24\u8005\u4e2d\u4e00\u8005 | \uff0c A|B \u3002 - ^ \u8868\u884c\u5f00\u5934\uff0c ^\\d \u8868\u793a\u4ee5\u6570\u5b57\u5f00\u5934\u3002 - $ \u8868\u884c\u7ed3\u675f\uff0c \\d$ \u8868\u793a\u4ee5\u6570\u5b57\u7ed3\u675f\u3002\u5339\u914d\u4e00\u6574\u884c\u53ef\u4ee5\u7528 ^ \u5f00\u5934\uff0c $ \u7ed3\u5c3e\u3002 Python\u4e2d\u7684\u6b63\u5219\u8868\u793a\u5f0f\uff1a - Python\u5b57\u7b26\u4e32\u4e2d\u672c\u8eab\u5b58\u5728\u8f6c\u4e49\uff0c\u800c\u6b63\u5219\u5b57\u7b26\u4e32\u67d0\u4e9b\u5b57\u7b26\u4e5f\u5b58\u5728\u8f6c\u4e49\uff0c\u4e3a\u4e86\u907f\u514d\u6df7\u6dc6\uff0c\u5b9e\u8df5\u4e2d\u5efa\u8bae\u5168\u90e8\u4f7f\u7528 r \u524d\u7f00\u539f\u59cb\u5b57\u7b26\u4e32\u8868\u793a\u6b63\u5219\u5b57\u7b26\u4e32\u3002\u5982\u6b64\u4fbf\u53ea\u9700\u8981\u8003\u8651 '\" \u7684\u8f6c\u4e49\u4e86\u3002 - import re - re.match(pattern, string) \u5339\u914d\u6210\u529f\u5219\u8fd4\u56de\u4e00\u4e2a Match \u5bf9\u8c61\uff0c\u5931\u8d25\u8fd4\u56de None \u3002 - re.split() \u53ef\u4ee5\u5207\u5206\u5b57\u7b26\u4e32\uff0c - \u9664\u4e86\u7b80\u5355\u5730\u5224\u65ad\u662f\u5426\u5339\u914d\u4e4b\u5916\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u8fd8\u6709\u63d0\u53d6\u5b50\u4e32\u7684\u5f3a\u5927\u529f\u80fd\u3002\u7528 () \u8868\u793a\u7684\u5c31\u662f\u8981\u63d0\u53d6\u7684\u5206\u7ec4\uff08Group\uff09\u3002\u7528 re.Match.group(index) \u65b9\u6cd5\u3002 group(0) \u6c38\u8fdc\u662f\u539f\u59cb\u5b57\u7b26\u4e32\uff0c group(1) \u3001 group(2) \u3001...\u8868\u793a\u7b2c1\u30012\u3001...\u4e2a\u5b50\u4e32\u3002 - \u6b63\u5219\u5339\u914d\u9ed8\u8ba4\u662f\u8d2a\u5a6a\u5339\u914d\uff0c\u4e5f\u5c31\u662f\u5339\u914d\u5c3d\u53ef\u80fd\u591a\u7684\u5b57\u7b26\u3002\u4e3a\u4e86\u91c7\u7528\u975e\u8d2a\u5a6a\u5339\u914d\uff0c\u53ef\u4ee5\u5728\u8868\u6570\u91cf\u7684\u5b57\u7b26\u540e\u7f00\u540e\u518d\u52a0\u4e00\u4e2a ? \u3002 \u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\uff1a - \u5728Python\u4e2d\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\uff0c\u5185\u90e8\u4f1a\u5148\u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5982\u679c\u6b63\u5219\u8868\u8fbe\u5f0f\u672c\u8eab\u4e0d\u5408\u6cd5\u4f1a\u62a5\u9519\uff0c\u7136\u540e\u518d\u7528\u7f16\u8bd1\u540e\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u53bb\u5339\u914d\u5b57\u7b26\u4e32\u3002 - \u5982\u679c\u8981\u5339\u914d\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u591a\u6b21\uff0c\u53ef\u4ee5\u7f16\u8bd1\u540e\u518d\u53bb\u5339\u914d\uff0c\u63d0\u5347\u6267\u884c\u6548\u7387\u3002 - \u4f7f\u7528 re.compile(pattern) \u7f16\u8bd1\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a re.Pattern \u5bf9\u8c61\uff0c\u4f7f\u7528\u8fd9\u4e2a\u5bf9\u8c61\u53bb\u5339\u914d\u5b57\u7b26\u4e32\u4e0d\u9700\u8981\u518d\u4f20\u5165\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u66f4\u591a\u6b63\u5219\u8868\u8fbe\u5f0f\u5185\u5bb9\uff1a - \u6355\u83b7\u3001\u96f6\u5bbd\u65ad\u8a00\u3001\u8d1f\u5411\u96f6\u5bbd\u65ad\u8a00\u3001\u6ce8\u91ca\u3001\u5e73\u8861\u7ec4\u3001\u9012\u5f52\u5339\u914d\u7b49\u6709\u673a\u4f1a\u63a5\u89e6\u5230\u518d\u8be6\u7ec6\u4e86\u89e3\u3002","title":"\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_13","text":"datetime - from datetime import datetime \uff0c\u524d\u8005\u662f\u6a21\u5757\uff0c\u540e\u8005\u662f\u7c7b\u8868\u793a\u65e5\u671f\u548c\u65f6\u95f4\u3002 - \u5f53\u524d\u65f6\u533a\u65f6\u95f4 datetime.now() \uff0c\u6807\u51c6\u65f6\u533a\u65f6\u95f4 datetime.utcnow() \u3002 - \u6784\u9020\u6307\u5b9a\u65e5\u671f\u65f6\u95f4\uff1a datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]]) - \u65f6\u95f4\u6233\uff1a datetimeInstance.timestamp() \uff0c\u4eceUTC+00:00\u65f6\u533a\u76841970\u5e741\u67081\u65e500:00:00\u65f6\u523b\uff08Epoch Time\uff09\u5230\u73b0\u5728\u7684\u65f6\u523b\u7684\u79d2\u6570\u6210\u4e3a\u65f6\u95f4\u6233\uff0c\u5355\u4f4d\u662f\u79d2\uff0c\u6d6e\u70b9\u6570\uff0c\u7cbe\u786e\u5230\u5fae\u5999\uff08\u5c0f\u6570\u70b9\u540e6\u4f4d\uff09\u3002\u65f6\u95f4\u6233\u548c\u65f6\u533a\u3001\u95f0\u5e74\u95f0\u79d2\u7b49\u65e0\u5173\u3002 - \u65f6\u95f4\u6233\u8f6c datetime \uff1a datetime.fromtimestamp(stamp) \uff0c\u7ed3\u679c\u662f\u672c\u5730\u65f6\u533a\u3002 - \u65f6\u95f4\u6233\u8f6cUTC\u6807\u51c6\u65f6\u533a\uff08UTC+00:00\uff09\u65f6\u95f4\uff1a datetime.utcfromtimestamp(stamp) \u3002 - \u5b57\u7b26\u4e32\u8f6c datetime \uff1a datetime.strptime(\"2021-1-1 10:00:01\", \"%Y-%m-%d %H:%M:%S\") \uff0c\u65f6\u95f4\u5b57\u7b26\u4e32\u548c\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u683c\u5f0f\u8981\u543b\u5408\uff0c\u8be6\u89c1 \u6587\u6863 \u3002\u5f97\u5230\u7684\u65f6\u95f4\u6ca1\u6709\u65f6\u533a\u4fe1\u606f\u3002 - datetime \u8f6c\u5b57\u7b26\u4e32\uff1a datetime.now().strftime('%a, %b %d %H:%M') \u3002\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u540c\u4e0a\u89c1\u6587\u6863\u3002 - \u8868\u65f6\u95f4\u95f4\u9694\u7684\u7c7b\uff1a timedelta \uff0c\u652f\u6301\u52a0\u51cf\u3001\u6b63\u8d1f\u53f7\u7edd\u5bf9\u503c\u3001\u548c timedelta \u6bd4\u8f83\uff0c\u4e0e\u6574\u6570\u505a\u4e58\u9664\u6cd5\u3002\u6784\u9020\uff1a timdelta(days, seconds, microseconds) \u3002\u4e24\u4e2a datetime \u76f8\u51cf\u4f1a\u5f97\u5230\u4e00\u4e2a timedelta \u3002 - \u65f6\u533a\u4fe1\u606f\uff1a timezone \u7c7b\u3002 - \u521b\u5efaUTC+8:00\u65f6\u533a\uff1a timezone(timedelta(hours=8)) - datetime \u6709 tzinfo \u5c5e\u6027\uff0c\u9ed8\u8ba4\u662f None \u65f6\u8868\u793a\u5f53\u524d\u65f6\u533a\u3002 - \u5f3a\u5236\u66ff\u6362\u65f6\u533a\uff1a datetimeinstance.replace(tzinfo=timezone(timedelta(hours=7))) \uff0c\u65f6\u95f4\u65e5\u671f\u4e0d\u4f1a\u53d8\uff0c\u53ea\u662f\u5f3a\u5236\u6539\u53d8\u65f6\u533a\u3002 - \u65f6\u533a\u8f6c\u6362\uff1a - astimezone(self, tz=None) \u65b9\u6cd5\u5207\u6362\u5230\u67d0\u4e00\u65f6\u533a\uff0c\u9ed8\u8ba4\u5f53\u524d\u65f6\u533a\u3002 - \u5982\u679c\u4ee5\u524d\u6ca1\u6709\u65f6\u533a\u4fe1\u606f None \uff0c\u90a3\u4e48\u5c31\u662f\u4ece\u5f53\u524d\u65f6\u533a\u8f6c\u5230\u7279\u5b9a\u65f6\u533a\u3002 - \u5173\u952e\u5728\u4e8e\u8981\u77e5\u9053\u62ff\u5230\u4e00\u4e2a datetime \u65f6\u5b83\u7684\u65f6\u533a\uff0c\u4e00\u822c\u6bd4\u5982 datetime.now() \u662f\u4e0d\u5305\u542b\u65f6\u533a\u4fe1\u606f\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7 tzinfo \u5c5e\u6027\u8bbe\u7f6e\u6216\u8005\u5148\u8c03\u7528\u4e00\u6b21\u52a0\u4e0a\u65f6\u533a\u4fe1\u606f\u3002 collections - \u547d\u540d\u5143\u7ec4\uff1a namedtuple \u51fd\u6570\uff0c\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u547d\u540d\u4e86\u7684\u5143\u7ec4\uff0c\u5143\u7d20\u4e2a\u6570\u56fa\u5b9a\uff0c\u5e76\u53ef\u4ee5\u6307\u5b9a\u5c5e\u6027\u540d\u79f0\uff0c\u9664\u4e86\u4e0b\u6807\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u540d\u79f0\u6765\u8bbf\u95ee\u5143\u7d20\u3002 Point = namedtuple('Point', ['x', 'y']) \u3002 - \u53cc\u5411\u5217\u8868\uff1a deque \uff0c\u4f7f\u7528 list \u63d2\u5165\u5220\u9664\u6548\u7387\u4e0d\u9ad8\uff0c deque \u53ef\u4ee5\u7528\u4f5c\u961f\u5217\u548c\u6808\uff0c\u63d0\u4f9b\u9ad8\u6548\u5934\u5c3e\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u3002\u65b9\u6cd5 append pop appendleft popleft \u3002 - defaultdict \uff1a\u4f7f\u7528 dict \u65f6\uff0c\u5982\u679ckey\u4e0d\u5b58\u5728\uff0c\u4f1a\u629b\u51fa KeyError \uff0c\u5982\u679c\u5e0c\u671bkey\u4e0d\u5b58\u5728\u65f6\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u503c\uff0c\u53ef\u4ee5\u7528 defaultdict \u3002 - OrderedDict \uff1a\u6709\u5e8f\u5b57\u5178\uff0c\u5143\u7d20\u4f1a\u6309\u7167key\u63d2\u5165\u987a\u5e8f\u6392\u5217\u3002 - ChainMap \uff1a\u5c06\u591a\u4e2a dict \u6709\u5e8f\u5730\u7ec4\u5408\u8d77\u6765\uff0c\u6784\u6210\u4e00\u4e2a\u903b\u8f91\u4e0a\u7684\u5b57\u5178\uff0c\u67e5\u627e\u65f6\u4f1a\u6309\u7167\u987a\u5e8f\u4f9d\u6b21\u67e5\u627e\u6bcf\u4e00\u4e2a\u5b57\u5178\uff0c\u548c\u591a\u4e2a\u5b57\u5178\u53d6\u5e76\u96c6\u6709\u533a\u522b\u3002\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u5c42\u6b21\u4f18\u5148\u7ea7\u67e5\u627e\uff0c\u6bd4\u5982\u5e94\u7528\u7a0b\u5e8f\u5f80\u5f80\u90fd\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u53c2\u6570\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u4f20\u5165\uff0c\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u4f20\u5165\uff0c\u8fd8\u53ef\u4ee5\u6709\u9ed8\u8ba4\u53c2\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u7528ChainMap\u5b9e\u73b0\u53c2\u6570\u7684\u4f18\u5148\u7ea7\u67e5\u627e\u3002 - Counter \uff1a\u8ba1\u6570\u5668\uff0c dict \u5b50\u7c7b\uff0cvalue\u7c7b\u578b\u662f\u6574\u6570\uff0c\u7528\u6765\u8ba1\u6570\u3002 - Python\u547d\u540d\u611f\u89c9\u6709\u70b9\u6df7\u4e71\uff0c\u6709\u65f6\u5927\u9a7c\u5cf0\u6709\u65f6\u5168\u5c0f\u5199\u3002 base64 - Base64\u7f16\u7801\u662f\u4e00\u79cd\u752864\u4e2a\u5b57\u7b26\u6765\u7f16\u7801\u4efb\u610f\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u65b9\u6cd5\u3002 - \u4f17\u6240\u5468\u77e5\u6587\u672c\u7f16\u8f91\u5668\u65e0\u6cd5\u5904\u7406\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u56e0\u4e3a\u7f16\u7801\u4e0d\u4e00\u81f4\uff0c\u7528ASCII\u7684\u8bdd\u53ef\u80fd\u5b58\u5728\u975eASCII\u7684\u5b57\u7b26\uff0c\u5176\u4ed6\u7f16\u7801\u5b57\u7b26\u7f16\u7801\u4e5f\u4e0d\u4e00\u5b9a\u7b26\u5408\u3002\u4e3a\u4e86\u80fd\u7528\u6587\u672c\u5b57\u7b26\u4e32\u6765\u8868\u793a\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u5c31\u53ef\u4ee5\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u7528Base64\u8fdb\u884c\u7f16\u7801\u3002 - \u539f\u7406\uff1a\u51c6\u590764\u4e2a\u5b57\u7b26\u7684\u6570\u7ec4\uff0c\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\u6309\u7167\u6bcf6\u4f4d\u7f16\u7801\u4e3a\u4e00\u4e2a8\u4f4d\u7684\u5b57\u7b26\uff08\u8fd96\u4f4d\u7684\u503c\u4f5c\u4e3a\u6570\u7ec4\u4e0b\u6807\u7684\u6570\u7ec4\u5143\u7d20\uff09\uff0c\u6bcf3\u4e2a\u5b57\u8282\u5c31\u4f1a\u7f16\u7801\u4e3a4\u4e2a\u5b57\u8282\u7684\u5b57\u7b26\u4e32\uff0c\u4f53\u79ef\u81a8\u80c033%\u3002\u5982\u679c\u4e8c\u8fdb\u5236\u6570\u636e\u957f\u5ea6\u4e0d\u662f3\u4e2a\u500d\u6570\uff0c\u7528 \\x00 \u5b57\u8282\u5728\u4e8c\u8fdb\u5236\u6570\u636e\u672b\u5c3e\u8865\u8db3\uff0c\u518d\u5728\u7f16\u7801\u672b\u5c3e\u6dfb\u52a0 = \u6216 == \u8868\u793a\u8865\u4e86\u591a\u5c11\u5b57\u8282\u3002 - \u8fd9\u4e2a\u5b57\u7b26\u6570\u7ec4\u662f\uff1a ['A', 'B', ..., 'Z', 'a', 'b', ..., 'z', '0', ..., '9', '+', '/'] \u5b57\u6bcd\u6570\u5b57\u52a0\u4e0a\u52a0\u51cf\u53f7\u517164\u4e2a\u5b57\u7b26\u3002 - \u7f16\u7801\u89e3\u7801\u90fd\u975e\u5e38\u7b80\u5355\uff0c\u7f16\u7801\u5c31\u67e5\u8868\u66ff\u6362\u5c31\u884c\uff0c\u89e3\u7801\u5219\u53cd\u63a8\u7d22\u5f15\uff0c\u6062\u590d\u4e8c\u8fdb\u5236\u6570\u636e\u5373\u53ef\u3002 - Python\u5185\u7f6e base64 \u6a21\u5757\u63d0\u4f9bBase64\u7f16\u89e3\u7801\u529f\u80fd\u3002 - \u7f16\u7801\uff1a base64.b64encode(b'helloworld') - \u89e3\u7801\uff1a base64.b64decode(b'aGVsbG93b3JsZA==') - \u7f16\u89e3\u7801\u662f\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u957f\u5ea6\u4e3a2\u7684\u5b57\u8282\u5e8f\u5217\u5173\u952e\u5b57\u53c2\u6570 altchars \u7528\u6765\u66ff\u6362 +/ \u4ee5\u83b7\u5f97\u5408\u6cd5\u7684url\u6216\u8005\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\u5b57\u7b26\u4e32\u3002 - \u5185\u7f6e\u7684\u7528 - \u548c _ \u6765\u66ff\u6362 +/ \u7684\u7f16\u89e3\u7801\u65b9\u6cd5\uff1a urlsafe_b64encode urlsafe_b64decode \u3002 - \u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e4964\u4e2a\u5b57\u7b26\u7684\u6392\u5217\u987a\u5e8f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u81ea\u5b9a\u4e49Base64\u7f16\u7801\uff0c\u4e0d\u8fc7\u901a\u5e38\u60c5\u51b5\u4e0b\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u3002 - Base64\u53ef\u4ee5\u7528\u4ee5\u7f16\u89e3\u7801\uff0c\u4e0d\u80fd\u7528\u4e8e\u52a0\u5bc6\uff0c\u5373\u4f7f\u4f7f\u7528\u81ea\u5b9a\u4e49\u7f16\u7801\u8868\uff08\u592a\u8fc7\u539f\u59cb\uff0c\u4e0d\u5b89\u5168\uff09\u3002 - Base64\u9002\u7528\u4e8e\u5c0f\u6bb5\u5185\u5bb9\u7684\u7f16\u7801\uff0c\u6bd4\u5982\u6570\u5b57\u8bc1\u4e66\u7b7e\u540d\u3001Cookie\u7684\u5185\u5bb9\u7b49\u3002 - \u4f46 = \u7528\u5728URL\u3001Cookie\u91cc\u9762\u4f1a\u9020\u6210\u6b67\u4e49\uff0c\u6240\u4ee5\uff0c\u5f88\u591aBase64\u7f16\u7801\u540e\u4f1a\u628a = \u53bb\u6389\u3002\u56e0\u4e3aBase64\u662f\u628a3\u5b57\u8282\u53d84\u5b57\u8282\uff0c\u6240\u4ee5\u89e3\u7801\u524d\u53ea\u9700\u8981\u5728Base64\u5b57\u7b26\u4e32\u540e\u52a0\u4e0a = \u4f7f\u957f\u5ea6\u53d8\u62104\u4e2a\u6574\u6570\u500d\u5373\u53ef\u3002 struct - struct \u6a21\u5757\u63d0\u4f9b bytes \u548c\u5176\u4ed6\u4e8c\u8fdb\u5236\u6570\u636e\u7c7b\u578b\u6bd4\u5982\u6574\u6570\u6d6e\u70b9\u6570\u4e4b\u7c7b\u7684\u8f6c\u6362\u3002 - import struct \u3002 - strcut.pack(format, *args) \u5c06\u591a\u4e2a\u6570\u636e\u6253\u5305\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5e8f\u5217\uff0c\u683c\u5f0f\u5b57\u7b26\u89c1 \u6587\u6863 \uff0c\u6bd4\u5982 >I \u5c31\u8868\u793a\u7528\u5927\u7aef\u5e8f\u7f16\u7801\u4e00\u4e2a4\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570\u3002 - Python\u4e0d\u9002\u5408\u7f16\u5199\u5e95\u5c42\u64cd\u4f5c\u5b57\u8282\u6d41\u7684\u4ee3\u7801\uff0c\u4f46\u5728\u5bf9\u6027\u80fd\u8981\u6c42\u4e0d\u9ad8\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u4f7f\u7528 struct \u3002 - \u89e3\u6790\u4e8c\u8fdb\u5236\u5e8f\u5217\uff1a struct.unpack(format, bytes) \uff0c\u5f97\u5230\u5143\u7ec4\u3002 - \u4f7f\u7528\u573a\u666f\uff1a\u4e00\u4e9b\u7279\u5b9a\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\uff08\u6bd4\u5982\u56fe\u7247BMP\u3001JPG\u7b49\uff09\u90fd\u4f1a\u6709\u7279\u5b9a\u7ed3\u6784\uff0c\u6b64\u65f6\u8bfb\u5165\u4e8c\u8fdb\u5236\u6d41\uff0c\u7136\u540e\u4f7f\u7528 struct \u89e3\u6790\u6216\u8005\u6253\u5305\u6587\u4ef6\u5934\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u3002 hashlib - hashlib \u63d0\u4f9b\u4e86\u5e38\u89c1\u7684\u6458\u8981\u7b97\u6cd5\uff0c\u6bd4\u5982MD5\uff0cSHA1\u7b49\u3002 - \u6458\u8981\u7b97\u6cd5\u7684\u76ee\u7684\u4e3b\u8981\u662f\u901a\u8fc7\u6458\u8981\u51fd\u6570\u5bf9\u4efb\u610f\u957f\u5ea6\u7684\u6570\u636e\u8ba1\u7b97\u51fa\u56fa\u5b9a\u957f\u5ea6\u7684\u6458\u8981 digest \uff0c\u53ef\u4ee5\u7528\u4ee5\u786e\u8ba4\u539f\u59cb\u6570\u636e\u662f\u5426\u88ab\u4eba\u7be1\u6539\u8fc7\u3002 import hashlib md5 = hashlib.md5() md5.update('how to use md5 in '.encode('utf-8')) md5.update('python hashlib?'.encode('utf-8')) print(md5.hexdigest()) \u5176\u4ed6\u6bd4\u5982 sha1 sha256 sha512 \u7528\u6cd5\u7c7b\u4f3c\uff0c\u5bf9\u8f83\u957f\u6570\u636e\u505a\u54c8\u5e0c\u65f6\u53ef\u4ee5\u5206\u591a\u6b21\u4f20\u5165 update \uff0c\u548c\u4e00\u6b21\u4f20\u5165\u8ba1\u7b97\u7ed3\u679c\u4e00\u81f4\u3002 MD5\u751f\u6210128\u4f4d\u7684\u5b57\u8282\uff0c\u901a\u5e38\u7528\u957f\u5ea632\u768416\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793a\u3002SHA1\u751f\u6210160\u4f4d\u7684\u5b57\u8282\uff0c\u901a\u5e38\u7528\u957f\u5ea640\u7684\u5b57\u7b26\u4e32\u8868\u793a\u3002\u6bd4SHA1\u66f4\u5b89\u5168\u7684\u7b97\u6cd5\u662fSHA256\u548cSHA512\uff0c\u5206\u522b\u751f\u6210256\u548c512\u4f4d\uff0c\u6458\u8981\u957f\u5ea6\u8d8a\u957f\u8d8a\u5b89\u5168\uff0c\u8ba1\u7b97\u8d77\u6765\u8d8a\u6162\u3002 \u901a\u5e38\u5728\u5f88\u591a\u7f51\u7ad9\u4e0b\u8f7d\u6587\u4ef6\u65f6\u90fd\u4f1a\u7ed9\u4e00\u4e2aSHA256\u68c0\u9a8c\u7801\uff0c\u53ef\u4ee5\u62ff\u5230\u6587\u4ef6\u540e\u8ba1\u7b97\u6587\u4ef6\u7684SHA256\u662f\u5426\u543b\u5408\u4ee5\u786e\u4fdd\u6587\u4ef6\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u88ab\u7be1\u6539\u3002 \u5e94\u7528\uff1a\u5728\u4fdd\u5b58\u7528\u6237\u5bc6\u7801\u65f6\u4fdd\u5b58\u7ecf\u8fc7\u6458\u8981\u4e4b\u540e\u7684\u54c8\u5e0c\uff0c\u800c\u4e0d\u662f\u539f\u59cb\u7684\u5bc6\u7801\u5b57\u7b26\u4e32\uff0c\u7528\u6237\u8f93\u5165\u5bc6\u7801\u540e\u8ba1\u7b97\u51fa\u54c8\u5e0c\u7136\u540e\u5bf9\u6bd4\u54c8\u5e0c\uff0c\u8fd9\u6837\u5373\u4f7f\u8fd0\u7ef4\u4eba\u5458\u80fd\u8bbf\u95ee\u6570\u636e\u5e93\u3001\u6570\u636e\u5e93\u88ab\u9ed1\u5ba2\u653b\u51fb\u7a83\u53d6\uff0c\u4e5f\u65e0\u6cd5\u77e5\u9053\u7528\u6237\u8f93\u5165\u7684\u5bc6\u7801\u660e\u6587\uff0c\u4ece\u800c\u9632\u6b62\u649e\u5e93\u7b49\u653b\u51fb\u624b\u6bb5\u3002\u5f53\u7136\u8fd9\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4e5f\u662f\u53d6\u51b3\u4e8e\u6458\u8981\u7b97\u6cd5\u672c\u8eab\u662f\u5426\u80fd\u591f\u88ab\u7834\u89e3\u7684\uff0c\u8fd9\u5c31\u662f\u53e6\u4e00\u4e2a\u95ee\u9898\u4e86\u3002\u6458\u8981\u5e76\u4e0d\u4e00\u5b9a\u5c31\u662f\u552f\u4e00\u7684\uff0c\u505a\u54c8\u5e0c\u90a3\u5f88\u663e\u7136\u5bf9\u4e0d\u540c\u6570\u636e\u505a\u54c8\u5e0c\u5f97\u5230\u7684\u54c8\u5e0c\u503c\u53ef\u80fd\u662f\u76f8\u540c\u7684\uff0c\u53ea\u662f\u5728\u5b9e\u8df5\u4e2d\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u6982\u7387\u662f\u975e\u5e38\u975e\u5e38\u5c0f\u7684\u3002 \u91c7\u7528MD5\u7b49\u54c8\u5e0c\u5b58\u50a8\u5bc6\u7801\u662f\u5426\u4e00\u5b9a\u5b89\u5168\u5462\uff1f\u4e5f\u4e0d\u4e00\u5b9a\uff0c\u56e0\u4e3a\u7528\u6237\u6781\u6709\u53ef\u80fd\u4f7f\u7528\u5f88\u7b80\u5355\u7684\u5bc6\u7801\u6bd4\u5982123456\uff0cqwerty\u7b49\u8fd9\u79cd\u5e38\u7528\u5bc6\u7801\uff0c\u4ece\u54c8\u5e0c\u503c\u53cd\u63a8\u5bc6\u6587\u662f\u975e\u5e38\u8d39\u52b2\u7684\uff0c\u4f46\u9ed1\u5ba2\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5e38\u89c1\u5bc6\u7801\u5230\u54c8\u5e0c\u503c\u7684\u6570\u636e\u5e93\uff08\u5f69\u8679\u8868\uff09\uff0c\u5982\u679c\u7528\u6237\u5bc6\u7801\u5f88\u7b80\u5355\u5728\u5e93\u4e2d\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u53cd\u63a8\u51fa\u5bc6\u7801\u3002\u6240\u4ee5\u4f5c\u4e3a\u7528\u6237\u6765\u8bf4\uff0c\u4e3a\u4e86\u9632\u6b62\u8fd9\u79cd\u653b\u51fb\uff0c\u4e00\u822c\u4e0d\u8981\u4f7f\u7528\u592a\u7b80\u5355\u7684\u5bc6\u7801\u3002 \u4e3a\u4e86\u4fdd\u62a4\u8f83\u4e3a\u7b80\u5355\u7684\u5bc6\u7801\u88ab\u53cd\u63a8\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u539f\u59cb\u5bc6\u6587\u5b57\u7b26\u4e32\u52a0\u4e0a\u4e00\u4e2a\u590d\u6742\u5b57\u7b26\u4e32\u4e4b\u540e\u518d\u505a\u54c8\u5e0c\uff0c\u4fd7\u79f0\u201c\u52a0\u76d0\u201d\u3002\u7ecf\u8fc7\u52a0\u76d0\u4e4b\u540e\uff0c\u53ea\u8981Salt\u4e0d\u88ab\u9ed1\u5ba2\u77e5\u9053\uff0c\u5c31\u65e0\u6cd5\u63a8\u51fa\u539f\u59cb\u5bc6\u6587\u3002\u751a\u81f3\u8ba1\u7b97\u54c8\u5e0c\u65f6\u5c06\u5bc6\u7801\u52a0\u4e0a\u7528\u6237\u540d\u548c\u76d0\u4e00\u8d77\u8ba1\u7b97\u3002 \u54c8\u5e0c\u7b97\u6cd5\u65e0\u6cd5\u7528\u4e8e\u52a0\u5bc6\uff0c\u56e0\u4e3a\u4fe1\u606f\u662f\u6709\u635f\u7684\u4e14\u65e0\u6cd5\u53cd\u63a8\u660e\u6587\uff0c\u53ea\u80fd\u7528\u4e8e\u9632\u7be1\u6539\u3002\u5b83\u7684\u5355\u5411\u8ba1\u7b97\u7279\u6027\u51b3\u5b9a\u4e86\u53ef\u4ee5\u5728\u4e0d\u5b58\u50a8\u660e\u6587\u53e3\u4ee4\u7684\u60c5\u51b5\u4e0b\u9a8c\u8bc1\u7528\u6237\u53e3\u4ee4\u3002 hmac - \u4e0a\u8ff0\u8ba1\u7b97\u54c8\u5e0c\u65f6\u5982\u679cSalt\u662f\u6211\u4eec\u968f\u673a\u751f\u6210\u7684\uff0c\u90a3\u4e48\u8ba1\u7b97MD5\u901a\u5e38\u91c7\u7528 md5(message+salt) \uff0c\u5982\u679c\u628a\u76d0\u770b\u505a\u53e3\u4ee4\uff0c\u8ba1\u7b97\u6d88\u606f\u7684\u54c8\u5e0c\u65f6\u9700\u8981\u63d0\u4f9b\u8fd9\u4e2a\u53e3\u4ee4\uff0c\u9a8c\u8bc1\u65f6\u4e5f\u5fc5\u987b\u8981\u63d0\u4f9b\u6b63\u786e\u7684\u53e3\u4ee4\u3002 - \u8fd9\u5b9e\u9645\u4e0a\u5c31\u662fHmac\u7b97\u6cd5\uff1aKeyed-Hashing for Message Authentication\u3002\u5b83\u901a\u8fc7\u4e00\u4e2a\u6807\u51c6\u7b97\u6cd5\uff0c\u5728\u8ba1\u7b97\u54c8\u5e0c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u628akey\u6df7\u5165\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u3002\u4e0d\u540c\u4e8e\u6211\u4eec\u81ea\u5df1\u8ba1\u7b97MD5\u52a0\u76d0\uff0cHmac\u7b97\u6cd5\u5bf9\u6240\u6709\u54c8\u5e0c\u7b97\u6cd5\u90fd\u9002\u7528\uff0c\u65e0\u8bbaMD5\u8fd8\u662fSHA1\uff0c\u91c7\u7528Hmac\u7b97\u6cd5\u4ee3\u66ff\u81ea\u5df1\u7f16\u5199\u52a0\u76d0\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7a0b\u5e8f\u66f4\u52a0\u6807\u51c6\u5316\u4e5f\u66f4\u5b89\u5168\u3002 - Python\u7684 hmac \u6a21\u5757\u53ef\u4ee5\u505a\u8fd9\u4ef6\u4e8b\u60c5\u3002 import hmac message = b\"hello,world!\" key = b\"sercet\" h = hmac.new(key, message, digestmod=\"MD5\") print(h.hexdigest()) h = hmac.new(key, message, digestmod=\"SHA1\") # SHA256, SHA512, ... print(h.hexdigest()) \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u9ed1\u5ba2\u77e5\u9053\u4e86\u7528\u6237\u7684\u76d0\uff0c\u90a3\u4e48\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u5df2\u77e5\u5bc6\u7801\u5217\u8868\u548c\u8fd9\u4e2a\u76d0\u7b97\u51fa\u4e00\u4e2a\u5e93\uff0c\u6700\u540e\u548c\u54c8\u5e0c\u503c\u5bf9\u6bd4\uff0c\u5982\u679c\u6709\u90a3\u4e48\u5c31\u7834\u89e3\u6210\u529f\u4e86\u3002\u5b9e\u8df5\u4e2d\u4e00\u822c\u4f1a\u7ed9\u6bcf\u4e2a\u7528\u6237\u751f\u6210\u4e00\u4e2a\u968f\u673a\u7684\u76d0\uff0c\u4fdd\u5b58\u5728\u670d\u52a1\u7aef\uff0c\u8fd9\u6837\u9ed1\u5ba2\u5c31\u65e0\u6cd5\u901a\u8fc7\u6bcf\u6b21\u8ba1\u7b97\u4e00\u4e2a\u76d0\u5f97\u5230\u4e00\u4e2a\u5e93\u6765\u5c1d\u8bd5\u649e\u51fa\u6240\u6709\u7528\u6237\u7684\u5bc6\u7801\uff0c\u800c\u662f\u8981\u5bf9\u6bcf\u4e00\u4e2a\u76d0\u90fd\u5bf9\u5bc6\u7801\u8868\u4e2d\u6240\u6709\u5bc6\u7801\u751f\u6210\u4e00\u4e2a\u5e93\uff0c\u6781\u5927\u5730\u589e\u5927\u4e86\u9ed1\u5ba2\u7684\u8ba1\u7b97\u6210\u672c\uff0c\u4f7f\u62ff\u5230\u6570\u636e\u5e93\u7684\u9ed1\u5ba2\u6279\u91cf\u8ba1\u7b97\u51fa\u5bc6\u7801\u8fd9\u4ef6\u4e8b\u60c5\u53d8\u5f97\u51e0\u4e4e\u4e0d\u53ef\u884c\u4e86\u3002\u4f46\u9ed1\u5ba2\u8fd8\u662f\u53ef\u4ee5\u9488\u5bf9\u4e00\u4e2a\u7279\u5b9a\u7684\u7528\u6237\u53bb\u5c1d\u8bd5\uff0c\u8fd9\u65f6\u5019\u8fd8\u662f\u9700\u8981\u7528\u6237\u8bbe\u7f6e\u66f4\u52a0\u590d\u6742\u7684\u5bc6\u7801\uff0c\u4ee5\u53ca\u4e0d\u5728\u4e0d\u540c\u7f51\u7ad9\u4f7f\u7528\u540c\u6837\u7684\u5bc6\u7801\u624d\u53ef\u4ee5\u5f88\u597d\u5730\u907f\u514d\u3002\u4e00\u822c\u4eba\u5176\u5b9e\u4e5f\u4e0d\u5177\u5907\u88ab\u9ed1\u5ba2\u653b\u51fb\u7684\u4ef7\u503c\uff0c\u4f46\u8fd8\u662f\u8981\u6709\u6700\u57fa\u672c\u7684\u5b89\u5168\u610f\u8bc6\u3002 \u6458\u8981\u7b97\u6cd5\u7684\u8f93\u5165\u662f\u5b57\u8282\u5e8f\u5217\u3002 itertools - \u5176\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7528\u4e8e\u8fed\u4ee3\u7684\u6709\u7528\u7684\u51fd\u6570\u3002 - \u6bd4\u5982Map/Reduce\u76f8\u5173\u64cd\u4f5c\u7684\u8865\u5145\u3002 - \u51e0\u4e2a\u65e0\u9650\u8fed\u4ee3\u5668\uff1a - count(start, step = 1) \u4ecen\u5f00\u59cb\u7684\u65e0\u9650\u8fed\u4ee3\u5668\u3002 - cycle(iterator) \u5faa\u73af\u8fed\u4ee3\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u7ed3\u675f\u540e\u53c8\u4ece\u5934\u5f00\u59cb\u3002 - repeat(elem, times) \u8fed\u4ee3\u4e00\u4e2a\u5143\u7d20\u6307\u5b9a\u6b21\u6570\uff0c\u4e0d\u4f20\u6b21\u6570\u5219\u662f\u65e0\u6570\u6b21\u3002 - \u8fed\u4ee3\u65f6\u624d\u56de\u53bb\u8bbf\u95ee\u5143\u7d20\uff0c\u4e0d\u4f1a\u4e8b\u5148\u521b\u5efa\u65e0\u9650\u7684\u5143\u7d20\u3002 - \u4e32\u8054\u591a\u4e2a\u8fed\u4ee3\u5668\uff0c\u5f62\u6210\u4e00\u4e2a\u66f4\u5927\u7684\u8fed\u4ee3\u5668\uff1a chain(*iters) \u3002 - \u628a\u8fed\u4ee3\u5668\u4e2d\u76f8\u90bb\u7684\u91cd\u590d\u5143\u7d20\u6311\u51fa\u6765\u653e\u5728\u4e00\u8d77\uff1a groupby(iterable, grouprule) \uff0c\u6311\u9009\u89c4\u5219\u4e3a\u4f20\u5165\u7684\u51fd\u6570\uff0c\u53ea\u8981\u4f5c\u7528\u4e8e\u4e24\u4e2a\u5143\u7d20\u8fd4\u56de\u7684\u503c\u76f8\u7b49\u5c31\u88ab\u653e\u5230\u4e00\u7ec4\u3002 - \u8fd8\u6709\u5f88\u591a\u6709\u7528\u7684\u51fd\u6570\u3002 contextlib - Python\u4e2d\u8bfb\u5199\u6587\u4ef6\u8fd9\u79cd\u8d44\u6e90\u5904\u7406\u9700\u8981\u7279\u522b\u6ce8\u610f\uff0c\u9700\u8981\u786e\u4fdd\u5173\u95ed\uff0c\u4e00\u4e2a\u65b9\u6cd5\u662f\u4f7f\u7528 try...finally \uff0c\u4e0d\u8fc7\u5f88\u7e41\u7410\uff0c\u66f4\u5e38\u89c1\u7684\u662f\u4f7f\u7528 with \u8bed\u53e5\u3002 - \u9664\u4e86 open() \u51fd\u6570\u6253\u5f00\u6587\u4ef6\u5bf9\u8c61\uff0c\u5176\u5b9e\u5bf9\u4e8e\u4efb\u4f55\u5bf9\u8c61\uff0c\u53ea\u8981\u6b63\u786e\u5b9e\u73b0\u4e86\u4e0a\u4e0b\u6587\u7ba1\u7406\uff0c\u90fd\u80fd\u7528\u4e8e with \u8bed\u53e5\u3002 - \u5b9e\u73b0\u4e0a\u4e0b\u6587\u7ba1\u7406\u662f\u901a\u8fc7 __enter__ \u548c __exit__ \u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5b9e\u73b0\u7684\u3002 class Query(object): def __init__(self, name) -> None: self.name = name def __enter__(self): print('Begin') return self def __exit__(self, exc_type, exc_value, traceback): if exc_type: print('Error') else: print('End') def query(self): print(f\"Query info about {self.name}\") with Query('Bob') as q: q.query() \u56e0\u4e3a\u662f\u9e2d\u5b50\u7c7b\u578b\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u7ee7\u627f\u4ec0\u4e48\u7c7b\uff0c\u53ea\u9700\u8981\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u5728 with \u8bed\u53e5\u4e2d\u4f7f\u7528\u3002 \u4f7f\u7528 __enter__ __exit__ \u4f9d\u7136\u6bd4\u8f83\u7e41\u7410\uff0cPython\u6807\u51c6\u5e93 contextlib \u63d0\u4f9b\u4e86\u66f4\u7b80\u5355\u7684\u5199\u6cd5\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u6539\u5199\u4e3a\uff1a from contextlib import contextmanager class Query2(object): def __init__(self, name): self.name = name def query(self): print(f\"Query info about {self.name}\") @contextmanager def create_query(name): print(\"Begin\") q = Query2(name) yield q print('End') with create_query('Bob') as q: q.query() \u4f7f\u7528 @contextmanager \u88c5\u9970\u5668\uff0c\u5b9a\u4e49\u51fd\u6570\uff0c\u6267\u884c\u8981\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u5c06\u8981\u653e\u5728 with \u8bed\u53e5\u4e2d\u7684\u5bf9\u8c61 yield \u51fa\u53bb\uff0c\u5c06\u8fdb\u5165\u548c\u79bb\u5f00\u91ca\u653e\u8d44\u6e90\u7684\u903b\u8f91\u5199\u5728\u5176\u4e2d\u5373\u53ef\u3002 \u6267\u884c\u987a\u5e8f\uff1a yield \u524d\u7684\u8bed\u53e5\uff0c with \u5757\u4e2d\u8bed\u53e5\uff0c\u7136\u540e\u662f yield \u540e\u7684\u8bed\u53e5\u3002 \u5f88\u591a\u65f6\u5019\uff0c\u5e0c\u671b\u5728\u67d0\u6bb5\u4ee3\u7801\u6267\u884c\u524d\u540e\u81ea\u52a8\u6267\u884c\u7279\u5b9a\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u7528 @contextmanager \u5b9e\u73b0\u3002 \u6bd4\u5982\u8f93\u51faxml\u65f6\u8f93\u51fa\u5185\u5bb9\u540e\u81ea\u52a8\u8f93\u51fa\u5143\u7d20\u7684\u7ed3\u675f\u6807\u8bb0\u3002 @contextmanager def tag(name): print(f\"<{name}>\") yield print(f\"</{name}>\") with tag(\"h1\"): print(\"hello\") \u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u6ca1\u6709\u5b9e\u73b0\u4e0a\u4e0b\u6587\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u628a\u5b83\u7528\u4e8ewith\u8bed\u53e5\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u53ef\u4ee5\u7528 closing() \u6765\u628a\u8be5\u5bf9\u8c61\u53d8\u4e3a\u4e0a\u4e0b\u6587\u5bf9\u8c61\u3002 \u6548\u679c\u7c7b\u4f3c\u4e8e\uff1a\u7ed3\u675f\u540e\u81ea\u52a8\u8c03\u7528 close \u65b9\u6cd5\u3002 @contextmanager def closing(thing): try: yield thing finally: thing.close() \u8fd9\u4e2a\u5e93\u4e2d\u8fd8\u6709\u8bb8\u591a\u7528\u4e8e\u4e0a\u4e0b\u6587\u7ba1\u7406\u7684\u88c5\u9970\u5668\uff0c\u89c1 \u6587\u6863 \u3002 urllib - \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u64cd\u4f5cURL\u7684\u529f\u80fd\uff0c urllib \u6a21\u5757\u7684 request \u6a21\u5757\u53ef\u4ee5\u65b9\u4fbf\u7684\u6293\u53d6URL\u5185\u5bb9\uff0c\u4e5f\u5c31\u662f\u53d1\u9001\u4e00\u4e2aGET\u8bf7\u6c42\u5230\u6307\u5b9a\u7684\u9875\u9762\uff0c\u7136\u540e\u8fd4\u56deHTTP\u7684\u54cd\u5e94\u3002 from urllib import request with request.urlopen('https://baidu.com') as f: data = f.read() print('Status:', f.status, f.reason) for k, v in f.getheaders(): print('%s: %s' % (k, v)) print('Data:', data.decode('utf-8')) \u5982\u679c\u8981\u6a21\u62df\u6d4f\u89c8\u5668\u53d1\u9001GET\u8bf7\u6c42\uff0c\u5c31\u9700\u8981\u4f7f\u7528 Request \u5bf9\u8c61\uff0c\u6dfb\u52a0HTTP\u5934\uff0c\u5c31\u53ef\u4ee5\u628a\u8bf7\u6c42\u4f2a\u88c5\u6210\u6d4f\u89c8\u5668\uff1a req = request.Request('http://www.douban.com/') req.add_header('User-Agent', 'Mozilla/6.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/8.0 Mobile/10A5376e Safari/8536.25') with request.urlopen(req) as f: print('Status:', f.status, f.reason) for k, v in f.getheaders(): print('%s: %s' % (k, v)) print('Data:', f.read().decode('utf-8')) \u5982\u679c\u8981\u53d1\u9001POST\u8bf7\u6c42\uff0c\u5c31\u9700\u8981\u628a\u53c2\u6570 data \u4ee5bytes\u5f62\u5f0f\u4f20\u5165 \u8fd8\u6709\u66f4\u590d\u6742\u7684\u63a7\u5236\uff0c\u6bd4\u5982\u901a\u8fc7\u4e00\u4e2a\u4ee3\u7406\u53bb\u8bbf\u95ee\u7f51\u7ad9\uff0c\u53ef\u4ee5\u5229\u7528 ProxyHandler \u6765\u5904\u7406\u3002 urlopen \u5f97\u5230\u7684\u5bf9\u8c61\u662f\u4e00\u4e2afile-like\u5bf9\u8c61\uff0c\u53ef\u4ee5\u50cf\u6587\u4ef6\u4e00\u6837\u901a\u8fc7 read \u8bfb\u53d6\u3002 XML - XML\u6bd4JSON\u66f4\u590d\u6742\uff0c\u4e0d\u8fc7\u4f9d\u7136\u8fd8\u6709\u8bb8\u591a\u5730\u65b9\u5728\u4f7f\u7528\u3002 - XML\u6709\u4e24\u79cd\u64cd\u4f5c\u65b9\u6cd5\uff1aDOM(Document Object Model)\u548cSAX(Simple API for XML)\u3002DOM\u4f1a\u628a\u6574\u4e2aXML\u8bfb\u5165\u5185\u5b58\uff0c\u89e3\u6790\u4e3a\u6811\uff0c\u56e0\u6b64\u5360\u7528\u5185\u5b58\u5927\uff0c\u89e3\u6790\u6162\uff0c\u4f18\u70b9\u662f\u53ef\u4ee5\u4efb\u610f\u904d\u5386\u6811\u7684\u8282\u70b9\u3002SAX\u662f\u6d41\u6a21\u5f0f\uff0c\u8fb9\u8bfb\u8fb9\u89e3\u6790\uff0c\u5360\u7528\u5185\u5b58\u5c0f\uff0c\u89e3\u6790\u5feb\uff0c\u7f3a\u70b9\u662f\u6211\u4eec\u9700\u8981\u81ea\u5df1\u5904\u7406\u4e8b\u4ef6\u3002 - \u6b63\u5e38\u60c5\u51b5\u4e0b\u4f18\u5148\u8003\u8651SAX\uff0c\u56e0\u4e3aDOM\u592a\u5360\u7528\u5185\u5b58\u3002 - Python\u4f7f\u7528SAX\uff0c\u901a\u5e38\u6211\u4eec\u5173\u5fc3\u7684\u4e8b\u4ef6\u662f start_element \uff0c end_element \u548c char_data \uff0c\u51c6\u5907\u597d\u8fd93\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u89e3\u6790xml\u4e86\u3002 from xml.parsers.expat import ParserCreate class DefaultSaxHandler(object): def start_element(self, name, attrs): print('sax:start_element: %s, attrs: %s' % (name, str(attrs))) def end_element(self, name): print('sax:end_element: %s' % name) def char_data(self, text): print('sax:char_data: %s' % text) xml = r'''<?xml version=\"1.0\"?> <ol> <li><a href=\"/python\">Python</a></li> <li><a href=\"/ruby\">Ruby</a></li> </ol> ''' handler = DefaultSaxHandler() parser = ParserCreate() parser.StartElementHandler = handler.start_element parser.EndElementHandler = handler.end_element parser.CharacterDataHandler = handler.char_data parser.Parse(xml) \u9664\u4e86\u89e3\u6790\u5b57\u7b26\u4e32\u4e4b\u5916\uff0c\u751f\u6210\u5b57\u7b26\u4e32\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\u5b8c\u6210\u3002\u4e0d\u592a\u5efa\u8bae\u751f\u6210\u5927\u6bb5\u7684XML\uff0c\u6700\u597d\u4f7f\u7528JSON\u3002 HTMLParser - \u5982\u679c\u8981\u5b9e\u73b0\u4e00\u4e2a\u6d4f\u89c8\u5668\uff0c\u5047\u8bbehtml\u9875\u9762\u5df2\u7ecf\u5df2\u7ecf\u722c\u53d6\u5230\u4e86\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u89e3\u6790HTML\u3002 - HTML\u672c\u8d28\u4e0a\u662fXML\u7684\u5b50\u96c6\uff0c\u4f46\u662fHTML\u7684\u8bed\u6cd5\u6ca1\u6709XML\u90a3\u4e48\u4e25\u683c\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528\u6807\u51c6\u7684DOM\u6216SAX\u6765\u89e3\u6790HTML\u3002 - Python\u63d0\u4f9b\u4e86 HTMLParser \u6765\u89e3\u6790HTML\uff0c\u53ea\u9700\u8981\u7b80\u5355\u51e0\u884c\u4ee3\u7801\u3002 from html.parser import HTMLParser from html.entities import name2codepoint class MyHTMLParser(HTMLParser): def handle_starttag(self, tag, attrs): print('<%s>' % tag) def handle_endtag(self, tag): print('</%s>' % tag) def handle_startendtag(self, tag, attrs): print('<%s/>' % tag) def handle_data(self, data): print(data) def handle_comment(self, data): print('<!--', data, '-->') def handle_entityref(self, name): print('&%s;' % name) def handle_charref(self, name): print('&#%s;' % name) parser = MyHTMLParser() parser.feed('''<html> <head></head> <body> <!-- test html parser --> <p>Some <a href=\\\"#\\\">html</a> HTML&nbsp;tutorial...<br>END</p> </body></html>''') \u57fa\u672c\u903b\u8f91\u662f\u4ece HTMLParser \u6d3e\u751f\uff0c\u5b9e\u73b0\u5bf9\u5e94\u65b9\u6cd5\u5373\u53ef\u89e3\u6790\u3002","title":"\u5e38\u7528\u5185\u5efa\u6a21\u5757"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_14","text":"\u9664\u4e86\u5185\u5efa\u6a21\u5757\uff0cPython\u8fd8\u6709\u6570\u91cf\u4f17\u591a\u7684\u7b2c\u4e09\u65b9\u6a21\u5757\u3002\u6240\u6709\u7684\u7b2c\u4e09\u65b9\u6a21\u5757\u90fd\u4f1a\u5728 PyPI - the Python Package Index \u4e0a\u6ce8\u518c\uff0c\u53ea\u8981\u627e\u5230\u5bf9\u5e94\u7684\u6a21\u5757\u540d\u5b57\uff0c\u5373\u53ef\u7528pip\u5b89\u88c5\u3002 Pillow - PIL\uff1aPython Imaging Library\uff0c\u5df2\u7ecf\u662fPython\u5e73\u53f0\u4e8b\u5b9e\u4e0a\u7684\u56fe\u50cf\u5904\u7406\u6807\u51c6\u5e93\u4e86\u3002\u4f46PIL\u4ec5\u652f\u6301\u5230Python2.7\uff0c\u540e\u7eed\u7531\u4e00\u7fa4\u5fd7\u613f\u8005\u5728PIL\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u4e86\u517c\u5bb9\u7684\u7248\u672c\uff0c\u540d\u5b57\u53ebPillow\uff0c\u652f\u6301\u6700\u65b0Python 3.x\uff0c\u53c8\u52a0\u5165\u4e86\u8bb8\u591a\u65b0\u7279\u6027\u3002 - \u5b89\u88c5\uff1a pip install pillow \u3002 - \u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u5b8c\u6210\u7f29\u653e\u548c\u6a21\u7cca\u7684\u64cd\u4f5c\uff1a from PIL import Image, ImageFilter # open an image im = Image.open('nephren.png') # get image size w, h = im.size print('Original image size: %sx%s' % (w, h)) # resize to 50% im.thumbnail((w//2, h//2)) print('Resize image to: %sx%s' % (w//2, h//2)) # save scaled image im.save('thumbnail.png', 'png') # blur an iamge im = Image.open('nephren.png') im2 = im.filter(ImageFilter.BLUR) im2.save('blur.png', 'png') PIL \u7684 ImageDraw \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7ed8\u56fe\u65b9\u6cd5\u8ba9\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7ed8\u56fe\u3002 \u66f4\u591a\u7528\u6cd5\u8be6\u89c1 \u6587\u6863 requests - Python\u5185\u7f6e\u7684 urllib \u53ef\u4ee5\u7528\u4e8e\u8bbf\u95ee\u7f51\u7edc\u8d44\u6e90\uff0c\u4f46\u662f\u7528\u8d77\u6765\u5f88\u9ebb\u70e6\u3002\u800c\u4e14\u7f3a\u5c11\u9ad8\u7ea7\u4e00\u70b9\u7684\u529f\u80fd\u3002 - \u66f4\u597d\u7684\u65b9\u6848\u662f\u4f7f\u7528 requests \u7b2c\u4e09\u65b9\u5e93\uff0c\u5904\u7406URL\u8d44\u6e90\u7279\u522b\u65b9\u4fbf\u3002 - \u5b89\u88c5 pip install requests - \u53d1\u9001GET\u8bf7\u6c42\uff1a import requests r = requests.get('https://baidu.com') print(r.status_code) print(r.text) \u5bf9\u4e8e\u5e26\u53c2\u6570\u7684URL\uff0c\u4f20\u5165\u4e00\u4e2a dict \u4f5c\u4e3a params \u53c2\u6570\u3002 requests \u4f1a\u81ea\u52a8\u68c0\u6d4b\u7f16\u7801\uff0c\u4f7f\u7528 encoding \u5c5e\u6027\u67e5\u770b\u3002 \u65e0\u8bba\u54cd\u5e94\u65f6\u6587\u672c\u8fd8\u662f\u4e8c\u8fdb\u5236\u5185\u5bb9\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528 content \u5c5e\u6027\u83b7\u53d6 bytes \u5bf9\u8c61\u3002 \u5bf9\u4e8e\u7279\u5b9a\u7c7b\u578b\u54cd\u5e94\uff0c\u6bd4\u5982JSON\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 json() \u65b9\u6cd5\u83b7\u53d6\u5230json\u5bf9\u8c61\u3002 \u9700\u8981\u4f20\u5165HTTP\u5934\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7 headers \u53c2\u6570\u4f20\u5165\u3002 \u53d1\u9001POST\u8bf7\u6c42\uff0c\u53ea\u9700\u8981\u628a get() \u65b9\u6cd5\u4fdd\u5b58 post() \uff0c\u4f20\u5165 data \u53c2\u6570\u4f5c\u4e3a\u8bf7\u6c42\u6570\u636e\u5373\u53ef\u3002 requests\u9ed8\u8ba4\u4f7f\u7528 application/x-www-form-urlencoded \u5bf9POST\u6570\u636e\u7f16\u7801\u3002\u5982\u679c\u8981\u4f20\u9012JSON\u6570\u636e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165json\u53c2\u6570\u3002 \u4e0a\u4f20\u6587\u4ef6\u9700\u8981\u66f4\u590d\u6742\u7684\u7f16\u7801\u683c\u5f0f\uff0c\u4f46\u662frequests\u628a\u5b83\u7b80\u5316\u6210files\u53c2\u6570\u3002\u8bfb\u53d6\u6587\u4ef6\u65f6\uff0c\u6ce8\u610f\u52a1\u5fc5\u4f7f\u7528'rb'\u5373\u4e8c\u8fdb\u5236\u6a21\u5f0f\u8bfb\u53d6\uff0c\u8fd9\u6837\u83b7\u53d6\u7684bytes\u957f\u5ea6\u624d\u662f\u6587\u4ef6\u7684\u957f\u5ea6\u3002 \u540c\u6837\u8fd8\u53ef\u4ee5 put() delete() \u65b9\u6cd5\u8bf7\u6c42\u8d44\u6e90\u3002 \u9664\u4e86\u83b7\u53d6\u54cd\u5e94\u5185\u5bb9\uff0c\u83b7\u53d6\u54cd\u5e94\u7684\u5176\u4ed6\u4fe1\u606f\u4e5f\u5f88\u8f7b\u677e\uff0c\u6bd4\u5982\u54cd\u5e94\u5934 r.headers['Content-Type'] \u3002 requests\u5bf9Cookie\u505a\u4e86\u7279\u6b8a\u5904\u7406\uff0c\u4f7f\u5f97\u6211\u4eec\u4e0d\u5fc5\u89e3\u6790Cookie\u5c31\u53ef\u4ee5\u8f7b\u677e\u83b7\u53d6\u6307\u5b9a\u7684Cookie\u3002 r.cookies['ts'] \u3002 \u8981\u5728\u8bf7\u6c42\u4e2d\u4f20\u5165Cookie\uff0c\u53ea\u9700\u51c6\u5907\u4e00\u4e2adict\u4f20\u5165 cookies \u53c2\u6570\u3002 \u8981\u6307\u5b9a\u8d85\u65f6\uff0c\u4f20\u5165\u4ee5\u79d2\u4e3a\u5355\u4f4d\u7684 timeout \u53c2\u6570\u3002 \u66f4\u591a\u5185\u5bb9\u8be6\u89c1 \u6587\u6863 \u3002 chardet - \u4f5c\u7528\uff1a\u68c0\u6d4b\u7f16\u7801\u3002 - \u5b89\u88c5\uff1a pip install chardet \u3002 - \u62ff\u5230\u4e00\u4e2a bytes \u68c0\u6d4b\u5b83\u7684\u7f16\u7801\uff1a chardet.detect(b'Hello, world!') \u3002 - \u652f\u6301\u7f16\u7801\u89c1 \u6587\u6863 \u3002 psutil - \u5728Linux\u4e0b\uff0c\u6709\u8bb8\u591a\u7cfb\u7edf\u547d\u4ee4\u53ef\u4ee5\u8ba9\u6211\u4eec\u65f6\u523b\u76d1\u63a7\u7cfb\u7edf\u8fd0\u884c\u7684\u72b6\u6001\uff0c\u5982ps\uff0ctop\uff0cfree\u7b49\u7b49\u3002\u8981\u83b7\u53d6\u8fd9\u4e9b\u7cfb\u7edf\u4fe1\u606f\uff0cPython\u53ef\u4ee5\u901a\u8fc7subprocess\u6a21\u5757\u8c03\u7528\u5e76\u83b7\u53d6\u7ed3\u679c\u3002\u4f46\u8fd9\u6837\u505a\u663e\u5f97\u5f88\u9ebb\u70e6\uff0c\u5c24\u5176\u662f\u8981\u5199\u5f88\u591a\u89e3\u6790\u4ee3\u7801\u3002 - \u5728Python\u4e2d\u83b7\u53d6\u7cfb\u7edf\u4fe1\u606f\u7684\u53e6\u4e00\u4e2a\u597d\u529e\u6cd5\u662f\u4f7f\u7528psutil\u8fd9\u4e2a\u7b2c\u4e09\u65b9\u6a21\u5757\u3002\u987e\u540d\u601d\u4e49\uff0cpsutil = process and system utilities\uff0c\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e24\u884c\u4ee3\u7801\u5b9e\u73b0\u7cfb\u7edf\u76d1\u63a7\uff0c\u8fd8\u53ef\u4ee5\u8de8\u5e73\u53f0\u4f7f\u7528\uff0c\u652f\u6301Linux\uff0fUNIX\uff0fOSX\uff0fWindows\u7b49\uff0c\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\u548c\u8fd0\u7ef4\u5c0f\u4f19\u4f34\u4e0d\u53ef\u6216\u7f3a\u7684\u5fc5\u5907\u6a21\u5757\u3002 - \u4f7f\u7528 psutil \u53ef\u4ee5\u83b7\u53d6CPU\u4fe1\u606f\u3001\u5185\u5b58\u4fe1\u606f\u3001\u78c1\u76d8\u4fe1\u606f\u3001\u8fdb\u7a0b\u4fe1\u606f\u3001\u7528\u6237\u4fe1\u606f\u3001Windows\u670d\u52a1\u7b49\u8bf8\u591a\u6709\u7528\u7684\u7cfb\u7edf\u4fe1\u606f\u3002 - \u6587\u6863 \u3002 - \u793a\u4f8b\uff1a import psutil # CPU info print(psutil.cpu_count()) # logical cpu count print(psutil.cpu_count(logical=False)) # physical cpy count print(psutil.cpu_times()) # print the usage of every cpu core, 5 times in one second for x in range(5): print(psutil.cpu_percent(interval=0.2, percpu=True)) # memory and swap memory info print(psutil.virtual_memory()) print(psutil.swap_memory()) # internet print(psutil.net_io_counters()) print(psutil.net_if_addrs()) # port info print(psutil.net_if_stats()) # port status print(psutil.net_connections()) # process print(psutil.pids()) p = psutil.Process(psutil.pids()[-1]) print(p.exe()) # executable of process print(p.cwd()) # working directory of process print(p.cmdline()) # cmd line of process print(p.ppid()) # parent process id print(p.parent()) # parent process print(p.children()) # children processes print(p.status()) # status print(p.username()) print(p.create_time()) # print(p.terminal()) # Unix only print(p.cpu_times()) print(p.memory_info()) print(p.connections()) # internet connections print(p.num_threads()) print(p.threads()) print(p.environ()) # environment variables of process # like ps command print(psutil.test())","title":"\u5e38\u7528\u7b2c\u4e09\u65b9\u6a21\u5757"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#virtualenv-pipenv","text":"virtualenv\u53ef\u4ee5\u7528\u6765\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u521b\u5efa\u591a\u4e2a\u9694\u79bb\u7684Python\u8fd0\u884c\u73af\u5883\uff0c\u6bd4\u5982\u4e00\u4e2a\u5e94\u7528\u9700\u8981\u67d0\u4e2a\u5305\u7684\u4e00\u4e2a\u7279\u5b9a\u7248\u672c\uff0c\u800c\u53e6\u4e00\u4e2a\u5e94\u7528\u9700\u8981\u53e6\u4e00\u4e2a\u7248\u672c\uff0c\u800c\u8fd9\u4e24\u4e2a\u5305\u53ef\u80fd\u53c8\u4f9d\u8d56\u53e6\u4e00\u4e2a\u5305\u7684\u4e0d\u540c\u7248\u672c\uff0c\u5c06\u8fd9\u4e24\u4e2a\u7248\u672c\u653e\u5230\u540c\u4e00\u4e2a\u73af\u5883\u4e2d\u52bf\u5fc5\u4f1a\u9020\u6210\u51b2\u7a81\uff0c\u90a3\u4e48\u6b64\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528virtualenv\u3002 - \u5b98\u65b9\u6587\u6863 \u3002 - \u5b89\u88c5\uff1a pip install virtualenv - \u4f7f\u7528\uff1a python -m virtualenv [options] [args] - \u521b\u5efa\u4e00\u4e2a\u65b0\u73af\u5883\uff1a\u5728\u4e00\u4e2a\u76ee\u5f55\u4e2d python -m virtualenv venv \uff0c venv \u5c31\u662f\u8fd9\u4e2a\u65b0\u73af\u5883\u7684\u540d\u79f0\uff0c\u5e76\u4e14\u4f1a\u5728\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a venv/ \u76ee\u5f55\uff0c\u5176\u4e2d\u5b58\u653e\u4e86Python\u53ef\u6267\u884c\u6587\u4ef6\u4ee5\u53ca pip \u5e93\u7684\u4e00\u4efd\u62f7\u8d1d\u3002\u7701\u7565\u540d\u5b57\u5c06\u4f1a\u628a\u6587\u4ef6\u76f4\u63a5\u653e\u5728\u5f53\u524d\u76ee\u5f55\u3002 - \u4f7f\u7528\u865a\u62df\u73af\u5883\u524d\uff0c\u9700\u8981\u5148\u6fc0\u6d3b\uff1a - Unix\u4e2d\uff1a source venv/bin/activate - Windows\u4e2d\u6267\u884c\uff1a .\\venv\\Scripts\\activate.bat - \u6fc0\u6d3b\u6210\u529f\u540e\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u524d\u4f1a\u51fa\u73b0 (venv) \uff0c\u5373\u8868\u793a\u8fdb\u5165\u865a\u62df\u73af\u5883\u3002 - \u76f4\u63a5\u6267\u884c deactivate \u53ef\u4ee5\u505c\u7528\u865a\u62df\u73af\u5883\uff08\u53ef\u4ee5\u4e0d\u7528\u663e\u5f0f\u6307\u660e\u811a\u672c\u8def\u5f84\uff09\uff0c\u5728\u865a\u62df\u73af\u5883\u4e2d\u6682\u65f6\u5b8c\u6210\u4e86\u5de5\u4f5c\u540e\u79bb\u5f00\u65f6\u5c31\u53ef\u4ee5\u505c\u7528\u5b83\uff0c\u8fd9\u662f\u4f1a\u56de\u5230\u7cfb\u7edf\u9ed8\u8ba4\u7684Python\u89e3\u91ca\u5668\u548c\u5b89\u88c5\u7684\u5e93\u3002 - \u5220\u9664\u4e00\u4e2a\u865a\u62df\u73af\u5883\uff0c\u53ea\u9700\u8981\u5220\u9664\u5176\u76ee\u5f55\u3002 - \u8bb0\u5f97\u5c06\u865a\u62df\u73af\u5883\u7684\u76ee\u5f55\u6dfb\u52a0\u5230\u7248\u672c\u63a7\u5236\u7684\u5ffd\u7565\u6587\u4ef6\u4e2d\u3002 - \u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u7b2c\u4e09\u65b9\u5e93\u5c06\u4f1a\u4fdd\u7559\u5728\u8fd9\u4e2a\u73af\u5883\u4e2d\uff0c\u4e0d\u4f1a\u548c\u7cfb\u7edf\u9ed8\u8ba4\u73af\u5883\u53d1\u751f\u51b2\u7a81\u3002 - \u8fd0\u884c\u539f\u7406\uff1a\u5728\u6267\u884c\u4e86 activate \u540e\uff0c\u4f1a\u4fee\u6539\u76f8\u5173\u73af\u5883\u53d8\u91cf\uff0c\u8ba9Python\u548cpip\u6307\u5411\u5f53\u524d\u865a\u62df\u73af\u5883\u3002 \u53e6\u4e00\u79cd\u7ba1\u7406\u865a\u62df\u73af\u5883\u7684\u5de5\u5177Pipenv\uff1a - \u7ed3\u5408\u4e86 pip \u548c virtualenv \uff0c\u4fa7\u91cd\u70b9\u662f\u5305\u73af\u5883\u7ba1\u7406\u3002 - \u5b89\u88c5\uff1a pip install pipenv - Pipenv \u7ba1\u7406\u6bcf\u4e2a\u9879\u76ee\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u8981\u5b89\u88c5\u8f6f\u4ef6\u5305\u65f6\uff0c\u66f4\u6539\u5230\u9879\u76ee\u76ee\u5f55\uff0c\u4e3a\u9879\u76ee\u5b89\u88c5\u4e00\u4e2a\u5305\uff1a pipenv install package \u3002\u4e0d\u52a0\u67d0\u4e00\u4e2a\u5177\u4f53\u7684\u5305\u7684\u8bdd\u5c31\u662f\u5b89\u88c5 Pipfile \u4e2d\u6240\u6709\u5305\u3002 - \u5378\u8f7d\uff1a pipenv uninstall package - \u4f7f\u7528 pipenv \u540e\u4f1a\u751f\u6210\u4e00\u4e2a Pipfile \uff0c\u5176\u4e2d\u6709\u6700\u65b0\u5b89\u88c5\u7684\u5305\u6587\u4ef6\u7684\u4fe1\u606f\uff0c\u5982\u540d\u79f0\u3001\u7248\u672c\u7b49\uff0c\u7528\u6765\u5728\u91cd\u65b0\u5b89\u88c5\u9879\u76ee\u4f9d\u8d56\u6216\u4e0e\u4ed6\u4eba\u5171\u4eab\u9879\u76ee\u65f6\uff0c\u4f60\u53ef\u4ee5\u7528 Pipfile \u6765\u8ddf\u8e2a\u9879\u76ee\u4f9d\u8d56\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f pipenv \u7528\u6765\u66ff\u4ee3 pip \u7684 requirements.txt \u7684\u6587\u4ef6\u3002\u8fd8\u4f1a\u6709\u4e00\u4e2a Pipfile.lock \u5305\u542b\u4f60\u7684\u7cfb\u7edf\u4fe1\u606f\uff0c\u6240\u6709\u5df2\u5b89\u88c5\u5305\u7684\u4f9d\u8d56\u5305\u53ca\u5176\u7248\u672c\u4fe1\u606f\uff0c\u4ee5\u53ca\u6240\u6709\u5b89\u88c5\u5305\u53ca\u5176\u4f9d\u8d56\u5305\u7684 Hash \u6821\u9a8c\u4fe1\u606f\u3002 - \u4f7f\u7528\u65f6\u53ef\u4ee5\u901a\u8fc7 pipenv run python main.py \u53ef\u4ee5\u786e\u4fdd\u4f60\u7684\u5b89\u88c5\u5305\u53ef\u4ee5\u7528\u4e8e\u4f60\u7684\u811a\u672c\uff0c\u5c31\u662f\u8bf4\u53ea\u4f1a\u4f7f\u7528 Pipfile \u4e2d\u7684\u4f9d\u8d56\uff0c\u5982\u679c\u6ca1\u6709\u5728\u76ee\u5f55\u4e2d\u7528 pipenv install \u5b89\u88c5\u7684\u5305\u5c06\u65e0\u6cd5\u4f7f\u7528\u3002 - \u8fd8\u53ef\u4ee5\u4f7f\u7528 pipenv shell \u6765\u751f\u6210\u4e00\u4e2a\u65b0\u7684shell\uff0c\u5c31\u50cf\u8fdb\u5165\u865a\u62df\u73af\u5883\u90a3\u6837\uff0c\u5c31\u4e0d\u7528\u6267\u884c\u524d\u90fd\u52a0\u4e00\u4e2a pipenv run \u4e86\u3002 - \u4f7f\u7528 pipenv run pip list \u5c06\u4f1a\u5f97\u5230\u4f7f\u7528 pipenv run \u6267\u884c\u65f6\u53ef\u7528\u7684\u5305\u5217\u8868\u3002 - \u5176\u5b9e pipenv \u4e5f\u7c7b\u4f3c\u4e8e virtualenv \uff0c\u53ea\u4e0d\u8fc7\u865a\u62df\u73af\u5883\u7684\u6587\u4ef6\u4e0d\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\uff0c\u800c\u662f\u5728\u5bb6\u76ee\u5f55\u4e0b\u7684 ./virtualenvs \u4e0b\u7684\u76ee\u5f55\u4e2d\u3002 pipenv --venv \u53ef\u4ee5\u67e5\u770b\u5176\u865a\u62df\u73af\u5883\u6240\u5728\u76ee\u5f55\u3002 - \u66f4\u591a\u547d\u4ee4\uff1a - pipenv update packge \u66f4\u65b0\u7b2c\u4e09\u65b9\u5305\u3002 - pipenv --where \u67e5\u770b\u9879\u76ee\u6839\u76ee\u5f55\u3002 - pipenv check \u68c0\u67e5\u7b2c\u4e09\u65b9\u5305\u7684\u5b8c\u6574\u6027\u3002 - pipenv graph \u67e5\u770b\u4f9d\u8d56\u6811\u3002 - pipenv \u6362\u6e90\uff1a - \u65b0\u5efa\u7cfb\u7edf\u53d8\u91cf PIPENV_PYPI_MIRROR \u4e3a https://pypi.tuna.tsinghua.edu.cn/simple \uff08\u6216\u5176\u4ed6\u6e90\uff09\u3002\u5bf9\u6240\u6709 pipenv \u73af\u5883\u751f\u6548\u3002 - \u4fee\u6539 Pipfile \u4e2d\u7684 url \u53ef\u4ee5\u66f4\u6539\u8fd9\u4e2a\u9879\u76ee\u5b89\u88c5\u65f6\u7684\u6e90\u3002 \u5b89\u88c5\u4e0e\u751f\u6210\u4f9d\u8d56\uff1a - \u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u548c\u5f00\u53d1\u73af\u5883\u9ad8\u5ea6\u76f8\u5173\uff0c\u5c31\u9700\u8981\u751f\u6210\u4f9d\u8d56\u6587\u4ef6 requirements.txt \u3002 - \u4f7f\u7528 pip freeze \u53ef\u4ee5\u5f97\u5230\u5f53\u524d\u73af\u5883\u6240\u6709\u7684\u5305\uff0c\u76f4\u63a5\u6267\u884c\u4f1a\u5f97\u5230\u5f53\u524d\u5b89\u88c5\u7684\u6240\u6709\u5305\uff0c\u5982\u679c virtualenv \u6216\u8005 pipenv run \u4e0b\u6267\u884c\uff0c\u90a3\u4e48\u53ea\u4f1a\u5f97\u5230\u865a\u62df\u73af\u5883\u4e2d\u53ef\u7528\u7684\u5305\u3002 - \u4f7f\u7528 pip freeze > requirements.txt \u5373\u53ef\u751f\u6210\u4f9d\u8d56\u6587\u4ef6\u3002 - \u91cd\u65b0\u521b\u5efa\u8fd9\u6837\u7684\u73af\u5883\uff1a pip install -r requirements.txt \u3002\u5e2e\u52a9\u786e\u4fdd\u5b89\u88c5\u3001\u90e8\u7f72\u548c\u5f00\u53d1\u8005\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u3002 - \u5982\u679c\u6ca1\u6709\u4f7f\u7528\u865a\u62df\u73af\u5883\uff0c\u6240\u6709\u5305\u90fd\u4f7f\u7528\u7cfb\u7edf\u7684Python\u5305\uff0c\u90a3\u4e48 pip freeze \u5c31\u4f1a\u5f97\u5230\u6240\u6709\u5305\uff0c\u5f53\u53d1\u5e03\u9879\u76ee\u65f6\u4ec5\u9700\u8981\u9879\u76ee\u7684\u4f9d\u8d56\uff0c\u53ef\u4ee5\u4f7f\u7528\u5305 pipreqs \u6765\u67e5\u627e\u5f53\u524d\u9879\u76ee\u7684\u4f9d\u8d56\u5e76\u81ea\u52a8\u751f\u6210 requirements.txt \u3002 - pip install pipreqs - pipreqs ./ \u53e6\u5916\u8fd8\u6709 pyenv \u53ef\u4ee5\u7528\u6765\u7ba1\u7406\u591a\u4e2a\u7248\u672c\u7684Python\uff0c\u8fd9\u70b9Pipenv\u4e5f\u53ef\u4ee5\u505a\u5230\uff0c\u6b64\u5904\u4e0d\u8be6\u8ff0 pyenv \u3002 \u6269\u5c55\u9605\u8bfb\uff1a - Pipenv & \u865a\u62df\u73af\u5883 \uff0c\u66f4\u591a\u5173\u4e8e\u9879\u76ee\u4f9d\u8d56\u4e8e\u865a\u62df\u73af\u5883\u7684\u8bf4\u660e\u3002","title":"virtualenv &amp; pipenv"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_15","text":"Python\u652f\u6301\u591a\u79cd\u56fe\u5f62\u754c\u9762\u7684\u7b2c\u4e09\u65b9\u5e93\uff1aTk\u3001wxWidgets\u3001Qt\u3001GTK\u3002 Tkinter\uff1a - Python\u81ea\u5e26\u7684\u5e93\u662f\u652f\u6301Tk\u7684Tkinter\uff0c\u4f7f\u7528Tkinter\uff0c\u65e0\u9700\u5b89\u88c5\u4efb\u4f55\u5305\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002 - \u7b2c\u4e00\u4e2aTkinter\u7684GUI\u7a0b\u5e8f\uff1a from tkinter import * class Application(Frame): def __init__(self, master = None): Frame.__init__(self, master) self.pack() self.createWidgets() def createWidgets(self): self.helloLabel = Label(self, text='Hello, world!') self.helloLabel.pack() self.quitButton = Button(self, text='Quit', command=self.quit) self.quitButton.pack() app = Application() app.master.title('hello,world') app.mainloop() \u548c\u5176\u4ed6\u8bed\u8a00\u7684GUI\u7a0b\u5e8f\u5dee\u4e0d\u591a\uff0c\u6d3e\u751fFrame\uff0c\u5176\u4e2d\u521b\u5efa\u5404\u79cdWidget\uff0c\u5b9e\u4f8b\u5316\u540e\u542f\u52a8\u6d88\u606f\u5faa\u73af\u3002 GUI\u7a0b\u5e8f\u7684\u4e3b\u7ebf\u7a0b\u8d1f\u8d23\u76d1\u542c\u6765\u81ea\u64cd\u4f5c\u7cfb\u7edf\u7684\u6d88\u606f\uff0c\u5e76\u4f9d\u6b21\u5904\u7406\u6bcf\u4e00\u6761\u6d88\u606f\u3002\u5982\u679c\u6d88\u606f\u5904\u7406\u975e\u5e38\u8017\u65f6\uff0c\u5c31\u9700\u8981\u5728\u65b0\u7ebf\u7a0b\u4e2d\u5904\u7406\u3002 ython\u5185\u7f6e\u7684Tkinter\u53ef\u4ee5\u6ee1\u8db3\u57fa\u672c\u7684GUI\u7a0b\u5e8f\u7684\u8981\u6c42\uff0c\u5982\u679c\u662f\u975e\u5e38\u590d\u6742\u7684GUI\u7a0b\u5e8f\uff0c\u5efa\u8bae\u7528\u64cd\u4f5c\u7cfb\u7edf\u539f\u751f\u652f\u6301\u7684\u8bed\u8a00\u548c\u5e93\u6765\u7f16\u5199\u3002 \u6d77\u9f9f\u7ed8\u56fe turtle \u5e93\uff1a - \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u6307\u6325\u4e00\u4e2a\u6d77\u9f9f\u524d\u8fdb\u8f6c\u5411\u4ee5\u6b64\u6765\u7ed8\u56fe\u7684API\uff0c\u79fb\u690d\u5230Python\u4e0a\u4e4b\u540e\u5c31\u662f\u8fd9\u4e2a\u5e93\uff0c\u4f5c\u7528\u6709\u9650\uff0c\u53ef\u4ee5\u7528\u6765\u4f53\u9a8cGUI\u7684\u4e50\u8da3\u3002\u5185\u7f6e\u4e0d\u9700\u8981\u5b89\u88c5\u3002 - \u6587\u6863 \u3002","title":"\u56fe\u5f62\u754c\u9762"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_16","text":"TCP/IP\u534f\u8bae\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86\uff0cIPv4\u5c31\u662f\u4e00\u4e2a32\u4f4d\u6574\u6570\uff0c\u4e00\u822c\u75284\u4e2a0-255\u7684\u5341\u8fdb\u5236\u7528 . \u5206\u9694\u6765\u8868\u793a\u3002IPv6\u662f128\u4f4d\u6574\u6570\uff0c\u75288\u4e2a4\u4f4d\u5341\u516d\u8fdb\u5236\u6574\u6570 : \u5206\u9694\u8868\u793a\u3002 - TCP\u662f\u53ef\u9760\u4f20\u8f93\uff0c\u4f1a\u8fdb\u884c\u4e09\u6b21\u63e1\u624b\uff0c\u56db\u6b21\u6325\u624b\uff0cUDP\u662f\u4e0d\u53ef\u9760\u4f20\u8f93\u3002\u5176\u4ed6\u5e94\u7528\u5c42\u7684\u534f\u8bae\u5efa\u7acb\u5728TCP\u534f\u8bae\u4e4b\u4e0a\uff0c\u6bd4\u5982\u6d4f\u89c8\u5668\u7684HTTP\u534f\u8bae\u3001\u90ae\u4ef6\u534f\u8baeSMTP\u3002 - TCP\u534f\u8bae\u4f7f\u7528\u4e00\u4e2a\u4e00\u4e2a\u7684\u6570\u636e\u5305\u4f20\u8f93\u6570\u636e\uff0c\u4e00\u4e2aTCP\u62a5\u6587\u9664\u4e86\u5305\u542b\u8981\u4f20\u8f93\u7684\u6570\u636e\u5916\uff0c\u8fd8\u5305\u542b\u6e90IP\u5730\u5740\u548c\u76ee\u6807IP\u5730\u5740\uff0c\u6e90\u7aef\u53e3\u548c\u76ee\u6807\u7aef\u53e3\u3002 - \u7aef\u53e3\u7684\u4f5c\u7528\u662f\u5728\u673a\u5668\u4e0a\u533a\u5206\u5e94\u7528\uff0cIp\u5219\u7528\u6765\u533a\u5206\u673a\u5668\uff0c\u4e00\u4e2aIP:\u7aef\u53e3\u7684\u7ec4\u5408\u88ab\u79f0\u4e3a\u4e00\u4e2a\u5957\u63a5\u5b57\uff0c\u7528\u6765\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u8fde\u63a5\u3002 TCP\u7f16\u7a0b\uff1a - Socket\u662f\u7f51\u7edc\u7f16\u7a0b\u7684\u4e00\u4e2a\u62bd\u8c61\u6982\u5ff5\uff0c\u7528\u4e00\u4e2aSocket\u8868\u793a\u6253\u5f00\u4e86\u4e00\u4e2a\u7f51\u7edc\u94fe\u63a5\uff0c\u6253\u5f00\u4e00\u4e2aSocket\u9700\u8981\u77e5\u9053\u76ee\u6807\u8ba1\u7b97\u673a\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\uff0c\u518d\u6307\u5b9a\u534f\u8bae\u7c7b\u578b\u5373\u53ef\u3002 - \u5927\u591a\u6570\u8fde\u63a5\u90fd\u662f\u53ef\u9760\u7684TCP\u8fde\u63a5\uff0c\u521b\u5efaTCP\u8fde\u63a5\u65f6\uff0c\u53d1\u8d77\u8fde\u63a5\u7684\u53eb \u5ba2\u6237\u7aef \uff0c\u88ab\u52a8\u54cd\u5e94\u8fde\u63a5\u7684\u53eb \u670d\u52a1\u5668 \u3002 \u5ba2\u6237\u7aef\uff1a - \u521b\u5efa\u4e00\u4e2a\u57fa\u4e8eTCP\u7684\u8fde\u63a5\uff1a import socket # create a socket: AF_INET -> ipv4, SOCK_STREAM -> TCP s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect(('www.baidu.com', 80)) \u4f5c\u4e3a\u670d\u52a1\u5668\uff0c\u63d0\u4f9b\u4ec0\u4e48\u670d\u52a1\uff0c\u4f7f\u7528\u4ec0\u4e48\u7aef\u53e3\u53f7\u5fc5\u987b\u56fa\u5b9a\u4e0b\u6765\uff0c80\u7aef\u53e3\u662fWeb\u670d\u52a1\u7684\u6807\u51c6\u7aef\u53e3\u3002\u5176\u4ed6\u670d\u52a1\u90fd\u6709\u5bf9\u5e94\u7684\u6807\u51c6\u7aef\u53e3\u53f7\uff0c\u4f8b\u5982SMTP\u670d\u52a1\u662f25\u7aef\u53e3\uff0cFTP\u670d\u52a1\u662f21\u7aef\u53e3\uff0c\u7b49\u7b49\u3002\u7aef\u53e3\u53f7\u5c0f\u4e8e1024\u7684\u662fInternet\u6807\u51c6\u670d\u52a1\u7684\u7aef\u53e3\uff0c\u7aef\u53e3\u53f7\u5927\u4e8e1024\u7684\uff0c\u53ef\u4ee5\u4efb\u610f\u4f7f\u7528\u3002 \u5efa\u7acb\u8fde\u63a5\u4e4b\u540e\uff0c\u53ef\u4ee5\u53d1\u9001\u8bf7\u6c42\uff1a s.send(b'GET / HTTP/1.1\\r\\nHost: www.baidu.com\\r\\nConnection: close\\r\\n\\r\\n') TCP\u8fde\u63a5\u521b\u5efa\u7684\u662f\u53cc\u5411\u901a\u9053\uff0c\u53cc\u65b9\u90fd\u53ef\u4ee5\u540c\u65f6\u7ed9\u5bf9\u65b9\u53d1\u6570\u636e\u3002\u4f46\u662f\u8c01\u5148\u53d1\u8c01\u540e\u53d1\uff0c\u600e\u4e48\u534f\u8c03\uff0c\u8981\u6839\u636e\u5177\u4f53\u7684\u534f\u8bae\u6765\u51b3\u5b9a\u3002\u4f8b\u5982HTTP\u534f\u8bae\u89c4\u5b9a\u5ba2\u6237\u7aef\u5fc5\u987b\u5148\u53d1\u8bf7\u6c42\u7ed9\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u6536\u5230\u540e\u624d\u53d1\u6570\u636e\u7ed9\u5ba2\u6237\u7aef\u3002 \u63a5\u4e0b\u91cc\u5c31\u53ef\u4ee5\u63a5\u6536\u6570\u636e\u4e86\uff1a # receive data buffer = [] while True: # 1 KB every time d = s.recv(1024) if d: buffer.append(d) else: break data = b''.join(buffer) \u6570\u636e\u63a5\u6536\u5b8c\u6bd5\u4e4b\u540e\uff0c\u8c03\u7528 close \u65b9\u6cd5\u5173\u95edSocket\uff0c\u4e00\u6b21\u5b8c\u6574\u7684\u7f51\u7edc\u901a\u4fe1\u5c31\u7ed3\u675f\u4e86\u3002 s.close() \u63a5\u6536\u5230\u7684\u6570\u636e\u5305\u62ecHTTP\u5934\u548c\u7f51\u9875\u672c\u8eab\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628aHTTP\u5934\u548c\u7f51\u9875\u5206\u79bb\u4e00\u4e0b\uff0c\u628aHTTP\u5934\u6253\u5370\u51fa\u6765\uff0c\u7f51\u9875\u5185\u5bb9\u4fdd\u5b58\u5230\u6587\u4ef6\uff0c\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u8fd9\u4e2a html \u6587\u4ef6\u5c31\u53ef\u4ee5\u770b\u5230\u767e\u5ea6\u7684\u9996\u9875\u4e86\u3002 header, html = data.split(b'\\r\\n\\r\\n') print(header.decode('utf-8')) with open('baidu.html', 'wb') as f: f.write(html) \u670d\u52a1\u5668\u7aef\uff1a - \u670d\u52a1\u5668\u7f16\u7a0b\u6bd4\u5ba2\u6237\u7aef\u8981\u590d\u6742\u4e00\u70b9\u3002 - \u670d\u52a1\u5668\u8fdb\u7a0b\u9700\u8981\u7ed1\u5b9a\u4e00\u4e2a\u7aef\u53e3\u6765\u76d1\u542c\u5176\u4ed6\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\uff0c\u5982\u679c\u67d0\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5\u8fc7\u6765\uff0c\u670d\u52a1\u5668\u5c31\u4e0e\u8be5\u5ba2\u6237\u7aef\u5efa\u7acbSocket\u8fde\u63a5\uff0c\u968f\u540e\u7684\u901a\u4fe1\u5c31\u4f9d\u9760\u8fd9\u4e2aSocket\u8fde\u63a5\u3002 - \u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u6709\u5927\u91cf\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u7531\u670d\u52a1\u5668\u5730\u5740\u3001\u670d\u52a1\u5668\u7aef\u53e3\u3001\u5ba2\u6237\u7aef\u5730\u5740\u3001\u5ba2\u6237\u7aef\u7aef\u53e3\u552f\u4e00\u786e\u5b9a\u4e00\u4e2aSocket\u3002 - \u6bcf\u4e2a\u8fde\u63a5\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\u8fdb\u884c\u5904\u7406\u3002 if __name__ == \"__main__\": # create a socket: Ipv4, TCP s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # bind a port s.bind(('127.0.0.1', 9999)) # listen a port, argument is max connection count s.listen(5) print(\"waiting for connection...\") # accept connection from client while True: # accept a new conection sock, addr = s.accept() # create a new thread to handle TCP connection t = threading.Thread(target=tcplink, args=(sock, addr)) t.start() \u5904\u7406\u903b\u8f91\uff1a\u9996\u5148\u53d1\u9001\u6b22\u8fce\u6d88\u606f\uff0c\u7136\u540e\u63a5\u53d7\u5ba2\u6237\u7aef\u6d88\u606f\uff0c\u5982\u679c\u662f exit \u5b57\u7b26\u4e32\u5c31\u5173\u95ed\u8fde\u63a5\uff0c\u5426\u5219\u5c31\u53d1\u9001\u6d88\u606f\u5230\u5ba2\u6237\u7aef\u3002 def tcplink(sock, addr): print('Accept new connection from %s:%s...' % addr) sock.send(b\"Welcome!\") while True: data = sock.recv(1024) time.sleep(1) if not data or data.decode('utf-8') == 'exit': break sock.send((f\"hello {data.decode('utf-8')}\").encode('utf-8')) sock.close() print(\"Connection from %s:%s closed.\" % addr) \u5728\u5ba2\u6237\u7aef\uff0c\u540c\u6837\u5904\u7406\uff1a # create a socket s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect(('127.0.0.1', 9999)) # send requests print(s.recv(1024).decode('utf-8')) for data in [b\"Alice\", b\"Bob\", b\"Mary\"]: s.send(data) print(s.recv(1024).decode('utf-8')) s.send(b'exit') s.close() \u6267\u884c\u7ed3\u679c\uff1a\u5728\u670d\u52a1\u5668\u7aef\u5148\u6267\u884c\uff0c\u4f1a\u7b49\u5f85\u5ba2\u6237\u7aef\u6765\u8fde\u63a5\uff0c\u6267\u884c\u5ba2\u6237\u7aef\u4ee3\u7801\u540e\u8fde\u63a5\u6210\u529f\u670d\u52a1\u7aef\u65b0\u5efa\u7ebf\u7a0b\u5904\u7406\uff0c\u5ba2\u6237\u7aef\u6536\u5230\u6b22\u8fce\u6d88\u606f\uff0c\u5ba2\u6237\u7aef\u4f9d\u6b21\u53d1\u9001\u5e76\u63a5\u53d7\u6d88\u606f\uff0c\u670d\u52a1\u7aef\u4f9d\u6b21\u63a5\u53d7\u5e76\u53d1\u9001\u6d88\u606f\uff0c\u76f4\u5230\u6536\u5230 exit \u5173\u95ed\u8fde\u63a5\u3002\u670d\u52a1\u7aef\u5904\u7406\u7ebf\u7a0b\u7ed3\u675f\uff0c\u4e3b\u7ebf\u7a0b\u4f9d\u7136\u5904\u4e8e\u7b49\u5f85\u8fde\u63a5\u72b6\u6001\u3002 UDP\u7f16\u7a0b\uff1a - UDP\u662f\u4e0d\u53ef\u9760\u4f20\u8f93\uff0c\u4e0d\u9700\u8981\u5efa\u7acb\u8fde\u63a5\uff0c\u53ea\u9700\u8981\u76f4\u5230\u5bf9\u65b9\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u53d1\u9001\u6570\u636e\u5305\u3002\u4f46\u662f\u80fd\u4e0d\u80fd\u5230\u8fbe\u662f\u4e0d\u77e5\u9053\u7684\u3002 - \u867d\u7136\u4f20\u8f93\u4e0d\u53ef\u9760\uff0c\u4f46\u4f18\u70b9\u662f\u76f8\u6bd4TCP\u66f4\u5feb\u3002 - \u670d\u52a1\u7aef\uff1a\u4e0d\u9700\u8981\u76d1\u542c\uff0c\u53d1\u9001\u4e4b\u524d\u4e5f\u4e0d\u9700\u8981\u8fde\u63a5\uff0c\u8fd9\u91cc\u6bd4\u8f83\u7b80\u5355\uff0c\u4e5f\u4e0d\u7528\u591a\u7ebf\u7a0b\u5904\u7406\u3002 import socket # create a socket: IPv4, UDP s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # bind to port s.bind(('127.0.0.1', 9999)) print(\"Bind UDP on 9999...\") # do not need listen, just receive while True: data, addr = s.recvfrom(1024) print(\"Received from %s:%s\" % addr) s.sendto(b'hello, %s' % data, addr) \u5ba2\u6237\u7aef\uff1a\u4e0d\u9700\u8981\u8fde\u63a5\uff0c\u76f4\u63a5\u7ed9\u670d\u52a1\u5668\u53d1\u9001\u6570\u636e\u3002 import socket # IPv4, UDP s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) for data in [b\"Alice\", b\"Bob\", b\"Mary\"]: s.sendto(data, ('127.0.0.1', 9999)) print(s.recv(1024).decode('utf-8')) s.close() \u670d\u52a1\u5668\u7ed1\u5b9aUDP\u7aef\u53e3\u548cTCP\u7aef\u53e3\u4e92\u4e0d\u51b2\u7a81\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cUDP\u76849999\u7aef\u53e3\u4e0eTCP\u76849999\u7aef\u53e3\u53ef\u4ee5\u5404\u81ea\u7ed1\u5b9a\u3002","title":"\u7f51\u8def\u7f16\u7a0b"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_17","text":"\u7535\u5b50\u90ae\u4ef6\u7684\u4f20\u9012\u6d41\u7a0b\uff1a - \u5199\u597d\u4e00\u5c01\u90ae\u4ef6\u4e4b\u540e\uff0c\u4ece\u90ae\u4ef6\u8f6f\u4ef6\uff08\u79f0\u4e4b\u4e3aMUA\uff1aMail User Agent\uff0c\u90ae\u4ef6\u7528\u6237\u4ee3\u7406\uff09\u53d1\u9001\u3002 - \u4eceMUA\u53d1\u51fa\u540e\uff0c\u4e0d\u662f\u76f4\u63a5\u9001\u8fbe\u5bf9\u65b9\u7535\u8111\uff0c\u800c\u662f\u5148\u9001\u5230MTA\uff1aMail Transfer Agent\uff0c\u90ae\u4ef6\u4f20\u8f93\u4ee3\u7406\uff0c\u4e5f\u5c31\u662f\u81ea\u5df1\u7528\u7684\u4ec0\u4e48\u90ae\u4ef6\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u90ae\u4ef6\u5c31\u5230\u54ea\u513f\u3002\u6bd4\u5982 163.com \u90a3\u5c31\u5148\u6295\u9012\u5230\u7f51\u6613\u7684MTA\u3002 - \u7136\u540e\u4ece\u81ea\u5df1\u7684MTA\u5bf9\u65b9\u7684MTA\uff08\u4e2d\u95f4\u53ef\u80fd\u8fd8\u4f1a\u7ecf\u8fc7\u5176\u4ed6MTA\uff09\uff0c\u7136\u540e\u800c\u5bf9\u65b9\u7684MTA\u4f1a\u628a\u90ae\u4ef6\u6295\u9012\u5230\u6700\u7ec8\u76ee\u7684\u5730\uff1aMDA\uff0cMail Delivery Agent\uff0c\u90ae\u4ef6\u6295\u9012\u4ee3\u7406\u3002 - \u56e0\u4e3a\u5bf9\u65b9\u4e0d\u4e00\u5b9a\u5728\u7ebf\uff0c\u6240\u4ee5\u67d0\u4e2a\u65f6\u523b\u5728MUA\u4e0a\u767b\u5f55\u90ae\u7bb1\u4e4b\u540e\u9700\u8981\u4eceMDA\u4e0a\u628a\u90ae\u4ef6\u53d6\u5230\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u3002 - \u6240\u4ee5\u5927\u6982\u7684\u6d41\u7a0b\u662f\uff1a \u53d1\u4ef6\u4eba -> MUA -> MTA -> MTA -> \u82e5\u5e72\u4e2aMTA -> MDA <- MUA <- \u6536\u4ef6\u4eba - \u8981\u7f16\u5199\u7a0b\u5e8f\u6765\u53d1\u9001\u63a5\u6536\u90ae\u4ef6\uff0c\u672c\u8d28\u4e0a\u5c31\u662f\uff1a - \u7f16\u5199MUA\u628a\u90ae\u4ef6\u53d1\u5230MTA\u3002 - \u7f16\u5199MUA\u4eceMDA\u4e0a\u6536\u90ae\u4ef6\u3002 \u90ae\u4ef6\u534f\u8bae\uff1a - \u53d1\u90ae\u4ef6\u65f6\uff0cMUA\u548cMTA\u4f7f\u7528\u7684\u534f\u8bae\u662f SMTP \uff1aSimple Mail Transfer Protocol\uff0cMTA\u5230\u53e6\u4e00\u4e2aMTA\u4e5f\u662fSMTP\u3002 - \u6536\u90ae\u4ef6\u65f6\uff0cMUA\u548cMDA\u4f7f\u7528\u7684\u534f\u8bae\u6709\u4e24\u79cd\u3002\u7b2c\u4e00\u79cdPOP\uff1aPost Office Protocol\uff0c\u76ee\u524d\u7248\u672c\u662f3\uff0c\u4fd7\u79f0 POP3 \u3002\u7b2c\u4e8c\u79cd IMAP \uff1aInternet Message Access Protocol\uff0c\u76ee\u524d\u7248\u672c\u662f4\uff0c\u4e0d\u4f46\u80fd\u53d6\u90ae\u4ef6\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5cMDA\u4e0a\u5b58\u50a8\u7684\u90ae\u4ef6\uff0c\u6bd4\u5982\u4ece\u6536\u4ef6\u7bb1\u79fb\u5230\u5783\u573e\u7bb1\u7b49\u3002 - \u76ee\u524d\u5927\u591a\u6570\u90ae\u4ef6\u670d\u52a1\u5546\u90fd\u9700\u8981\u624b\u52a8\u6253\u5f00SMTP\u53d1\u4fe1\u548cPOP\u6536\u4fe1\u529f\u80fd\uff0c\u5426\u5219\u53ea\u5141\u8bb8\u7f51\u9875\u767b\u5f55\u4f7f\u7528\u3002 SMTP\u53d1\u9001\u90ae\u4ef6\uff1a - Python\u5185\u7f6e\u5bf9SMTP\u7684\u652f\u6301\uff0c\u53ef\u4ee5\u53d1\u9001\u7eaf\u6587\u672c\u90ae\u4ef6\u3001HTML\u90ae\u4ef6\u3001\u5e26\u9644\u4ef6\u7684\u90ae\u4ef6\u3002 - \u4e24\u4e2a\u6a21\u5757 smtplib \u548c email \uff0c\u524d\u8005\u6784\u9020\u90ae\u4ef6\uff0c\u540e\u8005\u53d1\u9001\u90ae\u4ef6\u3002 from email.mime.text import MIMEText from email.header import Header from email.utils import parseaddr, formataddr def _format_addr(s): name, addr = parseaddr(s) return formataddr((Header(name, 'utf-8').encode(), addr)) # input email and passwd from_addr = input('From: ') password = input('password: ') to_addr = input('To: ') # input SMTP server address smtp_server = input('SMTP server: ') # plain text email msg = MIMEText(\"hello, send by Python...\", 'Plain', 'utf-8') msg['From'] = _format_addr('\u6697\u4e4b\u6076\u9b54 <%s>' % from_addr) # \u53d1\u4ef6\u4eba msg['To'] = _format_addr('\u5149\u4e4b\u4f7f\u8005 <%s>' % to_addr) # \u6536\u4ef6\u4eba msg['Subject'] = Header(\"\u63a5\u53d7\u5730\u72f1\u7684\u5ba1\u5224\u5427\uff01\", 'utf-8').encode() # \u4e3b\u9898 # send to MTA import smtplib server = smtplib.SMTP(smtp_server, 25) server.set_debuglevel(1) # print interactive info with the server server.login(from_addr, password) server.sendmail(from_addr, [to_addr], msg.as_string()) server.quit() \u53d1\u4ef6\u4eba\u548c\u6536\u4ef6\u4eba\u683c\u5f0f\u65f6 name <xxx@xxx.com> \uff0c\u4e0d\u80fd\u76f4\u63a5\u53d1\u4e2d\u6587\uff0c\u9700\u8981\u4f7f\u7528 Header \u8fdb\u884c\u7f16\u7801\u3002 \u5bc6\u7801\u5e76\u4e0d\u4e00\u5b9a\u5c31\u662f\u90ae\u7bb1\u5bc6\u7801\uff0c\u6bd4\u5982QQ\u90ae\u7bb1\u5c31\u662f\u5176\u751f\u6210\u7684\u4e00\u4e2a\u7528\u4e8e\u7b2c\u4e09\u65b9\u767b\u5f55\u7684\u6388\u6743\u7801\u3002 \u4e0a\u8ff0\u4ee3\u7801\u8f93\u5165\u4fe1\u606f\u65f6\u53ef\u4ee5\u4f7f\u7528\u6587\u4ef6\u8f93\u5165\u91cd\u5b9a\u5411\uff0c\u4e0d\u5fc5\u6bcf\u4e00\u6b21\u90fd\u91cd\u65b0\u8f93\u5165\u3002 \u8981\u6709\u53d1\u4ef6\u4eba\u3001\u6536\u4ef6\u4eba\u3001\u4e3b\u9898\u624d\u662f\u4e00\u5c01\u5b8c\u6574\u7684\u90ae\u4ef6\uff0c\u6ca1\u6709\u4e5f\u53ef\u4ee5\u53d1\u3002 \u5982\u679c\u8981\u53d1\u9001\u9644\u4ef6\uff0c\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a MIMEMultipart \uff0c\u5728\u5176\u4e2d\u6dfb\u52a0\u4e00\u4e2a MIMEText \u4f5c\u4e3a\u6b63\u6587\uff0c\u5728\u7ee7\u7eed\u52a0\u4e0a\u8868\u793a\u9644\u52a0\u7684 MIMEBase \u5bf9\u8c61\u5373\u53ef\u3002 \u9664\u4e86\u53d1\u9001\u7eaf\u6587\u672c\uff0c\u4e5f\u53ef\u4ee5\u53d1\u9001html\u90ae\u4ef6\uff0c\u90ae\u4ef6\u5185\u5bb9\u5c31\u662f\u4e00\u4e2a\u7f51\u9875\uff0c\u5982\u679c\u8981\u5728\u5176\u4e2d\u5d4c\u5165\u56fe\u7247\uff0c\u7531\u4e8e\u5927\u90e8\u5206\u90ae\u4ef6\u670d\u52a1\u5546\u4f1a\u81ea\u52a8\u5c4f\u853d\u5e26\u6709\u5916\u94fe\u7684\u56fe\u7247\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053\u662f\u5426\u6307\u5411\u6076\u610f\u7f51\u7ad9\u3002\u53ef\u4ee5\u5728HTML\u4e2d\u901a\u8fc7\u5f15\u7528 src=\"cid:x\" \uff08x\u4e3a\u56fe\u7247\u7f16\u53f7\uff09\u5c31\u53ef\u4ee5\u628a\u9644\u52a0\u4f5c\u4e3a\u56fe\u7247\u63d2\u5165\u4e86\u3002 \u66f4\u591a\u4fe1\u606f\u67e5\u770b\u6587\u6863\u83b7\u53d6\u3002 POP3\u6536\u53d6\u90ae\u4ef6\uff1a - \u5206\u4e24\u6b65\uff1a\u7528 poplib \u628a\u90ae\u4ef6\u539f\u59cb\u6587\u672c\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u7b2c\u4e8c\u6b65\uff0c\u7528 email \u89e3\u6790\u539f\u59cb\u6587\u672c\uff0c\u8fd8\u539f\u4e3a\u90ae\u4ef6\u5bf9\u8c61\u3002 # input email email = input('Email: ') password = input('Password: ') pop3_server = input('POP3 server: ') # connect to POP3 server server = poplib.POP3(pop3_server) server.set_debuglevel(1) print(server.getwelcome().decode('utf-8')) # authentication server.user(email) server.pass_(password) # email number and space print('Message: %s, Size: %s', server.stat()) # get numbers of all mails resp, mails, octets = server.list() print(mails) # get newest mail index = len(mails) resp, lines, octets = server.retr(index) # get raw content of mail msg_content = b'\\r\\n'.join(lines).decode('utf-8') # parse mail content msg = Parser().parsestr(msg_content) server.quit() \u540e\u7eed\u7684\u89e3\u6790\u903b\u8f91\u5c31\u7701\u7565\u4e86\uff0c\u53ef\u67e5\u770bPython\u5206\u652f\u6216\u8005 \u5ed6\u96ea\u5cf0\u7684\u6559\u7a0b \u83b7\u53d6\u3002","title":"\u7535\u5b50\u90ae\u4ef6"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_18","text":"\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\uff0c\u6570\u636e\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\uff0c\u4f46\u5f53\u7a0b\u5e8f\u7ed3\u675f\u540e\uff0c\u6570\u636e\u65e0\u8bba\u4ee5\u4f55\u79cd\u5f62\u5f0f\u6700\u7ec8\u90fd\u4f1a\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\uff0c\u5982\u4f55\u5b9a\u4e49\u5b58\u50a8\u683c\u5f0f\u5c31\u6210\u4e3a\u4e86\u95ee\u9898\uff0c\u53ef\u4ee5\u662f\u6807\u51c6\u5316\u7684\u683c\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49\u683c\u5f0f\u3002\u5f53\u518d\u6b21\u8fd0\u884c\u7a0b\u5e8f\u9700\u8981\u8bfb\u5165\u6587\u4ef6\u65f6\uff0c\u5c31\u9700\u8981\u5c06\u6570\u636e\u5168\u90e8\u8bfb\u5165\u5185\u5b58\uff0c\u5982\u679c\u6570\u636e\u8fdc\u8d85\u5185\u5b58\u5927\u5c0f\uff0c\u5c31\u6839\u672c\u65e0\u6cd5\u5168\u90e8\u8bfb\u5165\u5185\u5b58\u3002 - \u6b64\u80cc\u666f\u4e0b\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u6570\u636e\u7684\u4fdd\u5b58\u3001\u8bfb\u53d6\u548c\u65b9\u4fbf\u7684\u67e5\u8be2\uff0c\u5c31\u51fa\u73b0\u4e86\u6570\u636e\u5e93\uff08Database\uff09\u8fd9\u79cd\u4e13\u95e8\u7528\u4e8e\u96c6\u4e2d\u5b58\u50a8\u548c\u67e5\u8be2\u7684\u8f6f\u4ef6\u3002 - \u6570\u636e\u5e93\u8bde\u751f\u5386\u53f2\u5f88\u4e45\u8fdc\uff0c\u65e9\u4e8e1950\u5e74\u5c31\u8bde\u751f\u4e86\uff0c\u7ecf\u5386\u4e86\u7f51\u72b6\u6570\u636e\u5e93\uff0c\u5c42\u6b21\u6570\u636e\u5e93\uff0c\u6211\u4eec\u73b0\u5728\u5e7f\u6cdb\u4f7f\u7528\u7684\u5173\u7cfb\u6570\u636e\u5e93\u662f20\u4e16\u7eaa70\u5e74\u4ee3\u57fa\u4e8e\u5173\u7cfb\u6a21\u578b\u7684\u57fa\u7840\u4e0a\u8bde\u751f\u7684\u3002 - \u5173\u7cfb\u6a21\u578b\u6709\u4e00\u5957\u590d\u6742\u7684\u6570\u5b66\u7406\u8bba\u3002 - \u5173\u7cfb\u6570\u636e\u5e93\u4e2d\uff0c\u57fa\u4e8e\u8868\u7684\u4e00\u5bf9\u591a\u5173\u7cfb\u662f\u57fa\u7840\u3002\u4e00\u4e2a\u8868\u4e2d\u7684\u4e00\u884c\u8bb0\u5f55\u5c31\u67d0\u4e00\u9879\u800c\u8a00\u53ef\u80fd\u5bf9\u5e94\u4e8e\u53e6\u4e00\u5f20\u8868\u7684\u591a\u884c\u8bb0\u5f55\u3002 - \u5173\u7cfb\u6570\u636e\u5e93\u6709\u8bbf\u95ee\u548c\u5904\u7406\u7684\u9886\u57df\u7279\u5b9a\u8bed\u8a00SQL\u3002\u65e0\u8bba\u4ec0\u4e48\u7f16\u7a0b\u8bed\u8a00\uff0c\u6d89\u53ca\u5230\u64cd\u4f5c\u6570\u636e\u5e93\uff0c\u57fa\u672c\u90fd\u662f\u901a\u8fc7SQL\u6765\u5b8c\u6210\uff0c \u5ed6\u96ea\u5cf0\u6559\u7a0b \u3002 - \u76ee\u524d\u4f7f\u7528\u5e7f\u6cdb\u7684\u5546\u7528\u95ed\u6e90\u4ed8\u8d39\u5173\u7cfb\u6570\u636e\u5e93\uff1aOracle\uff0c\u5fae\u8f6f\u7684SQL Server\uff0cIBM\u7684DB2\u7b49\u3002 - \u5f00\u6e90\u6570\u636e\u5e93\u76f8\u5bf9\u6765\u8bf4\u4f7f\u7528\u66f4\u4e3a\u5e7f\u6cdb\uff1a\u4f7f\u7528\u5e7f\u6cdb\u7684MySQL\uff0c\u5b66\u672f\u6c14\u606f\u633a\u91cd\u7684PostgreSQL\uff0c\u9002\u5408\u684c\u9762\u548c\u79fb\u52a8\u5e94\u7528\u7684\u5d4c\u5165\u5f0f\u6570\u636e\u5e93sqlite\u3002 - MySQL\u4f7f\u7528\u6700\u591a\uff0c\u4e00\u822c\u4f5c\u4e3a\u9996\u9009\uff0c MySQL Community Server\u514d\u8d39\u4e0b\u8f7d \u3002\u66f4\u591aMySQL\u4e0eSQL\u8bed\u8a00\u7684\u4e1c\u897f\u53ef\u4ee5\u770b SQL.md \u3002 \u4f7f\u7528SQLite\uff1a - SQLite\u662f\u4e00\u79cd\u5d4c\u5165\u5f0f\u6570\u636e\u5e93\uff0c\u5b83\u7684\u6570\u636e\u5e93\u5c31\u662f\u4e00\u4e2a\u6587\u4ef6\u3002\u7531\u4e8eSQLite\u672c\u8eab\u662fC\u5199\u7684\uff0c\u800c\u4e14\u4f53\u79ef\u5f88\u5c0f\uff0c\u6240\u4ee5\uff0c\u7ecf\u5e38\u88ab\u96c6\u6210\u5230\u5404\u79cd\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u751a\u81f3\u5728iOS\u548cAndroid\u7684App\u4e2d\u90fd\u53ef\u4ee5\u96c6\u6210\u3002 - Python\u5c31\u5185\u7f6e\u4e86SQLite3\uff0c\u6240\u4ee5\uff0c\u5728Python\u4e2d\u4f7f\u7528SQLite\uff0c\u4e0d\u9700\u8981\u5b89\u88c5\u4efb\u4f55\u4e1c\u897f\uff0c\u76f4\u63a5\u4f7f\u7528\u3002 - sqlite3\u5e93\u6587\u6863 \u3002 - \u8bbf\u95ee SQLite\u4e3b\u9875 \u67e5\u8be2\u652f\u6301\u7684SQL\u65b9\u8a00\u8bed\u6cd5\u4e0e\u53ef\u7528\u6570\u636e\u7c7b\u578b\u3002 - \u9996\u5148\u8981\u660e\u786e\u7684\u6982\u5ff5\uff1a - \u8981\u64cd\u4f5c\u5173\u7cfb\u6570\u636e\u5e93\uff0c\u9996\u5148\u9700\u8981\u8fde\u63a5\u5230\u6570\u636e\u5e93\uff0c\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u79f0\u4e3a Connection \u3002 - \u8fde\u63a5\u5230\u6570\u636e\u5e93\u540e\uff0c\u9700\u8981\u6253\u5f00\u6e38\u6807\uff0c\u79f0\u4e4b\u4e3a Cursor \uff0c\u901a\u8fc7 Cursor \u6267\u884cSQL\u8bed\u53e5\uff0c\u7136\u540e\uff0c\u83b7\u5f97\u6267\u884c\u7ed3\u679c\u3002 - Python\u5b9a\u4e49\u4e86\u4e00\u5957\u64cd\u4f5c\u6570\u636e\u5e93\u7684API\u63a5\u53e3\uff0c\u4efb\u4f55\u6570\u636e\u5e93\u8981\u8fde\u63a5\u5230Python\uff0c\u53ea\u9700\u8981\u63d0\u4f9b\u7b26\u5408Python\u6807\u51c6\u7684\u6570\u636e\u5e93\u9a71\u52a8\u5373\u53ef\u3002 - \u7531\u4e8eSQLite\u7684\u9a71\u52a8\u5185\u7f6e\u5728Python\u6807\u51c6\u5e93\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6765\u64cd\u4f5cSQLite\u6570\u636e\u5e93\u3002 import sqlite3 # connect to sqlite3 database, the database is file test.db, if not exist, will create a new file with sqlite3.connect('test.db') as conn: # creat a cursor cursor = conn.cursor() # execute SQL cursor.execute('drop table if exists user') cursor.execute('create table user (id varchar(20) primary key, name varchar(20), score int)') cursor.execute(r'insert into user (id, name, score) values (\"1\", \"Michael\", 90)') cursor.execute(r'insert into user (id, name, score) values (\"2\", \"Kim\", 80)') cursor.execute(r'insert into user (id, name, score) values (\"3\", \"Bob\", 65)') print(cursor.rowcount) # querys cursor.execute('select * from user where id=? or id=?', ('1','2')) values = cursor.fetchall() print(values) # close cursor.close() # not necessary, __del__ will close automatically conn.commit() def get_score_in(con, min, max): cursor = conn.cursor() cursor.execute(r'select name from user where score >= ? and score <= ?', (min, max)) values = cursor.fetchall() cursor.close() return [v[0] for v in values] assert get_score_in(conn, 85, 100) == ['Michael'] assert get_score_in(conn, 70, 100) == ['Michael', 'Kim'] assert get_score_in(conn, 60, 100) == ['Michael', 'Kim', 'Bob'] \u4f7f\u7528Python\u7684DB-API\u65f6\uff0c\u53ea\u8981\u641e\u6e05\u695a Connection \u548c Cursor \u5bf9\u8c61\uff0c\u6253\u5f00\u540e\u4e00\u5b9a\u8bb0\u5f97\u5173\u95ed\uff0c\u5c31\u53ef\u4ee5\u653e\u5fc3\u5730\u4f7f\u7528\u3002 \u4f7f\u7528 Cursor \u5bf9\u8c61\u6267\u884c insert update delete \u8bed\u53e5\uff0c\u6267\u884c\u7ed3\u679c\u7531 rowcount \u8fd4\u56de\u5f71\u54cd\u7684\u884c\u6570\u3002 \u4f7f\u7528 Cursor \u6267\u884c select \u65f6\uff0c\u4f7f\u7528 fetchall \u62ff\u5230\u7ed3\u679c\u96c6\u3002\u7ed3\u679c\u96c6\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u5143\u7d20\u662f\u5143\u7ec4\uff0c\u5bf9\u5e94\u4e8e\u6bcf\u4e00\u884c\u8bb0\u5f55\u3002 SQL\u8bed\u53e5\u5e26\u6709\u53c2\u6570\u65f6\u4f7f\u7528 ? \u4f5c\u4e3a\u5360\u4f4d\u7b26\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5143\u7ec4\u5143\u7d20\u5bf9\u5e94\u4f20\u5165\uff0c\u6709\u51e0\u4e2a\u5360\u4f4d\u7b26\u5c31\u9700\u8981\u51e0\u4e2a\u53c2\u6570\u3002\u800c\u4e0d\u5e94\u8be5\u4f7f\u7528Python\u81ea\u5e26\u7684\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u8fd9\u6837\u4f1a\u6709SQL\u6ce8\u5165\u7684\u98ce\u9669\u3002 \u9700\u8981\u786e\u4fdd\u6253\u5f00\u7684 Connection \u5bf9\u8c61\u80fd\u591f\u6b63\u786e\u5173\u95ed\u3002\u53ef\u4ee5\u4f7f\u7528 try...except..finally \u6216\u8005 with \u3002 \u4f7f\u7528MySQL\uff1a - \u786e\u4fdd\u672c\u5730\u5b89\u88c5\u7684MySQL\u914d\u7f6e\u652f\u6301utf-8\u3002 - show variables like '%char%'; \uff0c\u5176\u4e2d\u6709\u5f88\u591a\u9879\uff0c\u5982\u679c\u767b\u5f55 mysql \u7684\u7ec8\u7aef\u4fee\u6539\u4e86\u5b57\u7b26\u9875\u4e3a65001\uff0c\u90a3\u4e48\u6309\u9053\u7406\u6765\u8bf4\u5e94\u8be5\u662f\u5168\u90fd\u662futf-8\u3002\u5177\u4f53\u7f16\u7801\u95ee\u9898\u8fd9\u91cc\u4e0d\u7ec6\u7a76\uff0c\u786e\u4fdd\u652f\u6301\u4e2d\u6587\u5c31\u884c\u3002 mysql> show variables like 'char%'; +--------------------------+---------------------------------------------------------+ | Variable_name | Value | +--------------------------+---------------------------------------------------------+ | character_set_client | utf8mb4 | | character_set_connection | utf8mb4 | | character_set_database | utf8mb4 | | character_set_filesystem | binary | | character_set_results | utf8mb4 | | character_set_server | utf8mb4 | | character_set_system | utf8mb3 | | character_sets_dir | C:\\Program Files\\MySQL\\MySQL Server 8.0\\share\\charsets\\ | +--------------------------+---------------------------------------------------------+ MySQL\u7684utf-8\u5e76\u4e0d\u662f\u5b8c\u6574\u7684utf-8\uff0c\u6700\u591a\u53ea\u652f\u63013\u4e2a\u5b57\u8282\u7f16\u7801\uff0c\u4e0d\u652f\u63014\u4e2a\u5b57\u8282\u7f16\u7801\uff0c\u6700\u65b0\u7684utfmb4\u5219\u662f\u5b8c\u6574\u7684utf-8\u3002 \u5b89\u88c5 MySQL\u5b98\u65b9\u9a71\u52a8 \uff1a pip install mysql-connector \u4f7f\u7528\uff1a\u540c\u6837\u901a\u8fc7Python\u7684DB API\u4f7f\u7528\uff0c\u4f7f\u7528 mysql.connector.connect() \u83b7\u53d6\u8fde\u63a5\u4e4b\u540e\u5373\u53ef\u4f7f\u7528\u3002 import mysql.connector conn = mysql.connector.connect(user = 'root', password = 'password', database = 'test') \u8fde\u63a5\u65f6\u53ef\u80fd\u51fa\u73b0 mysql.connector.errors.NotSupportedError: Authentication plugin 'caching_sha2_password' is not supported \u9519\u8bef\uff0c\u53ef\u4ee5 \u53c2\u8003\u8fd9\u91cc : \u539f\u56e0\u5c31\u662fMySQL8.0\u4e2d\u9a8c\u8bc1\u63d2\u4ef6\u548c\u5bc6\u7801\u52a0\u5bc6\u7684\u65b9\u5f0f\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u7531\u4e4b\u524d\u7248\u672c\u7684 mysql_native_password \u53d8\u66f4\u4e3a\u4e86 caching_sha2_password \u3002 \u89e3\u51b3\u65b9\u68481\u662f\u5b89\u88c5 mysql-connector-python \u63d2\u4ef6\u3002 2\u662f\u4fee\u6539MySQL\u914d\u7f6e my.ini \u4e2d\u9a8c\u8bc1\u65b9\u5f0f\u6539\u56de\u4ee5\u524d\u7684\uff0c\u5e76\u4e14\u5728 connect \u65f6\u6dfb\u52a0\u53c2\u6570 auth_plugin='mysql_native_password' \u3002 \u80fd\u89e3\u51b3\u5373\u53ef\uff0c\u8fd9\u91cc\u9009\u62e91\u3002 \u53ef\u4ee5\u4f7f\u7528 fetchall fetchmany \u7b49\u63a5\u53e3\u83b7\u53d6 cursor \u6267\u884c\u7ed3\u679c\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5bf9 cursor \u8fdb\u884c\u8fed\u4ee3\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528 pymysql \u6a21\u5757\uff0c \u6587\u6863 \uff0c\u540c\u6837\u4f7f\u7528DB API\uff1a import pymysql conn = pymysql.connect(user = 'root', password = 'password', database = 'test') \u4f7f\u7528 SQLAlchemy \uff1a - \u5b89\u88c5\uff1a pip install SQLAlchemy - \u524d\u9762\u7684\u4f7f\u7528Python DB API\u64cd\u4f5c\u7ed3\u679c\u90fd\u662f\u8fd4\u56de\u4e00\u4e2a list \uff0c\u6bcf\u4e00\u6761\u8bb0\u5f55\u662f\u4e00\u4e2a tuple \u4f5c\u4e3a\u5143\u7d20\u3002\u4f7f\u7528\u5143\u7ec4\u5f88\u96be\u770b\u51fa\u8868\u7684\u7ed3\u6784\uff0c\u5982\u679c\u5c06\u4e00\u4e2a\u8bb0\u5f55\u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u8868\u793a\u51fa\u6765\uff0c\u4f1a\u66f4\u52a0\u76f4\u89c2\u4e00\u4e9b\u3002\u4e5f\u5c31\u662f\u4f20\u8bf4\u4e2d\u7684ORM\u6280\u672f\uff08Object-Relational Mapping\uff0c\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff09\u3002\u8fd9\u4e2a\u8f6c\u6362\u7531ORM\u6846\u67b6\u6765\u505a\u3002 - Python\u4e2d\u6700\u6709\u540d\u7684ORM\u6846\u67b6\u5c31\u662f SQLAlchemy \u3002 - \u57fa\u672c\u4f7f\u7528\uff1a from sqlalchemy import Column, String, create_engine from sqlalchemy.orm import sessionmaker from sqlalchemy.ext.declarative import declarative_base from sqlalchemy.sql.ddl import DDLBase # create a base class Base = declarative_base() # define ORM class class User(Base): # table name __tablename__ = 'user' # table structrue di = Column(String(20), primary_key=True) name = Column(String(20)) # initialize database connection # databse+connector://user:password@host:port/database engine = create_engine('mysql+mysqlconnector://root:password@localhost:3306/test') # create DBSession object DDSession = sessionmaker(bind=engine) \u4e0a\u9762\u4ee3\u7801\u5b8c\u6210SQLAlchemy\u521d\u59cb\u5316\u548c\u5177\u4f53\u8868\u7684\u5b9a\u4e49\uff0c\u6709\u591a\u4e2a\u8868\u5c31\u4ece Base \u6d3e\u751f\u5176\u4ed6\u7c7b\u3002 create_engine \u521d\u59cb\u5316\u6570\u636e\u5e93\u8fde\u63a5\u3002\u7528\u4ee5\u5b57\u7b26\u4e32\u8868\u793a\u8fde\u63a5\u4fe1\u606f\uff1a '\u6570\u636e\u5e93\u7c7b\u578b+\u6570\u636e\u5e93\u9a71\u52a8\u540d\u79f0://\u7528\u6237\u540d:\u53e3\u4ee4@\u673a\u5668\u5730\u5740:\u7aef\u53e3\u53f7/\u6570\u636e\u5e93\u540d' \u6709\u4e86ORM\uff0c\u6211\u4eec\u5411\u6570\u636e\u5e93\u8868\u4e2d\u6dfb\u52a0\u4e00\u884c\u8bb0\u5f55\uff0c\u53ef\u4ee5\u89c6\u4e3a\u6dfb\u52a0\u4e00\u4e2aUser\u5bf9\u8c61\u3002 \u6dfb\u52a0\u8bb0\u5f55\u7684\u8bdd\uff0c\u901a\u8fc7\u50cf\u4f1a\u8bdd\u4e2d\u6dfb\u52a0\u5bf9\u8c61\u5373\u53ef\uff1a # create DbSession object session = DBSession() # create new User object new_user = User(id = '5', name = 'Bob') # add to session session.add(new_user) # commit to database session.commit() session.close() \u67e5\u8be2\u4f7f\u7528 session.query() \uff1a session = DBSession() user = session.query(User).filter(User.id == 5).one() print('type: ', type(user)) print('name: ', user.name) session.close() \u5982\u679c\u8fd8\u6ca1\u6709\u8868\u7684\u8bdd\uff0c\u53ef\u4ee5\u5148\u521b\u5efa\u8868\uff0c\u4f1a\u521b\u5efa\u6240\u6709\u4ece Base \u6d3e\u751f\u7684\u7c7b\u5bf9\u5e94\u7684\u8868\uff1a Base.metadata.create_all(engine) \u53ef\u4ee5\u914d\u5408\u53e6\u4e00\u4e2a\u5e93 SQLAlchemy-utils \u4f7f\u7528\uff0c\u4e3aSQLAlchemy\u63d0\u4f9b\u4e86\u4e00\u4e9b\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u548c\u5e93\uff0c \u6587\u6863 \u3002 \u66f4\u591a\u64cd\u4f5c\u8fd8\u9700\u8981\u770b\u6587\u6863\u7814\u7a76\u3002 ORM\u6846\u67b6\u7684\u4f5c\u7528\u5c31\u662f\u628a\u6570\u636e\u5e93\u8868\u7684\u4e00\u884c\u8bb0\u5f55\u4e0e\u4e00\u4e2a\u5bf9\u8c61\u4e92\u76f8\u505a\u81ea\u52a8\u8f6c\u6362\u3002 \u6b63\u786e\u4f7f\u7528ORM\u7684\u524d\u63d0\u662f\u4e86\u89e3\u5173\u7cfb\u6570\u636e\u5e93\u7684\u539f\u7406\u3002 TODO\uff1a - \u6bcf\u4e2a\u5e93\u7684\u4f7f\u7528\u90fd\u4e0d\u80fd\u8bf4\u7b80\u5355\uff0c\u90fd\u4f7f\u7528DB API\u7684\u64cd\u4f5c\u8fd8\u8fd8\u8bf4\uff0c\u4f46SqlAlchemy\u8981\u4f7f\u7528\u65f6\u9700\u8981\u4e0b\u529f\u592b\u7684\u3002\u8fd9\u91cc\u53ea\u662f\u6700\u57fa\u672c\u64cd\u4f5c\uff0c\u8981\u719f\u7ec3\u5728\u9879\u76ee\u4e2d\u4f7f\u7528\u90fd\u9700\u8981\u9605\u8bfb\u6587\u6863\u8e29\u5751\u3002\u5177\u4f53\u6709\u5b9e\u8df5\u9700\u6c42\u65f6\u518d\u6765\u505a\u8fd9\u4e9b\u4e8b\u60c5\u3002","title":"\u6570\u636e\u5e93"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#web","text":"Web\u5e94\u7528\uff1a - \u8f6f\u4ef6\u8fd0\u884c\u5728\u684c\u9762\u5ba2\u6237\u7aef\u4e0a\uff0c\u800c\u6570\u636e\u5e93\u8fd9\u79cd\u670d\u52a1\u578b\u7684\u8f6f\u4ef6\u8fd0\u884c\u5728\u670d\u52a1\u5668\u7aef\uff0c\u8fd9\u79cdClient/Server\u6a21\u5f0f\u79f0\u4e3aCS\u67b6\u6784\u3002 - \u4e92\u8054\u7f51\u5174\u8d77\u540e\uff0cWeb\u5e94\u7528\u7a0b\u5e8f\u56e0\u4e3a\u8981\u5feb\u901f\u8fed\u4ee3\u4fee\u6539\u548c\u5347\u7ea7\uff0c\u5982\u679c\u4f7f\u7528\u684c\u9762\u5ba2\u6237\u7aef\u5c31\u9700\u8981\u9010\u4e2a\u9891\u7e41\u5347\u7ea7\uff0c\u56e0\u6b64\u6d41\u884c\u8d77\u4e86\u5c06\u5ba2\u6237\u7aef\u8fd0\u884c\u5728\u6d4f\u89c8\u5668\u4e0a\u7684Browser/Server\u6a21\u5f0f\uff0c\u79f0BS\u67b6\u6784\u3002 - Web\u5e94\u7528\u7684\u51e0\u4e2a\u9636\u6bb5\uff1a - \u9759\u6001Web\u9875\u9762\uff0c\u9759\u6001HTML\u9875\u9762\uff0c\u4fee\u6539\u9875\u9762\u5185\u5bb9\u5c31\u9700\u8981\u7f16\u8f91HTML\u6e90\u6587\u4ef6\u3002\u65e9\u671f\u7684\u4e92\u8054\u7f51Web\u9875\u9762\u5c31\u662f\u9759\u6001\u7684\u3002 - CGI\uff1a\u9759\u6001Web\u9875\u9762\u65e0\u6cd5\u4e0e\u7528\u6237\u4ea4\u4e92\uff0c\u5982\u679c\u7528\u6237\u586b\u4e86\u4e00\u4e2a\u6ce8\u518c\u8868\u5355\uff0c\u9759\u6001Web\u9875\u9762\u5c31\u65e0\u6cd5\u5904\u7406\u3002\u8981\u5904\u7406\u7528\u6237\u53d1\u9001\u7684\u52a8\u6001\u6570\u636e\uff0c\u51fa\u73b0\u4e86Common Gateway Interface\uff0c\u7b80\u79f0CGI\uff0c\u7528C/C++\u7f16\u5199\u3002 - ASP/JSP/PHP\uff1aWeb\u5e94\u7528\u7531\u4e8e\u4fee\u6539\u9891\u7e41\uff0c\u7528C/C++\u8fd9\u79cd\u66f4\u504f\u5e95\u5c42\u7684\u8bed\u8a00\u975e\u5e38\u4e0d\u9002\u5408Web\u5f00\u53d1\uff0c\u800c\u811a\u672c\u8bed\u8a00\u7531\u4e8e\u5f00\u53d1\u6548\u7387\u9ad8\uff0c\u4e0eHTML\u7ed3\u5408\u7d27\u5bc6\uff0c\u56e0\u6b64\uff0c\u8fc5\u901f\u53d6\u4ee3\u4e86CGI\u6a21\u5f0f\u3002ASP\u662f\u5fae\u8f6f\u63a8\u51fa\u7684\u7528VBScript\u811a\u672c\u7f16\u7a0b\u7684Web\u5f00\u53d1\u6280\u672f\uff0c\u800cJSP\u7528Java\u6765\u7f16\u5199\u811a\u672c\uff0cPHP\u672c\u8eab\u5219\u662f\u5f00\u6e90\u7684\u811a\u672c\u8bed\u8a00\u3002 - MVC\uff1a\u4e3a\u4e86\u89e3\u51b3\u76f4\u63a5\u7528\u811a\u672c\u8bed\u8a00\u5d4c\u5165HTML\u5bfc\u81f4\u7684\u53ef\u7ef4\u62a4\u6027\u5dee\u7684\u95ee\u9898\uff0cWeb\u5e94\u7528\u4e5f\u5f15\u5165\u4e86Model-View-Controller\u7684\u6a21\u5f0f\uff0c\u6765\u7b80\u5316Web\u5f00\u53d1\u3002ASP\u53d1\u5c55\u4e3aASP.Net\uff0cJSP\u548cPHP\u4e5f\u6709\u4e00\u5927\u5806MVC\u6846\u67b6\u3002 - Python\u6709\u5f88\u591aWeb\u6846\u67b6\uff0c\u6709\u5f88\u591a\u6210\u719f\u7684\u6a21\u677f\u6280\u672f\uff0c\u9009\u62e9Python\u5f00\u53d1\u5e94\u7528\uff0c\u5f00\u53d1\u6548\u7387\u9ad8\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\u3002 HTML: - \u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\u3002 - HTML\u5b9a\u4e49\u4e86\u9875\u9762\u7684\u5185\u5bb9\uff0cCSS\u6765\u63a7\u5236\u9875\u9762\u5143\u7d20\u7684\u6837\u5f0f\uff0c\u800cJavaScript\u8d1f\u8d23\u9875\u9762\u7684\u4ea4\u4e92\u903b\u8f91\u3002 - \u5bf9\u4e8e\u4f18\u79c0\u7684Web\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u7cbe\u901aHTML\u3001CSS\u548cJavaScript\u662f\u5fc5\u987b\u7684\u3002 - \u5b66\u4e60\u7f51\u7ad9\uff1ahttps://www.w3school.com.cn/ - \u5f53\u6211\u4eec\u7528Python\u6216\u8005\u5176\u4ed6\u8bed\u8a00\u5f00\u53d1Web\u5e94\u7528\u65f6\uff0c\u6211\u4eec\u5c31\u662f\u8981\u5728\u670d\u52a1\u5668\u7aef\u52a8\u6001\u521b\u5efa\u51faHTML\uff0c\u8fd9\u6837\uff0c\u6d4f\u89c8\u5668\u5c31\u4f1a\u5411\u4e0d\u540c\u7684\u7528\u6237\u663e\u793a\u51fa\u4e0d\u540c\u7684Web\u9875\u9762\u3002 - \u793a\u4f8b\uff1a <html> <head> <title>Hello</title> <style> h1 { color: #333333; font-size: 48px; text-shadow: 3px 3px 3px #666666; } </style> <script> function change() { document.getElementsByTagName('h1')[0].style.color = '#ff0000'; } </script> </head> <body> <h1 onclick=\"change()\">Hello, world!</h1> </body> </html> WSGI\u63a5\u53e3\uff1a - Web\u5e94\u7528\u7684\u672c\u8d28\uff1a - \u6d4f\u89c8\u5668\u53d1\u9001\u4e00\u4e2aHTTP\u8bf7\u6c42\uff1b - \u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\uff0c\u751f\u6210\u4e00\u4e2aHTML\u6587\u6863\uff1b - \u670d\u52a1\u5668\u628aHTML\u6587\u6863\u4f5c\u4e3aHTTP\u54cd\u5e94\u7684Body\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\uff1b - \u6d4f\u89c8\u5668\u6536\u5230HTTP\u54cd\u5e94\uff0c\u4eceHTTP Body\u53d6\u51faHTML\u6587\u6863\u5e76\u663e\u793a\u3002 - \u6700\u7b80\u5355\u7684\u9759\u6001Web\u5e94\u7528\u5c31\u662f\u5c06HTML\u6587\u4ef6\u4fdd\u5b58\u597d\uff0c\u7528\u73b0\u6210\u7684HTTP\u670d\u52a1\u5668\u8f6f\u4ef6\uff0c\u63a5\u53d7\u7528\u6237\u8bf7\u6c42\uff0c\u4ece\u6587\u4ef6\u4e2d\u53d6\u51faHTML\u8fd4\u56de\u3002\u6bd4\u5982Apache\u3001Nginx\u3001Lighttpd\u7b49\u5e38\u89c1\u7684\u9759\u6001\u670d\u52a1\u5668\u3002 - \u800c\u8981\u52a8\u6001\u751f\u6210HTML\uff0c\u5c31\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\u751f\u6210HTML\u7684\u6b65\u9aa4\u3002\u63a5\u53d7HTTP\u8bf7\u6c42\u3001\u89e3\u6790HTTP\u8bf7\u6c42\u3001\u53d1\u9001HTTP\u54cd\u5e94\u90fd\u662f\u82e6\u529b\u6d3b\u3002\u6b63\u786e\u7684\u505a\u6cd5\u662f\u5e95\u5c42\u4ee3\u7801\u7531\u4e13\u95e8\u7684\u670d\u52a1\u5668\u8f6f\u4ef6\u5b9e\u73b0\uff0c\u6211\u4eec\u7528Python\u4e13\u6ce8\u4e8e\u751f\u6210HTML\u6587\u6863\u3002\u56e0\u4e3a\u6211\u4eec\u4e0d\u5e0c\u671b\u63a5\u89e6\u5230TCP\u8fde\u63a5\u3001HTTP\u539f\u59cb\u8bf7\u6c42\u548c\u54cd\u5e94\u683c\u5f0f\uff0c\u6240\u4ee5\uff0c\u9700\u8981\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u8ba9\u6211\u4eec\u4e13\u5fc3\u7528Python\u7f16\u5199Web\u4e1a\u52a1\u3002 - \u8fd9\u4e2a\u63a5\u53e3\u5c31\u662fWSGI\uff1aWeb Server Gateway Interface\u3002\u7528\u6765\u63a5\u6536\u5e76\u54cd\u5e94HTTP\u8bf7\u6c42\u3002 - \u5b9a\u4e49\u4e00\u4e2a\u6700\u7b80\u5355\u7684WSGI\u63a5\u53e3\uff1a def application(environ, start_response): start_response('200 OK', [('Content-Type', 'text/html')]) # header, response code and header content return [b'<h1>Hello, web!</h1>'] # body \u6211\u4eec\u53ea\u9700\u8981\u5173\u7cfb\u4ece\u53c2\u6570 environ \u5b57\u5178\u4e2d\u62ff\u5230HTTP\u8bf7\u6c42\u4fe1\u606f\uff0c\u7136\u540e\u6784\u9020HTML\uff0c\u901a\u8fc7 start_response \u53d1\u9001Header\uff0c\u7136\u540e\u8fd4\u56deBody\u3002\u5e95\u5c42\u89e3\u6790HTTP\u8bf7\u6c42\u6216\u8005\u6784\u9020HTTP\u54cd\u5e94\u5934\u7684\u64cd\u4f5c\u4e0d\u9700\u8981\u81ea\u5df1\u6765\u505a\u3002 Python\u5185\u7f6e\u4e86\u4e00\u4e2aWSGI\u670d\u52a1\u5668\uff0c\u8fd9\u4e2a\u6a21\u5757\u53eb wsgiref \uff0c\u5b83\u662f\u7528\u7eafPython\u7f16\u5199\u7684WSGI\u670d\u52a1\u5668\u7684\u53c2\u8003\u5b9e\u73b0\u3002 from wsgiref.simple_server import make_server # create a http server httpd = make_server('', 8000, application) print(\"Serving HTTP on port 8000...\") httpd.serve_forever() \u542f\u52a8\u540e\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u8f93\u5165 http://localhost:8000/ \u5373\u53ef\u8bbf\u95ee\u3002\u547d\u4ee4\u884c\u53ef\u4ee5\u770b\u5230 wsgiref \u6253\u5370\u7684\u65e5\u5fd7\u4fe1\u606f\u3002 \u4f7f\u7528WSGI\u670d\u52a1\u5668\uff0c\u65e0\u8bba\u662f\u591a\u4e48\u590d\u6742\u7684Web\u5e94\u7528\u7a0b\u5e8f\uff0c\u5165\u53e3\u90fd\u662f\u4e00\u4e2aWSGI\u5904\u7406\u51fd\u6570\u3002HTTP\u8bf7\u6c42\u7684\u6240\u6709\u8f93\u5165\u4fe1\u606f\u90fd\u53ef\u4ee5\u901a\u8fc7 environ \u83b7\u5f97\uff0cHTTP\u54cd\u5e94\u7684\u8f93\u51fa\u90fd\u53ef\u4ee5\u901a\u8fc7 start_response() \u52a0\u4e0a\u51fd\u6570\u8fd4\u56de\u503c\u4f5c\u4e3aBody\u3002 \u5bf9\u4e8e\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u5149\u9760WSGI\u51fd\u6570\u8fd8\u662f\u592a\u5e95\u5c42\u4e86\uff0c\u9700\u8981\u5728WSGI\u4e4b\u4e0a\u518d\u62bd\u8c61\u51faWeb\u6846\u67b6\u3002\u8fdb\u4e00\u6b65\u7b80\u5316Web\u5f00\u53d1\u3002 Python\u7684WSGI\u63a5\u53e3\u53ef\u4ee5\u770b\u8fd9\u91cc\uff1a PEP 333 - Python Web Server Gateway Interface v1.0 \u4e2d\u6587\u7248 \u3002 Web\u6846\u67b6\uff1a - \u4f7f\u7528 Flask \uff1a pip install flask \u3002 from flask import Flask from flask import request app = Flask(__name__) @app.route('/', methods=['GET', 'POST']) def home(): return '<h1>Home</h1>' @app.route('/signin', methods=['GET']) def signin_form(): return '''<form action=\"/signin\" method=\"post\"> <p><input name=\"username\"></p> <p><input name=\"password\" type=\"password\"></p> <p><button type=\"submit\">Sign In</button></p> </form>''' @app.route('/signin', methods=['POST']) def signin(): # \u9700\u8981\u4ecerequest\u5bf9\u8c61\u8bfb\u53d6\u8868\u5355\u5185\u5bb9\uff1a if request.form['username']=='admin' and request.form['password']=='password': return '<h3>Hello, admin!</h3>' return '<h3>Bad username or password.</h3>' if __name__ == '__main__': app.run() \u5904\u7406\u4e09\u4e2a\u8bf7\u6c42\uff1a GET / GET /signin \uff0c\u767b\u5f55\u9875\uff0c\u663e\u793a\u767b\u5f55\u8868\u5355\u3002 POST /signin \uff0c\u5904\u7406\u767b\u5f55\u8868\u5355\uff0c\u663e\u793a\u767b\u5f55\u7ed3\u679c\u3002 \u540c\u4e00\u4e2aURL/signin\u5206\u522b\u6709GET\u548cPOST\u4e24\u79cd\u8bf7\u6c42\uff0c\u6620\u5c04\u5230\u4e24\u4e2a\u5904\u7406\u51fd\u6570\u4e2d Flask\u901a\u8fc7\u88c5\u9970\u5668\u5728\u5185\u90e8\u81ea\u52a8\u5730\u628aURL\u51fd\u6570\u5173\u8054\u8d77\u6765\u3002 \u8fd0\u884c\u4e4b\u540e\u53ef\u4ee5\u5728 http://127.0.0.1:5000/ \u8bbf\u95ee\u3002 \u5b9e\u9645\u5e94\u7528\u7684\u8bdd\uff0c\u9700\u8981\u914d\u5408\u4e0a\u6570\u636e\u5e93\uff0c\u62ff\u5230\u7528\u6237\u540d\u548c\u53e3\u4ee4\u4e4b\u540e\u5e94\u8be5\u53bb\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u5bf9\u6bd4\u6765\u5224\u5b9a\u7528\u6237\u767b\u5f55\u72b6\u6001\u3002 \u9664\u4e86Flask\u8fd8\u6709\u5176\u4ed6Web\u6846\u67b6\uff1a Django \uff1a\u5168\u80fd\u578bWeb\u6846\u67b6\u3002 Web.py \uff1a\u5c0f\u5de7Web\u6846\u67b6\u3002 Bottle \uff1a\u7c7b\u4f3c\u4e8eFlask\u3002 Tornado \uff1aFacebook\u7684\u5f00\u6e90\u5f02\u6b65\u6846\u67b6\u3002 \u6709\u4e86Web\u6846\u67b6\uff0c\u6211\u4eec\u5728\u7f16\u5199Web\u5e94\u7528\u65f6\uff0c\u6ce8\u610f\u529b\u5c31\u4eceWSGI\u5904\u7406\u51fd\u6570\u8f6c\u79fb\u5230URL+\u5bf9\u5e94\u7684\u5904\u7406\u51fd\u6570\uff0c\u8fd9\u6837\uff0c\u7f16\u5199Web App\u5c31\u66f4\u52a0\u7b80\u5355\u4e86\u3002 \u5728\u7f16\u5199URL\u5904\u7406\u51fd\u6570\u65f6\uff0c\u9664\u4e86\u914d\u7f6eURL\u5916\uff0c\u4eceHTTP\u8bf7\u6c42\u62ff\u5230\u7528\u6237\u6570\u636e\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002Web\u6846\u67b6\u90fd\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684API\u6765\u5b9e\u73b0\u8fd9\u4e9b\u529f\u80fd\u3002Flask\u901a\u8fc7request.form['name']\u6765\u83b7\u53d6\u8868\u5355\u7684\u5185\u5bb9\u3002 \u4f7f\u7528\u6a21\u677f\uff1a - \u6709\u4e86Web\u6846\u67b6\u5c31\u4e0d\u9700\u8981\u5728WSGI\u51fd\u6570\u4e2d\u7f16\u5199\u6574\u4e2a\u7f51\u7ad9\u7684\u903b\u8f91\uff0c\u4f46\u4f9d\u7136\u9700\u8981\u63d0\u4f9b\u9875\u9762HTML\uff0c\u4f46\u5bf9\u4e8e\u4e00\u4e2a\u590d\u6742\u7684\u9875\u9762\u6765\u8bf4\u5c06\u6240\u6709HTML\u4ee5\u5b57\u7b26\u4e32\u65b9\u5f0f\u5199\u5728\u6e90\u7801\u4e2d\u662f\u4e0d\u73b0\u5b9e\u4e5f\u4e0d\u5408\u7406\u7684\u3002 - \u6240\u4ee5\u6709\u4e86\u6a21\u677f\u6280\u672f\uff0c\u51c6\u5907\u4e00\u4e2aHTML\u6587\u6863\uff0c\u5176\u4e2d\u6f5c\u5165\u4e86\u4e00\u4e9b\u53d8\u91cf\u548c\u6307\u4ee4\uff0c\u6839\u636e\u4f20\u5165\u7684\u6307\u4ee4\u548c\u6570\u636e\uff0c\u7ecf\u8fc7\u7a0b\u5e8f\u903b\u8f91\u66ff\u6362\u540e\u5f97\u5230\u6700\u7ec8\u7684HTML\uff0c\u53d1\u9001\u7ed9\u7528\u6237\u3002 - \u8fd9\u5c31\u662fMVC\uff1aModel-View-Controller\uff0c\u5373\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668\u3002 - \u5728\u8fd9\u91cc\uff0c\u6a21\u578b\u5c31\u662f\u8981\u4f20\u9012\u7ed9HTML\u7684\u6570\u636e\uff0c\u89c6\u56fe\u5c31\u662fHTML\u6a21\u677f\u6700\u7ec8\u8f93\u51fa\u7528\u6237\u770b\u5230\u7684HTML\uff0c\u63a7\u5236\u5668\u5219\u662fPython\u4ee3\u7801\u4e2d\u5c06\u6a21\u578b\u6570\u636e\u4f20\u9012\u7ed9HTML\u7684\u903b\u8f91\u3002 - \u6a21\u677f\u4e2d\u5927\u591a\u662f\u7559\u4e0b\u7531\u53d8\u91cf\u8868\u793a\u7684\u7a7a\u4f4d\uff0c\u7531\u6846\u67b6\u5c06\u6570\u636e\u901a\u8fc7\u5173\u952e\u5b57\u53c2\u6570\u6216\u8005\u5b57\u5178\u4f20\u9012\u7ed9\u6a21\u677f\u5f97\u5230\u6700\u7ec8\u7684HTML\u3002 - \u6bd4\u5982Flask\uff1a from flask import Flask, request, render_template app = Flask(__name__) @app.route('/', methods=['GET', 'POST']) def home(): return render_template('home.html') @app.route('/singin', methods=['GET']) def signin_form(): return render_template('form.html') @app.route('/signin', methods=['POST']) def signin(): username = request.form['username'] password = request.form['password'] if username == 'admin' and password == 'password': return render_template('signin-ok.html', username=username) return render_template('form.html', message='Bad username or password', username=username) if __name__ == '__main__': app.run() \u548c\u4e0a\u9762\u7684\u4f8b\u5b50\u4e00\u6837\uff0c\u4e0d\u8fc7\u6362\u6210\u4e86\u4f7f\u7528\u6a21\u677f\uff0cFlask\u9ed8\u8ba4\u7684\u6a21\u677f\u662fJinja2\uff0c\u5b89\u88c5Flask\u65f6\u4f1a\u5b89\u88c5\u3002 \u6a21\u677f\u6587\u4ef6\u9700\u8981\u653e\u5728 templates \u76ee\u5f55\u4e0b\u3002 Jinja2 \u6a21\u677f\u4e2d\u4f7f\u7528 {{ name }} \u8868\u793a\u8981\u66ff\u6362\u7684\u53d8\u91cf\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u8fd8\u9700\u8981\u5faa\u73af\u3001\u6761\u4ef6\u5224\u65ad\u7b49\u6307\u4ee4\u8bed\u53e5\uff0c\u5728Jinja2\u4e2d\uff0c\u7528 {% ... %} \u8868\u793a\u6307\u4ee4\u3002 \u9664\u4e86Jinja2\uff0c\u5e38\u89c1\u7684\u6a21\u677f\u8fd8\u6709\uff1a Mako \uff1a\u7528 <% ... %> \u548c ${xxx} \u7684\u4e00\u4e2a\u6a21\u677f\uff1b Cheetah \uff1a\u4e5f\u662f\u7528 <% ... %> \u548c ${xxx} \u7684\u4e00\u4e2a\u6a21\u677f\uff1b Django \uff1aDjango\u662f\u4e00\u7ad9\u5f0f\u6846\u67b6\uff0c\u5185\u7f6e\u4e00\u4e2a\u7528 {% ... %} \u548c {{ xxx }} \u7684\u6a21\u677f\u3002 \u76ee\u524d\u524d\u540e\u7aef\u5206\u79bb\uff0c\u5df2\u7ecf\u6ca1\u6709\u4eba\u7528\u6a21\u677f\u4e86\u3002","title":"Web\u5f00\u53d1"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#io_1","text":"\u5f02\u6b65IO\uff1a - \u8981\u89e3\u51b3CPU\u7684\u9ad8\u901f\u548cIO\u7684\u4f4e\u901f\u4e0d\u5339\u914d\u7684\u95ee\u9898\uff0c\u907f\u514dCPU\u6682\u505c\u7b49\u5f85IO\u5b8c\u6210\uff0c\u5c31\u9700\u8981\u4f7f\u7528\u591a\u7ebf\u7a0b\u6216\u8005\u591a\u8fdb\u7a0b\u5c06IO\u4efb\u52a1\u5206\u914d\u5230\u5176\u4ed6\u7ebf\u7a0b\u6216\u8005\u8fdb\u7a0b\u53bb\u505a\uff0c\u4e5f\u5c31\u662f\u5f02\u6b65IO\u3002 - \u5f53\u4ee3\u7801\u8981\u6267\u884cIO\u64cd\u4f5c\u65f6\uff0c\u53ea\u53d1\u51faIO\u6307\u4ee4\uff0c\u5e76\u4e0d\u7b49\u5f85IO\u7ed3\u679c\uff0c\u7136\u540e\u6267\u884c\u5176\u4ed6\u4ee3\u7801\u3002\u4e00\u6bb5\u65f6\u95f4\u540e\u5f53IO\u6267\u884c\u5b8c\u6210\uff0c\u518d\u901a\u77e5CPU\u8fdb\u884c\u5904\u7406\u3002 - \u666e\u901a\u540c\u6b65IO\u4ee3\u7801\uff1a # things before f = open('test.txt', 'r') text = f.read() # thread wait here f.close() print(text) # other things \u540c\u6b65IO\u6a21\u578b\u4ee3\u7801\u65e0\u6cd5\u5b9e\u73b0\u5f02\u6b65IO\u6a21\u578b\u3002 \u5f02\u6b65IO\u6a21\u578b\u9700\u8981\u4e00\u4e2a\u6d88\u606f\u5faa\u73af\uff0c\u6d88\u606f\u5faa\u73af\u4e2d\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u65ad\u91cd\u590d\u8bfb\u53d6\u6d88\u606f-\u5904\u7406\u6d88\u606f\u8fd9\u4e2a\u5faa\u73af\uff0c\u5c31\u50cf\u6240\u6709GUI\u7a0b\u5e8f\u505a\u7684\u90a3\u6837\u3002 loop = get_event_loop() while True: event = loop.get_event() process_event(event) \u6d88\u606f\u6a21\u578b\u5176\u5b9e\u65e9\u5728\u5e94\u7528\u5728\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e86\u3002\u4e00\u4e2aGUI\u7a0b\u5e8f\u7684\u4e3b\u7ebf\u7a0b\u5c31\u8d1f\u8d23\u4e0d\u505c\u5730\u8bfb\u53d6\u6d88\u606f\u5e76\u5904\u7406\u6d88\u606f\u3002\u6240\u6709\u7684\u952e\u76d8\u3001\u9f20\u6807\u7b49\u6d88\u606f\u90fd\u88ab\u53d1\u9001\u5230GUI\u7a0b\u5e8f\u7684\u6d88\u606f\u961f\u5217\u4e2d\uff0c\u7136\u540e\u7531GUI\u7a0b\u5e8f\u7684\u4e3b\u7ebf\u7a0b\u5904\u7406\u3002 \u5728\u6d88\u606f\u6a21\u578b\u4e2d\uff0c\u5904\u7406\u4e00\u4e2a\u6d88\u606f\u5fc5\u987b\u975e\u5e38\u8fc5\u901f\uff0c\u5426\u5219\uff0c\u4e3b\u7ebf\u7a0b\u5c06\u65e0\u6cd5\u53ca\u65f6\u5904\u7406\u6d88\u606f\u961f\u5217\u4e2d\u7684\u5176\u4ed6\u6d88\u606f\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u770b\u4e0a\u53bb\u505c\u6b62\u54cd\u5e94\u3002 \u6d88\u606f\u6a21\u578b\u4e2d\u7684\u7684\u5f02\u6b65IO\uff1a\u9047\u5230IO\u64cd\u4f5c\u65f6\uff0c\u4ee3\u7801\u53ea\u53d1\u51faIO\u8bf7\u6c42\uff0c\u4e0d\u7b49\u5f85IO\u7ed3\u679c\uff0c\u76f4\u63a5\u7ed3\u675f\u672c\u8f6e\u6d88\u606f\u5904\u7406\uff0c\u8fdb\u5165\u4e0b\u4e00\u8f6e\u6d88\u606f\u5904\u7406\u3002IO\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u6536\u5230IO\u5b8c\u6210\u7684\u6d88\u606f\uff0c\u5904\u7406\u8be5\u6d88\u606f\u65f6\u83b7\u5f97IO\u64cd\u4f5c\u7684\u7ed3\u679c\u3002 \u540c\u6b65IO\u6a21\u578b\u4e2d\uff0c\u5904\u7406IO\u8fc7\u7a0b\u4e2d\u4e3b\u7ebf\u7a0b\u53ea\u80fd\u6302\u8d77\uff0c\u5f02\u6b65IO\u6a21\u578b\u4e2d\uff0c\u4e3b\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\uff0c\u7531IO\u7ebf\u7a0b\u5904\u7406IO\uff0c\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u591a\u4e2aIO\u8bf7\u6c42\uff0c\u5e76\u4e14\u6ca1\u6709\u5207\u6362\u7ebf\u7a0b\u7684\u64cd\u4f5c\u3002\u5bf9\u4e8eIO\u5bc6\u96c6\u578b\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u7528\u5f02\u6b65IO\u5c06\u5927\u5927\u63d0\u5347\u7cfb\u7edf\u7684\u591a\u4efb\u52a1\u5904\u7406\u80fd\u529b\u3002 \u534f\u7a0b \uff1a - \u53c8\u540d\u5fae\u7ebf\u7a0b\uff0cCoroutine\u3002 - \u63d0\u51fa\u5f88\u65e9\uff0c\u4f46\u76f4\u5230\u6700\u8fd1\u51e0\u5e74\u624d\u5728\u67d0\u4e9b\u8bed\u8a00\u4e2d\u5e7f\u6cdb\u5e94\u7528\u3002 - \u5b50\u7a0b\u5e8f\u53c8\u79f0\u51fd\u6570\uff0c\u57fa\u672c\u5728\u6240\u6709\u8bed\u8a00\u4e2d\u90fd\u662f\u901a\u8fc7\u6808\u5b9e\u73b0\u7684\u5c42\u7ea7\u8c03\u7528\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u5c31\u662f\u6267\u884c\u4e00\u4e2a\u5b50\u7a0b\u5e8f\u3002\u5b50\u7a0b\u5e8f\u8c03\u7528\u603b\u662f\u4e00\u4e2a\u5165\u53e3\uff0c\u4e00\u6b21\u8fd4\u56de\uff0c\u8c03\u7528\u987a\u5e8f\u662f\u660e\u786e\u7684\u3002 - \u534f\u7a0b\u770b\u4e0a\u53bb\u4e5f\u662f\u5b50\u7a0b\u5e8f\uff0c\u4f46\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5b50\u7a0b\u5e8f\u5185\u90e8\u53ef\u4e2d\u65ad\uff0c\u7136\u540e\u8f6c\u53bb\u6267\u884c\u522b\u7684\u5b50\u7a0b\u5e8f\uff0c\u9002\u5f53\u7684\u65f6\u5019\u5728\u56de\u6765\u6267\u884c\u3002\u4e2d\u65ad\u6267\u884c\u5176\u4ed6\u5b50\u7a0b\u5e8f\u4e0d\u662f\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u53bb\u6267\u884c\uff0c\u800c\u662f\u7c7b\u4f3c\u4e8eCPU\u7684\u4e2d\u65ad\uff0c\u5c31\u50cf\u7ebf\u7a0b\u5207\u6362\u4e00\u6837\uff0c\u4f46\u591a\u4e2a\u534f\u7a0b\u5176\u5b9e\u662f\u4e00\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u3002 - \u534f\u7a0b\u7684\u4f18\u52bf\uff1a - \u76f8\u5bf9\u7ebf\u7a0b\u800c\u8a00\u6781\u9ad8\u7684\u6267\u884c\u6548\u7387\uff0c\u5b50\u7a0b\u5e8f\u5207\u6362\u800c\u4e0d\u662f\u7ebf\u7a0b\u5207\u6362\uff0c\u6ca1\u6709\u7ebf\u7a0b\u5207\u6362\u7684\u5f00\u9500\uff0c\u7531\u7a0b\u5e8f\u81ea\u8eab\u63a7\u5236\u800c\u4e0d\u662f\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u3002\u548c\u591a\u7ebf\u7a0b\u6bd4\uff0c\u7ebf\u7a0b\u6570\u91cf\u8d8a\u591a\uff0c\u534f\u7a0b\u6027\u80fd\u4f18\u52bf\u5c31\u8d8a\u660e\u663e\uff0c\u4f53\u73b0\u5728\u5b50\u7a0b\u5e8f\u7684\u5207\u6362\u4e0a\u3002 - \u7b2c\u4e8c\u4f18\u52bf\u5c31\u662f\u4e0d\u9700\u8981\u591a\u7ebf\u7a0b\u7684\u9501\u673a\u5236\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u4e0d\u5b58\u5728\u540c\u65f6\u5199\u53d8\u91cf\u51b2\u7a81\uff0c\u5728\u534f\u7a0b\u4e2d\u63a7\u5236\u5171\u4eab\u8d44\u6e90\u4e0d\u52a0\u9501\uff0c\u53ea\u9700\u8981\u5224\u65ad\u72b6\u6001\u5c31\u597d\u4e86\uff0c\u6240\u4ee5\u6267\u884c\u6548\u7387\u6bd4\u591a\u7ebf\u7a0b\u9ad8\u5f88\u591a\u3002 - \u534f\u7a0b\u662f\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\uff0c\u5982\u679c\u8981\u5229\u7528\u591a\u6838CPU\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u591a\u8fdb\u7a0b+\u534f\u7a0b\u5b9e\u73b0\u3002 - Python\u4e2d\u5bf9\u534f\u7a0b\u7684\u652f\u6301\u662f\u901a\u8fc7 generator \u5b9e\u73b0\u7684\u3002\u751f\u6210\u5668\u540c\u65f6\u4e5f\u662f\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u53ef\u4ee5\u7528 for \u6765\u8fed\u4ee3\uff0c\u4e5f\u53ef\u4ee5\u7528 next() \u83b7\u53d6\u4e0b\u4e00\u4e2a yield \u51fa\u6765\u7684\u503c\u3002 - Python\u7684 yield \u4e0d\u4f46\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u63a5\u53d7\u8c03\u7528\u8005\u53d1\u51fa\u7684\u53c2\u6570\uff0c\u8c03\u7528\u751f\u6210\u5668\u7684 send(arg) \u51fd\u6570\u53d1\u9001\u6d88\u606f\u3002 - \u4f7f\u7528Python\u7684\u534f\u7a0b\u5b9e\u73b0\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b\uff1a def consumer(): r = '' while True: n = yield r if not n: return print('[CONSUMER] Consuming %s...' % n) r = '200 OK' def produce(c): c.send(None) n = 0 while n < 5: n = n + 1 print('[PRODUCER] Producing %s...' % n) r = c.send(n) print('[PRODUCER] Consumer return: %s' % r) c.close() c = consumer() produce(c) c.send(None) \u542f\u52a8\u751f\u6210\u5668\u3002\u6700\u540e\u901a\u8fc7 close() \u5173\u95ed\u751f\u6210\u5668\u3002 \u6574\u4e2a\u6d41\u7a0b\u65e0\u9501\uff0c\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\uff0c produce \u548c consumer \u534f\u4f5c\u5b8c\u6210\u4efb\u52a1\uff0c\u6240\u4ee5\u79f0\u4e3a\u201c\u534f\u7a0b\u201d\uff0c\u800c\u975e\u7ebf\u7a0b\u7684\u62a2\u5360\u5f0f\u591a\u4efb\u52a1\u3002 \u201c\u5b50\u7a0b\u5e8f\u5c31\u662f\u534f\u7a0b\u7684\u4e00\u79cd\u7279\u4f8b\u201d\u3002 \u5bf9\u751f\u6210\u5668\u8c03\u7528 next() \u65f6\uff0c yield \u8bed\u53e5\u5c06\u5f97\u5230 None \u3002 asyncio : - asyncio \u662fPython3.4\u5f15\u5165\u7684\u6807\u51c6\u5e93\u652f\u6301\u4e86\u5f02\u6b65IO\u3002 - \u4f8b\uff1a import asyncio import threading @asyncio.coroutine def hello(n): print(f'hello,world! from {threading.currentThread()}, n = {n}') r = yield from asyncio.sleep(1) print(f'hello,again! from {threading.currentThread()}, n = {n}') loop = asyncio.get_event_loop() # execute coroutine tasks = [hello(1), hello(2)] loop.run_until_complete(asyncio.wait(tasks)) loop.close() \u6267\u884c\u7ed3\u679c\uff1a hello,world! from <_MainThread(MainThread, started 7600)>, n = 2 hello,world! from <_MainThread(MainThread, started 7600)>, n = 1 hello,again! from <_MainThread(MainThread, started 7600)>, n = 2 hello,again! from <_MainThread(MainThread, started 7600)>, n = 1 @asyncio.coroutine \u628a\u4e00\u4e2a\u751f\u6210\u5668\u6807\u8bb0\u4e3a coroutine \u7c7b\u578b\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u534f\u7a0b\u653e\u5230\u6267\u884c\u534f\u7a0b\u7684\u4e8b\u4ef6\u5faa\u73af\u4e2d\u5c31\u884c\u3002\u5c31\u5b9e\u73b0\u4e86\u5f02\u6b65IO\u3002 asyncio.sleep() \u4e5f\u662f\u4e00\u4e2a coroutine \uff0c\u7ebf\u7a0b\u4e0d\u4f1a\u7b49\u5f85 asyncio.sleep() \uff0c\u800c\u662f\u76f4\u63a5\u4e2d\u65ad\u5e76\u6267\u884c\u4e0b\u4e00\u4e2a\u6d88\u606f\u5faa\u73af\uff0c\u5f53 asyncio.sleep() \u8fd4\u56de\u65f6\uff0c\u4ece yield from \u62ff\u5230\u8fd4\u56de\u503c\uff0c\u7136\u540e\u63a5\u7740\u6267\u884c\u4e0b\u4e00\u8bed\u53e5\u3002 \u4e24\u4e2a coroutine \u5728\u540c\u4e00\u7ebf\u7a0b\u4e2d\u6267\u884c\u3002 \u4f8b\u5b50\uff1a\u5f02\u6b65\u8fde\u63a5\u83b7\u53d6\u4e09\u4e2a\u7f51\u7ad9\u7684\u54cd\u5e94\uff0c\u6253\u5370\u54cd\u5e94\u5934\uff1a import asyncio @asyncio.coroutine def wget(host): print('wget %s...' % host) connect = asyncio.open_connection(host, 80) # connect is a coroutine reader, writer = yield from connect header = 'GET / HTTP/1.0\\r\\nHost: %s\\r\\n\\r\\n' % host writer.write(header.encode('utf-8')) yield from writer.drain() while True: line = yield from reader.readline() if line == b'\\r\\n': break print('%s header > %s' % (host, line.decode('utf-8').rstrip())) # Ignore the body, close the socket writer.close() loop = asyncio.get_event_loop() tasks = [wget(host) for host in ['www.sina.com.cn', 'www.sohu.com', 'www.163.com']] loop.run_until_complete(asyncio.wait(tasks)) loop.close() \u6267\u884c\u7ed3\u679c\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u53bb\u8fde\u63a5\u524d\u4e00\u4e2a\u7f51\u7ad9\u7684\u8fc7\u7a0b\u4e2d\uff0c\u534f\u7a0b\u8ba9\u51fa\u4e86\u65f6\u95f4\u7247\uff0c\u4e8b\u4ef6\u5faa\u73af\u4e2d\u65ad\u5e76\u6267\u884c\u4e86\u5176\u4ed6\u534f\u7a0b\u3002 \u591a\u4e2a\u534f\u7a0b\u53ef\u4ee5\u5c01\u88c5\u6210\u4e00\u7ec4Task\u5e76\u53d1\u6267\u884c\u3002 \u9605\u8bfb\uff1a Async IO in Python: A Complete Walkthrough async/await : - asyncio \u63d0\u4f9b\u7684\u8bed\u6cd5\u662f\uff1a @asyncio.coroutine \u5305\u88c5\u4e00\u4e2a\u751f\u6210\u5668\u4e3a\u534f\u7a0b\uff0c\u7136\u540e\u5728\u5185\u90e8\u53ef\u4ee5\u4f7f\u7528 yield from \u8c03\u7528\u53e6\u4e00\u4e2a\u534f\u7a0b\u5b9e\u73b0\u5f02\u6b65\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u5305\u88c5\u4e00\u4e2a\u666e\u901a\u51fd\u6570\u4e3a\u534f\u7a0b\u3002 - Python3.5\u5f15\u5165\u4e86\u65b0\u8bed\u6cd5 async \u548c await \uff0c\u7528\u4ee5\u66ff\u4ee3 @asyncio.coroutine \u548c yield from \u3002\u65e7\u8bed\u6cd5\u5728Python3.8\u7248\u672c\u5e9f\u5f03\uff0c\u5e76\u8ba1\u5212\u4e8ePython3.10\u4e2d\u79fb\u9664\u3002 - \u4e0d\u8981\u4e0e\u666e\u901a\u7684\u751f\u6210\u5668\u6df7\u6dc6\uff0c async \u7528\u6765\u5b9a\u4e49\u534f\u7a0b\uff0c await \u7528\u6765\u8c03\u7528\u534f\u7a0b\uff08\u4e0d\u80fd\u7528\u6765\u8c03\u7528\u4e00\u4e2a\u666e\u901a\u7684\u751f\u6210\u5668\uff09\u3002 aiohttp : - asyncio \u53ef\u4ee5\u5b9e\u73b0\u5355\u7ebf\u7a0b\u5e76\u53d1IO\u64cd\u4f5c\u3002\u5982\u679c\u4ec5\u7528\u5728\u5ba2\u6237\u7aef\uff0c\u53d1\u6325\u7684\u5a01\u529b\u4e0d\u5927\u3002 - \u5982\u679c\u628a asyncio \u7528\u5728\u670d\u52a1\u5668\u7aef\uff0c\u4f8b\u5982Web\u670d\u52a1\u5668\uff0c\u7531\u4e8eHTTP\u8fde\u63a5\u5c31\u662fIO\u64cd\u4f5c\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u5355\u7ebf\u7a0b\u52a0\u4e0a\u534f\u7a0b\u5b9e\u73b0\u591a\u7528\u6237\u7684\u9ad8\u5e76\u53d1\u652f\u6301\u3002 - asyncio \u5b9e\u73b0\u4e86TCP\u3001UDP\u3001SSL\u7b49\u534f\u8bae\uff0c aiohttp \u5219\u662f\u57fa\u4e8e asyncio \u5b9e\u73b0\u7684HTTP\u6846\u67b6\u3002 - \u4f8b\u5b50\uff1a ''' async web application. ''' import asyncio from aiohttp import web async def index(request): await asyncio.sleep(0.5) return web.Response(body=b'<h1>Index</h1>', content_type='text/html') async def hello(request): await asyncio.sleep(0.5) text = '<h1>hello, %s!</h1>' % request.match_info['name'] return web.Response(body=text.encode('utf-8'), content_type='text/html') async def init(loop): app = web.Application(loop=loop) app.router.add_route('GET', '/', index) app.router.add_route('GET', '/hello/{name}', hello) srv = await loop.create_server(app.make_handler(), '127.0.0.1', 8000) print('Server started at http://127.0.0.1:8000...') return srv loop = asyncio.get_event_loop() loop.run_until_complete(init(loop)) loop.run_forever()","title":"\u5f02\u6b65IO"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Python/#_19","text":"\u52a8\u6001\u7c7b\u578b\u4ee3\u7801\u786e\u5b9e\u592a\u96be\u4ee5\u8bfb\u4ee3\u7801\u4e86\uff0c\u867d\u7136\u8bed\u6cd5\u7b80\u5355\uff0c\u4f46\u662f\u7c7b\u578b\u4f1a\u4ee4\u4eba\u7ea0\u7ed3\u3002 \u67d0\u4e9b\u65f6\u5019\u7f3a\u5931\u4e86\u7c7b\u578b\u4fe1\u606f\uff0c\u8865\u5168\u90fd\u96be\u4ee5\u8fdb\u884c\uff0c\u4e5f\u8bb8\u7c7b\u578b\u6807\u6ce8\u4f1a\u662f\u4e00\u4e2a\u597d\u7684\u624b\u6bb5\u3002 \u51fd\u6570\u5f0f\u7f16\u7a0b\u652f\u6301\u6709\u9650\uff0c\u4e0d\u8fc7\u4efb\u4f55\u624b\u6bb5\u90fd\u53ea\u662f\u624b\u6bb5\u800c\u4e0d\u662f\u76ee\u7684\uff0c\u5982\u679c\u8fbe\u6210\u76ee\u7684\u6709\u552f\u4e00\u7684\u6700\u4f73\u65b9\u5f0f\uff0c\u90a3\u4f7f\u7528\u6700\u4f73\u5b9e\u8df5\u5c31\u597d\u4e86\uff0c\u8fd8\u964d\u4f4e\u4e86\u9009\u62e9\u6210\u672c\u3002 \u5404\u79cd\u5e93\u529f\u80fd\u5b8c\u5584\uff0c\u7ec6\u8282\u7565\u591a\uff0c\u57fa\u672c\u6709\u4e86\u4e00\u4e2a\u5927\u6982\u5370\u8c61\uff0c\u5177\u4f53\u4f7f\u7528\u5219\u57fa\u672c\u90fd\u662f\u8d70\u9a6c\u89c2\u82b1\uff0c\u8fd8\u9700\u8981\u5177\u4f53\u7528\u5230\u65f6\u624d\u597d\u6df1\u5165\u3002 \u7b80\u5355\u5165\u95e8\u4e86\u7f51\u7edc\u7f16\u7a0b\u3001HTTP\u7f16\u7a0b\u3001\u5f02\u6b65\u7f16\u7a0b\u3001SQL\u7f16\u7a0b\uff0c\u4f46\u5177\u4f53\u5b9e\u7528\u8fd8\u8fdc\u8fdc\u4e0d\u591f\uff0c\u8fd8\u9700\u8981\u66f4\u591a\u7684\u7406\u8bba\u4e0e\u5b9e\u8df5\u3002\u6bd4\u5982HTTP\u3001\u534f\u7a0b\u3001WSGI\u7b49\u3002 \u66f4\u591a\u9ad8\u7ea7\u7684\u7528\u6cd5\uff0c\u66f4\u591a\u7ec6\u8282\uff0c\u66f4\u591a\u5177\u4f53\u5e93\u7684\u4f7f\u7528\uff0c\u5f85\u5b9e\u8df5\u540e\u6df1\u5165\u3002","title":"\u603b\u7ed3"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/","text":"\u57fa\u7840\u7bc7 \u901a\u7528\u8bed\u6cd5\u53ca\u5206\u7c7b DDL: \u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff0c\u7528\u6765\u5b9a\u4e49\u6570\u636e\u5e93\u5bf9\u8c61\uff08\u6570\u636e\u5e93\u3001\u8868\u3001\u5b57\u6bb5\uff09 DML: \u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff0c\u7528\u6765\u5bf9\u6570\u636e\u5e93\u8868\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u589e\u5220\u6539 DQL: \u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff0c\u7528\u6765\u67e5\u8be2\u6570\u636e\u5e93\u4e2d\u8868\u7684\u8bb0\u5f55 DCL: \u6570\u636e\u63a7\u5236\u8bed\u8a00\uff0c\u7528\u6765\u521b\u5efa\u6570\u636e\u5e93\u7528\u6237\u3001\u63a7\u5236\u6570\u636e\u5e93\u7684\u63a7\u5236\u6743\u9650 DDL\uff08\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff09 \u6570\u636e\u5b9a\u4e49\u8bed\u8a00 \u6570\u636e\u5e93\u64cd\u4f5c \u67e5\u8be2\u6240\u6709\u6570\u636e\u5e93\uff1a SHOW DATABASES; \u67e5\u8be2\u5f53\u524d\u6570\u636e\u5e93\uff1a SELECT DATABASE(); \u521b\u5efa\u6570\u636e\u5e93\uff1a CREATE DATABASE [ IF NOT EXISTS ] \u6570\u636e\u5e93\u540d [ DEFAULT CHARSET \u5b57\u7b26\u96c6] [COLLATE \u6392\u5e8f\u89c4\u5219 ]; \u5220\u9664\u6570\u636e\u5e93\uff1a DROP DATABASE [ IF EXISTS ] \u6570\u636e\u5e93\u540d; \u4f7f\u7528\u6570\u636e\u5e93\uff1a USE \u6570\u636e\u5e93\u540d; \u6ce8\u610f\u4e8b\u9879 UTF8\u5b57\u7b26\u96c6\u957f\u5ea6\u4e3a3\u5b57\u8282\uff0c\u6709\u4e9b\u7b26\u53f7\u53604\u5b57\u8282\uff0c\u6240\u4ee5\u63a8\u8350\u7528utf8mb4\u5b57\u7b26\u96c6 \u8868\u64cd\u4f5c \u67e5\u8be2\u5f53\u524d\u6570\u636e\u5e93\u6240\u6709\u8868\uff1a SHOW TABLES; \u67e5\u8be2\u8868\u7ed3\u6784\uff1a DESC \u8868\u540d; \u67e5\u8be2\u6307\u5b9a\u8868\u7684\u5efa\u8868\u8bed\u53e5\uff1a SHOW CREATE TABLE \u8868\u540d; \u521b\u5efa\u8868\uff1a CREATE TABLE \u8868\u540d( \u5b57\u6bb51 \u5b57\u6bb51\u7c7b\u578b [COMMENT \u5b57\u6bb51\u6ce8\u91ca], \u5b57\u6bb52 \u5b57\u6bb52\u7c7b\u578b [COMMENT \u5b57\u6bb52\u6ce8\u91ca], \u5b57\u6bb53 \u5b57\u6bb53\u7c7b\u578b [COMMENT \u5b57\u6bb53\u6ce8\u91ca], ... \u5b57\u6bb5n \u5b57\u6bb5n\u7c7b\u578b [COMMENT \u5b57\u6bb5n\u6ce8\u91ca] )[ COMMENT \u8868\u6ce8\u91ca ]; \u6700\u540e\u4e00\u4e2a\u5b57\u6bb5\u540e\u9762\u6ca1\u6709\u9017\u53f7 \u6dfb\u52a0\u5b57\u6bb5\uff1a ALTER TABLE \u8868\u540d ADD \u5b57\u6bb5\u540d \u7c7b\u578b(\u957f\u5ea6) [COMMENT \u6ce8\u91ca] [\u7ea6\u675f]; \u4f8b\uff1a ALTER TABLE emp ADD nickname varchar(20) COMMENT '\u6635\u79f0'; \u4fee\u6539\u6570\u636e\u7c7b\u578b\uff1a ALTER TABLE \u8868\u540d MODIFY \u5b57\u6bb5\u540d \u65b0\u6570\u636e\u7c7b\u578b(\u957f\u5ea6); \u4fee\u6539\u5b57\u6bb5\u540d\u548c\u5b57\u6bb5\u7c7b\u578b\uff1a ALTER TABLE \u8868\u540d CHANGE \u65e7\u5b57\u6bb5\u540d \u65b0\u5b57\u6bb5\u540d \u7c7b\u578b(\u957f\u5ea6) [COMMENT \u6ce8\u91ca] [\u7ea6\u675f]; \u4f8b\uff1a\u5c06emp\u8868\u7684nickname\u5b57\u6bb5\u4fee\u6539\u4e3ausername\uff0c\u7c7b\u578b\u4e3avarchar(30) ALTER TABLE emp CHANGE nickname username varchar(30) COMMENT '\u6635\u79f0'; \u5220\u9664\u5b57\u6bb5\uff1a ALTER TABLE \u8868\u540d DROP \u5b57\u6bb5\u540d; \u4fee\u6539\u8868\u540d\uff1a ALTER TABLE \u8868\u540d RENAME TO \u65b0\u8868\u540d \u5220\u9664\u8868\uff1a DROP TABLE [IF EXISTS] \u8868\u540d; \u5220\u9664\u8868\uff0c\u5e76\u91cd\u65b0\u521b\u5efa\u8be5\u8868\uff1a TRUNCATE TABLE \u8868\u540d; DML\uff08\u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff09 \u6dfb\u52a0\u6570\u636e \u6307\u5b9a\u5b57\u6bb5\uff1a INSERT INTO \u8868\u540d (\u5b57\u6bb5\u540d1, \u5b57\u6bb5\u540d2, ...) VALUES (\u503c1, \u503c2, ...); \u5168\u90e8\u5b57\u6bb5\uff1a INSERT INTO \u8868\u540d VALUES (\u503c1, \u503c2, ...); \u6279\u91cf\u6dfb\u52a0\u6570\u636e\uff1a INSERT INTO \u8868\u540d (\u5b57\u6bb5\u540d1, \u5b57\u6bb5\u540d2, ...) VALUES (\u503c1, \u503c2, ...), (\u503c1, \u503c2, ...), (\u503c1, \u503c2, ...); INSERT INTO \u8868\u540d VALUES (\u503c1, \u503c2, ...), (\u503c1, \u503c2, ...), (\u503c1, \u503c2, ...); \u6ce8\u610f\u4e8b\u9879 \u5b57\u7b26\u4e32\u548c\u65e5\u671f\u7c7b\u578b\u6570\u636e\u5e94\u8be5\u5305\u542b\u5728\u5f15\u53f7\u4e2d \u63d2\u5165\u7684\u6570\u636e\u5927\u5c0f\u5e94\u8be5\u5728\u5b57\u6bb5\u7684\u89c4\u5b9a\u8303\u56f4\u5185 \u66f4\u65b0\u548c\u5220\u9664\u6570\u636e \u4fee\u6539\u6570\u636e\uff1a UPDATE \u8868\u540d SET \u5b57\u6bb5\u540d1 = \u503c1, \u5b57\u6bb5\u540d2 = \u503c2, ... [ WHERE \u6761\u4ef6 ]; \u4f8b\uff1a UPDATE emp SET name = 'Jack' WHERE id = 1; \u5220\u9664\u6570\u636e\uff1a DELETE FROM \u8868\u540d [ WHERE \u6761\u4ef6 ]; DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09 \u8bed\u6cd5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d\u5b57\u6bb5 WHERE \u6761\u4ef6\u5217\u8868 GROUP BY \u5206\u7ec4\u5b57\u6bb5\u5217\u8868 HAVING \u5206\u7ec4\u540e\u7684\u6761\u4ef6\u5217\u8868 ORDER BY \u6392\u5e8f\u5b57\u6bb5\u5217\u8868 LIMIT \u5206\u9875\u53c2\u6570 \u57fa\u7840\u67e5\u8be2 \u67e5\u8be2\u591a\u4e2a\u5b57\u6bb5\uff1a SELECT \u5b57\u6bb51, \u5b57\u6bb52, \u5b57\u6bb53, ... FROM \u8868\u540d; SELECT * FROM \u8868\u540d; \u8bbe\u7f6e\u522b\u540d\uff1a SELECT \u5b57\u6bb51 [ AS \u522b\u540d1 ], \u5b57\u6bb52 [ AS \u522b\u540d2 ], \u5b57\u6bb53 [ AS \u522b\u540d3 ], ... FROM \u8868\u540d; SELECT \u5b57\u6bb51 [ \u522b\u540d1 ], \u5b57\u6bb52 [ \u522b\u540d2 ], \u5b57\u6bb53 [ \u522b\u540d3 ], ... FROM \u8868\u540d; \u53bb\u9664\u91cd\u590d\u8bb0\u5f55\uff1a SELECT DISTINCT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d; \u8f6c\u4e49\uff1a SELECT * FROM \u8868\u540d WHERE name LIKE '/_\u5f20\u4e09' ESCAPE '/' / \u4e4b\u540e\u7684_\u4e0d\u4f5c\u4e3a\u901a\u914d\u7b26 \u6761\u4ef6\u67e5\u8be2 \u8bed\u6cd5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d WHERE \u6761\u4ef6\u5217\u8868; \u6761\u4ef6\uff1a \u6bd4\u8f83\u8fd0\u7b97\u7b26 \u529f\u80fd > \u5927\u4e8e >= \u5927\u4e8e\u7b49\u4e8e < \u5c0f\u4e8e <= \u5c0f\u4e8e\u7b49\u4e8e = \u7b49\u4e8e <> \u6216 != \u4e0d\u7b49\u4e8e BETWEEN ... AND ... \u5728\u67d0\u4e2a\u8303\u56f4\u5185\uff08\u542b\u6700\u5c0f\u3001\u6700\u5927\u503c\uff09 IN(...) \u5728in\u4e4b\u540e\u7684\u5217\u8868\u4e2d\u7684\u503c\uff0c\u591a\u9009\u4e00 LIKE \u5360\u4f4d\u7b26 \u6a21\u7cca\u5339\u914d\uff08_\u5339\u914d\u5355\u4e2a\u5b57\u7b26\uff0c%\u5339\u914d\u4efb\u610f\u4e2a\u5b57\u7b26\uff09 IS NULL \u662fNULL \u903b\u8f91\u8fd0\u7b97\u7b26 \u529f\u80fd AND \u6216 && \u5e76\u4e14\uff08\u591a\u4e2a\u6761\u4ef6\u540c\u65f6\u6210\u7acb\uff09 OR \u6216 || \u6216\u8005\uff08\u591a\u4e2a\u6761\u4ef6\u4efb\u610f\u4e00\u4e2a\u6210\u7acb\uff09 NOT \u6216 ! \u975e\uff0c\u4e0d\u662f \u4f8b\u5b50\uff1a -- \u5e74\u9f84\u7b49\u4e8e30 select * from employee where age = 30; -- \u5e74\u9f84\u5c0f\u4e8e30 select * from employee where age < 30; -- \u5c0f\u4e8e\u7b49\u4e8e select * from employee where age <= 30; -- \u6ca1\u6709\u8eab\u4efd\u8bc1 select * from employee where idcard is null or idcard = ''; -- \u6709\u8eab\u4efd\u8bc1 select * from employee where idcard; select * from employee where idcard is not null; -- \u4e0d\u7b49\u4e8e select * from employee where age != 30; -- \u5e74\u9f84\u572820\u523030\u4e4b\u95f4 select * from employee where age between 20 and 30; select * from employee where age >= 20 and age <= 30; -- \u4e0b\u9762\u8bed\u53e5\u4e0d\u62a5\u9519\uff0c\u4f46\u67e5\u4e0d\u5230\u4efb\u4f55\u4fe1\u606f select * from employee where age between 30 and 20; -- \u6027\u522b\u4e3a\u5973\u4e14\u5e74\u9f84\u5c0f\u4e8e30 select * from employee where age < 30 and gender = '\u5973'; -- \u5e74\u9f84\u7b49\u4e8e25\u621630\u621635 select * from employee where age = 25 or age = 30 or age = 35; select * from employee where age in (25, 30, 35); -- \u59d3\u540d\u4e3a\u4e24\u4e2a\u5b57 select * from employee where name like '__'; -- \u8eab\u4efd\u8bc1\u6700\u540e\u4e3aX select * from employee where idcard like '%X'; \u805a\u5408\u67e5\u8be2\uff08\u805a\u5408\u51fd\u6570\uff09 \u5e38\u89c1\u805a\u5408\u51fd\u6570\uff1a \u51fd\u6570 \u529f\u80fd count \u7edf\u8ba1\u6570\u91cf max \u6700\u5927\u503c min \u6700\u5c0f\u503c avg \u5e73\u5747\u503c sum \u6c42\u548c \u8bed\u6cd5\uff1a SELECT \u805a\u5408\u51fd\u6570(\u5b57\u6bb5\u5217\u8868) FROM \u8868\u540d; \u4f8b\uff1a SELECT count(id) from employee where workaddress = \"\u5e7f\u4e1c\u7701\"; \u5206\u7ec4\u67e5\u8be2 \u8bed\u6cd5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d [ WHERE \u6761\u4ef6 ] GROUP BY \u5206\u7ec4\u5b57\u6bb5\u540d [ HAVING \u5206\u7ec4\u540e\u7684\u8fc7\u6ee4\u6761\u4ef6 ]; where \u548c having \u7684\u533a\u522b\uff1a \u6267\u884c\u65f6\u673a\u4e0d\u540c\uff1awhere\u662f\u5206\u7ec4\u4e4b\u524d\u8fdb\u884c\u8fc7\u6ee4\uff0c\u4e0d\u6ee1\u8db3where\u6761\u4ef6\u4e0d\u53c2\u4e0e\u5206\u7ec4\uff1bhaving\u662f\u5206\u7ec4\u540e\u5bf9\u7ed3\u679c\u8fdb\u884c\u8fc7\u6ee4\u3002 \u5224\u65ad\u6761\u4ef6\u4e0d\u540c\uff1awhere\u4e0d\u80fd\u5bf9\u805a\u5408\u51fd\u6570\u8fdb\u884c\u5224\u65ad\uff0c\u800chaving\u53ef\u4ee5\u3002 \u4f8b\u5b50\uff1a -- \u6839\u636e\u6027\u522b\u5206\u7ec4\uff0c\u7edf\u8ba1\u7537\u6027\u548c\u5973\u6027\u6570\u91cf\uff08\u53ea\u663e\u793a\u5206\u7ec4\u6570\u91cf\uff0c\u4e0d\u663e\u793a\u54ea\u4e2a\u662f\u7537\u54ea\u4e2a\u662f\u5973\uff09 select count(*) from employee group by gender; -- \u6839\u636e\u6027\u522b\u5206\u7ec4\uff0c\u7edf\u8ba1\u7537\u6027\u548c\u5973\u6027\u6570\u91cf select gender, count(*) from employee group by gender; -- \u6839\u636e\u6027\u522b\u5206\u7ec4\uff0c\u7edf\u8ba1\u7537\u6027\u548c\u5973\u6027\u7684\u5e73\u5747\u5e74\u9f84 select gender, avg(age) from employee group by gender; -- \u5e74\u9f84\u5c0f\u4e8e45\uff0c\u5e76\u6839\u636e\u5de5\u4f5c\u5730\u5740\u5206\u7ec4 select workaddress, count(*) from employee where age < 45 group by workaddress; -- \u5e74\u9f84\u5c0f\u4e8e45\uff0c\u5e76\u6839\u636e\u5de5\u4f5c\u5730\u5740\u5206\u7ec4\uff0c\u83b7\u53d6\u5458\u5de5\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e3\u7684\u5de5\u4f5c\u5730\u5740 select workaddress, count(*) address_count from employee where age < 45 group by workaddress having address_count >= 3; \u6ce8\u610f\u4e8b\u9879 \u6267\u884c\u987a\u5e8f\uff1awhere > \u805a\u5408\u51fd\u6570 > having \u5206\u7ec4\u4e4b\u540e\uff0c\u67e5\u8be2\u7684\u5b57\u6bb5\u4e00\u822c\u4e3a\u805a\u5408\u51fd\u6570\u548c\u5206\u7ec4\u5b57\u6bb5\uff0c\u67e5\u8be2\u5176\u4ed6\u5b57\u6bb5\u65e0\u4efb\u4f55\u610f\u4e49 \u6392\u5e8f\u67e5\u8be2 \u8bed\u6cd5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d ORDER BY \u5b57\u6bb51 \u6392\u5e8f\u65b9\u5f0f1, \u5b57\u6bb52 \u6392\u5e8f\u65b9\u5f0f2; \u6392\u5e8f\u65b9\u5f0f\uff1a ASC: \u5347\u5e8f\uff08\u9ed8\u8ba4\uff09 DESC: \u964d\u5e8f \u4f8b\u5b50\uff1a -- \u6839\u636e\u5e74\u9f84\u5347\u5e8f\u6392\u5e8f SELECT * FROM employee ORDER BY age ASC; SELECT * FROM employee ORDER BY age; -- \u4e24\u5b57\u6bb5\u6392\u5e8f\uff0c\u6839\u636e\u5e74\u9f84\u5347\u5e8f\u6392\u5e8f\uff0c\u5165\u804c\u65f6\u95f4\u964d\u5e8f\u6392\u5e8f SELECT * FROM employee ORDER BY age ASC, entrydate DESC; \u6ce8\u610f\u4e8b\u9879 \u5982\u679c\u662f\u591a\u5b57\u6bb5\u6392\u5e8f\uff0c\u5f53\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u503c\u76f8\u540c\u65f6\uff0c\u624d\u4f1a\u6839\u636e\u7b2c\u4e8c\u4e2a\u5b57\u6bb5\u8fdb\u884c\u6392\u5e8f \u5206\u9875\u67e5\u8be2 \u8bed\u6cd5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d LIMIT \u8d77\u59cb\u7d22\u5f15, \u67e5\u8be2\u8bb0\u5f55\u6570; \u4f8b\u5b50\uff1a -- \u67e5\u8be2\u7b2c\u4e00\u9875\u6570\u636e\uff0c\u5c55\u793a10\u6761 SELECT * FROM employee LIMIT 0, 10; -- \u67e5\u8be2\u7b2c\u4e8c\u9875 SELECT * FROM employee LIMIT 10, 10; \u6ce8\u610f\u4e8b\u9879 \u8d77\u59cb\u7d22\u5f15\u4ece0\u5f00\u59cb\uff0c\u8d77\u59cb\u7d22\u5f15 = \uff08\u67e5\u8be2\u9875\u7801 - 1\uff09 * \u6bcf\u9875\u663e\u793a\u8bb0\u5f55\u6570 \u5206\u9875\u67e5\u8be2\u662f\u6570\u636e\u5e93\u7684\u65b9\u8a00\uff0c\u4e0d\u540c\u6570\u636e\u5e93\u6709\u4e0d\u540c\u5b9e\u73b0\uff0cMySQL\u662fLIMIT \u5982\u679c\u67e5\u8be2\u7684\u662f\u7b2c\u4e00\u9875\u6570\u636e\uff0c\u8d77\u59cb\u7d22\u5f15\u53ef\u4ee5\u7701\u7565\uff0c\u76f4\u63a5\u7b80\u5199 LIMIT 10 DQL\u6267\u884c\u987a\u5e8f FROM -> WHERE -> GROUP BY -> SELECT -> ORDER BY -> LIMIT DCL \u7ba1\u7406\u7528\u6237 \u67e5\u8be2\u7528\u6237\uff1a USE mysql; SELECT * FROM user; \u521b\u5efa\u7528\u6237: CREATE USER '\u7528\u6237\u540d'@'\u4e3b\u673a\u540d' IDENTIFIED BY '\u5bc6\u7801'; \u4fee\u6539\u7528\u6237\u5bc6\u7801\uff1a ALTER USER '\u7528\u6237\u540d'@'\u4e3b\u673a\u540d' IDENTIFIED WITH mysql_native_password BY '\u65b0\u5bc6\u7801'; \u5220\u9664\u7528\u6237\uff1a DROP USER '\u7528\u6237\u540d'@'\u4e3b\u673a\u540d'; \u4f8b\u5b50\uff1a -- \u521b\u5efa\u7528\u6237test\uff0c\u53ea\u80fd\u5728\u5f53\u524d\u4e3b\u673alocalhost\u8bbf\u95ee create user 'test'@'localhost' identified by '123456'; -- \u521b\u5efa\u7528\u6237test\uff0c\u80fd\u5728\u4efb\u610f\u4e3b\u673a\u8bbf\u95ee create user 'test'@'%' identified by '123456'; create user 'test' identified by '123456'; -- \u4fee\u6539\u5bc6\u7801 alter user 'test'@'localhost' identified with mysql_native_password by '1234'; -- \u5220\u9664\u7528\u6237 drop user 'test'@'localhost'; \u6ce8\u610f\u4e8b\u9879 \u4e3b\u673a\u540d\u53ef\u4ee5\u4f7f\u7528 % \u901a\u914d \u6743\u9650\u63a7\u5236 \u5e38\u7528\u6743\u9650\uff1a \u6743\u9650 \u8bf4\u660e ALL, ALL PRIVILEGES \u6240\u6709\u6743\u9650 SELECT \u67e5\u8be2\u6570\u636e INSERT \u63d2\u5165\u6570\u636e UPDATE \u4fee\u6539\u6570\u636e DELETE \u5220\u9664\u6570\u636e ALTER \u4fee\u6539\u8868 DROP \u5220\u9664\u6570\u636e\u5e93/\u8868/\u89c6\u56fe CREATE \u521b\u5efa\u6570\u636e\u5e93/\u8868 \u66f4\u591a\u6743\u9650\u8bf7\u770b \u6743\u9650\u4e00\u89c8\u8868 \u67e5\u8be2\u6743\u9650\uff1a SHOW GRANTS FOR '\u7528\u6237\u540d'@'\u4e3b\u673a\u540d'; \u6388\u4e88\u6743\u9650\uff1a GRANT \u6743\u9650\u5217\u8868 ON \u6570\u636e\u5e93\u540d.\u8868\u540d TO '\u7528\u6237\u540d'@'\u4e3b\u673a\u540d'; \u64a4\u9500\u6743\u9650\uff1a REVOKE \u6743\u9650\u5217\u8868 ON \u6570\u636e\u5e93\u540d.\u8868\u540d FROM '\u7528\u6237\u540d'@'\u4e3b\u673a\u540d'; \u6ce8\u610f\u4e8b\u9879 \u591a\u4e2a\u6743\u9650\u7528\u9017\u53f7\u5206\u9694 \u6388\u6743\u65f6\uff0c\u6570\u636e\u5e93\u540d\u548c\u8868\u540d\u53ef\u4ee5\u7528 * \u8fdb\u884c\u901a\u914d\uff0c\u4ee3\u8868\u6240\u6709 \u51fd\u6570 \u5b57\u7b26\u4e32\u51fd\u6570 \u6570\u503c\u51fd\u6570 \u65e5\u671f\u51fd\u6570 \u6d41\u7a0b\u51fd\u6570 \u5b57\u7b26\u4e32\u51fd\u6570 \u5e38\u7528\u51fd\u6570\uff1a \u51fd\u6570 \u529f\u80fd CONCAT(s1, s2, ..., sn) \u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u5c06s1, s2, ..., sn\u62fc\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32 LOWER(str) \u5c06\u5b57\u7b26\u4e32\u5168\u90e8\u8f6c\u4e3a\u5c0f\u5199 UPPER(str) \u5c06\u5b57\u7b26\u4e32\u5168\u90e8\u8f6c\u4e3a\u5927\u5199 LPAD(str, n, pad) \u5de6\u586b\u5145\uff0c\u7528\u5b57\u7b26\u4e32pad\u5bf9str\u7684\u5de6\u8fb9\u8fdb\u884c\u586b\u5145\uff0c\u8fbe\u5230n\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6 RPAD(str, n, pad) \u53f3\u586b\u5145\uff0c\u7528\u5b57\u7b26\u4e32pad\u5bf9str\u7684\u53f3\u8fb9\u8fdb\u884c\u586b\u5145\uff0c\u8fbe\u5230n\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6 TRIM(str) \u53bb\u6389\u5b57\u7b26\u4e32\u5934\u90e8\u548c\u5c3e\u90e8\u7684\u7a7a\u683c SUBSTRING(str, start, len) \u8fd4\u56de\u4ece\u5b57\u7b26\u4e32str\u4ecestart\u4f4d\u7f6e\u8d77\u7684len\u4e2a\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 REPLACE(column, source, replace) \u66ff\u6362\u5b57\u7b26\u4e32 \u4f7f\u7528\u793a\u4f8b\uff1a -- \u62fc\u63a5 SELECT CONCAT('Hello', 'World'); -- \u5c0f\u5199 SELECT LOWER('Hello'); -- \u5927\u5199 SELECT UPPER('Hello'); -- \u5de6\u586b\u5145 SELECT LPAD('01', 5, '-'); -- \u53f3\u586b\u5145 SELECT RPAD('01', 5, '-'); -- \u53bb\u9664\u7a7a\u683c SELECT TRIM(' Hello World '); -- \u5207\u7247\uff08\u8d77\u59cb\u7d22\u5f15\u4e3a1\uff09 SELECT SUBSTRING('Hello World', 1, 5); \u6570\u503c\u51fd\u6570 \u5e38\u89c1\u51fd\u6570\uff1a \u51fd\u6570 \u529f\u80fd CEIL(x) \u5411\u4e0a\u53d6\u6574 FLOOR(x) \u5411\u4e0b\u53d6\u6574 MOD(x, y) \u8fd4\u56dex/y\u7684\u6a21 RAND() \u8fd4\u56de0~1\u5185\u7684\u968f\u673a\u6570 ROUND(x, y) \u6c42\u53c2\u6570x\u7684\u56db\u820d\u4e94\u5165\u503c\uff0c\u4fdd\u7559y\u4f4d\u5c0f\u6570 \u65e5\u671f\u51fd\u6570 \u5e38\u7528\u51fd\u6570\uff1a \u51fd\u6570 \u529f\u80fd CURDATE() \u8fd4\u56de\u5f53\u524d\u65e5\u671f CURTIME() \u8fd4\u56de\u5f53\u524d\u65f6\u95f4 NOW() \u8fd4\u56de\u5f53\u524d\u65e5\u671f\u548c\u65f6\u95f4 YEAR(date) \u83b7\u53d6\u6307\u5b9adate\u7684\u5e74\u4efd MONTH(date) \u83b7\u53d6\u6307\u5b9adate\u7684\u6708\u4efd DAY(date) \u83b7\u53d6\u6307\u5b9adate\u7684\u65e5\u671f DATE_ADD(date, INTERVAL expr type) \u8fd4\u56de\u4e00\u4e2a\u65e5\u671f/\u65f6\u95f4\u503c\u52a0\u4e0a\u4e00\u4e2a\u65f6\u95f4\u95f4\u9694expr\u540e\u7684\u65f6\u95f4\u503c DATEDIFF(date1, date2) \u8fd4\u56de\u8d77\u59cb\u65f6\u95f4date1\u548c\u7ed3\u675f\u65f6\u95f4date2\u4e4b\u95f4\u7684\u5929\u6570 \u4f8b\u5b50\uff1a -- DATE_ADD SELECT DATE_ADD(NOW(), INTERVAL 70 YEAR); \u6d41\u7a0b\u51fd\u6570 \u5e38\u7528\u51fd\u6570\uff1a \u51fd\u6570 \u529f\u80fd IF(value, t, f) \u5982\u679cvalue\u4e3atrue\uff0c\u5219\u8fd4\u56det\uff0c\u5426\u5219\u8fd4\u56def IFNULL(value1, value2) \u5982\u679cvalue1\u4e0d\u4e3a\u7a7a\uff0c\u8fd4\u56devalue1\uff0c\u5426\u5219\u8fd4\u56devalue2 CASE WHEN [ val1 ] THEN [ res1 ] ... ELSE [ default ] END \u5982\u679cval1\u4e3atrue\uff0c\u8fd4\u56deres1\uff0c... \u5426\u5219\u8fd4\u56dedefault\u9ed8\u8ba4\u503c CASE [ expr ] WHEN [ val1 ] THEN [ res1 ] ... ELSE [ default ] END \u5982\u679cexpr\u7684\u503c\u7b49\u4e8eval1\uff0c\u8fd4\u56deres1\uff0c... \u5426\u5219\u8fd4\u56dedefault\u9ed8\u8ba4\u503c \u4f8b\u5b50\uff1a select name, (case when age > 30 then '\u4e2d\u5e74' else '\u9752\u5e74' end) from employee; select name, (case workaddress when '\u5317\u4eac\u5e02' then '\u4e00\u7ebf\u57ce\u5e02' when '\u4e0a\u6d77\u5e02' then '\u4e00\u7ebf\u57ce\u5e02' else '\u4e8c\u7ebf\u57ce\u5e02' end) as '\u5de5\u4f5c\u5730\u5740' from employee; \u7ea6\u675f \u5206\u7c7b\uff1a \u7ea6\u675f \u63cf\u8ff0 \u5173\u952e\u5b57 \u975e\u7a7a\u7ea6\u675f \u9650\u5236\u8be5\u5b57\u6bb5\u7684\u6570\u636e\u4e0d\u80fd\u4e3anull NOT NULL \u552f\u4e00\u7ea6\u675f \u4fdd\u8bc1\u8be5\u5b57\u6bb5\u7684\u6240\u6709\u6570\u636e\u90fd\u662f\u552f\u4e00\u3001\u4e0d\u91cd\u590d\u7684 UNIQUE \u4e3b\u952e\u7ea6\u675f \u4e3b\u952e\u662f\u4e00\u884c\u6570\u636e\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u8981\u6c42\u975e\u7a7a\u4e14\u552f\u4e00 PRIMARY KEY \u9ed8\u8ba4\u7ea6\u675f \u4fdd\u5b58\u6570\u636e\u65f6\uff0c\u5982\u679c\u672a\u6307\u5b9a\u8be5\u5b57\u6bb5\u7684\u503c\uff0c\u5219\u91c7\u7528\u9ed8\u8ba4\u503c DEFAULT \u68c0\u67e5\u7ea6\u675f\uff088.0.1\u7248\u672c\u540e\uff09 \u4fdd\u8bc1\u5b57\u6bb5\u503c\u6ee1\u8db3\u67d0\u4e00\u4e2a\u6761\u4ef6 CHECK \u5916\u952e\u7ea6\u675f \u7528\u6765\u8ba9\u4e24\u5f20\u56fe\u7684\u6570\u636e\u4e4b\u95f4\u5efa\u7acb\u8fde\u63a5\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u548c\u5b8c\u6574\u6027 FOREIGN KEY \u7ea6\u675f\u662f\u4f5c\u7528\u4e8e\u8868\u4e2d\u5b57\u6bb5\u4e0a\u7684\uff0c\u53ef\u4ee5\u518d\u521b\u5efa\u8868/\u4fee\u6539\u8868\u7684\u65f6\u5019\u6dfb\u52a0\u7ea6\u675f\u3002 \u5e38\u7528\u7ea6\u675f \u7ea6\u675f\u6761\u4ef6 \u5173\u952e\u5b57 \u4e3b\u952e PRIMARY KEY \u81ea\u52a8\u589e\u957f AUTO_INCREMENT \u4e0d\u4e3a\u7a7a NOT NULL \u552f\u4e00 UNIQUE \u903b\u8f91\u6761\u4ef6 CHECK \u9ed8\u8ba4\u503c DEFAULT \u4f8b\u5b50\uff1a create table user( id int primary key auto_increment, name varchar(10) not null unique, age int check(age > 0 and age < 120), status char(1) default '1', gender char(1) ); \u5916\u952e\u7ea6\u675f \u6dfb\u52a0\u5916\u952e\uff1a CREATE TABLE \u8868\u540d( \u5b57\u6bb5\u540d \u5b57\u6bb5\u7c7b\u578b, ... [CONSTRAINT] [\u5916\u952e\u540d\u79f0] FOREIGN KEY(\u5916\u952e\u5b57\u6bb5\u540d) REFERENCES \u4e3b\u8868(\u4e3b\u8868\u5217\u540d) ); ALTER TABLE \u8868\u540d ADD CONSTRAINT \u5916\u952e\u540d\u79f0 FOREIGN KEY (\u5916\u952e\u5b57\u6bb5\u540d) REFERENCES \u4e3b\u8868(\u4e3b\u8868\u5217\u540d); -- \u4f8b\u5b50 alter table emp add constraint fk_emp_dept_id foreign key(dept_id) references dept(id); \u5220\u9664\u5916\u952e\uff1a ALTER TABLE \u8868\u540d DROP FOREIGN KEY \u5916\u952e\u540d; \u5220\u9664/\u66f4\u65b0\u884c\u4e3a \u884c\u4e3a \u8bf4\u660e NO ACTION \u5f53\u5728\u7236\u8868\u4e2d\u5220\u9664/\u66f4\u65b0\u5bf9\u5e94\u8bb0\u5f55\u65f6\uff0c\u9996\u5148\u68c0\u67e5\u8be5\u8bb0\u5f55\u662f\u5426\u6709\u5bf9\u5e94\u5916\u952e\uff0c\u5982\u679c\u6709\u5219\u4e0d\u5141\u8bb8\u5220\u9664/\u66f4\u65b0\uff08\u4e0eRESTRICT\u4e00\u81f4\uff09 RESTRICT \u5f53\u5728\u7236\u8868\u4e2d\u5220\u9664/\u66f4\u65b0\u5bf9\u5e94\u8bb0\u5f55\u65f6\uff0c\u9996\u5148\u68c0\u67e5\u8be5\u8bb0\u5f55\u662f\u5426\u6709\u5bf9\u5e94\u5916\u952e\uff0c\u5982\u679c\u6709\u5219\u4e0d\u5141\u8bb8\u5220\u9664/\u66f4\u65b0\uff08\u4e0eNO ACTION\u4e00\u81f4\uff09 CASCADE \u5f53\u5728\u7236\u8868\u4e2d\u5220\u9664/\u66f4\u65b0\u5bf9\u5e94\u8bb0\u5f55\u65f6\uff0c\u9996\u5148\u68c0\u67e5\u8be5\u8bb0\u5f55\u662f\u5426\u6709\u5bf9\u5e94\u5916\u952e\uff0c\u5982\u679c\u6709\u5219\u4e5f\u5220\u9664/\u66f4\u65b0\u5916\u952e\u5728\u5b50\u8868\u4e2d\u7684\u8bb0\u5f55 SET NULL \u5f53\u5728\u7236\u8868\u4e2d\u5220\u9664/\u66f4\u65b0\u5bf9\u5e94\u8bb0\u5f55\u65f6\uff0c\u9996\u5148\u68c0\u67e5\u8be5\u8bb0\u5f55\u662f\u5426\u6709\u5bf9\u5e94\u5916\u952e\uff0c\u5982\u679c\u6709\u5219\u8bbe\u7f6e\u5b50\u8868\u4e2d\u8be5\u5916\u952e\u503c\u4e3anull\uff08\u8981\u6c42\u8be5\u5916\u952e\u5141\u8bb8\u4e3anull\uff09 SET DEFAULT \u7236\u8868\u6709\u53d8\u66f4\u65f6\uff0c\u5b50\u8868\u5c06\u5916\u952e\u8bbe\u4e3a\u4e00\u4e2a\u9ed8\u8ba4\u503c\uff08Innodb\u4e0d\u652f\u6301\uff09 \u66f4\u6539\u5220\u9664/\u66f4\u65b0\u884c\u4e3a\uff1a ALTER TABLE \u8868\u540d ADD CONSTRAINT \u5916\u952e\u540d\u79f0 FOREIGN KEY (\u5916\u952e\u5b57\u6bb5) REFERENCES \u4e3b\u8868\u540d(\u4e3b\u8868\u5b57\u6bb5\u540d) ON UPDATE \u884c\u4e3a ON DELETE \u884c\u4e3a; \u591a\u8868\u67e5\u8be2 \u591a\u8868\u5173\u7cfb \u4e00\u5bf9\u591a\uff08\u591a\u5bf9\u4e00\uff09 \u591a\u5bf9\u591a \u4e00\u5bf9\u4e00 \u4e00\u5bf9\u591a \u6848\u4f8b\uff1a\u90e8\u95e8\u4e0e\u5458\u5de5 \u5173\u7cfb\uff1a\u4e00\u4e2a\u90e8\u95e8\u5bf9\u5e94\u591a\u4e2a\u5458\u5de5\uff0c\u4e00\u4e2a\u5458\u5de5\u5bf9\u5e94\u4e00\u4e2a\u90e8\u95e8 \u5b9e\u73b0\uff1a\u5728\u591a\u7684\u4e00\u65b9\u5efa\u7acb\u5916\u952e\uff0c\u6307\u5411\u4e00\u7684\u4e00\u65b9\u7684\u4e3b\u952e \u591a\u5bf9\u591a \u6848\u4f8b\uff1a\u5b66\u751f\u4e0e\u8bfe\u7a0b \u5173\u7cfb\uff1a\u4e00\u4e2a\u5b66\u751f\u53ef\u4ee5\u9009\u591a\u95e8\u8bfe\u7a0b\uff0c\u4e00\u95e8\u8bfe\u7a0b\u4e5f\u53ef\u4ee5\u4f9b\u591a\u4e2a\u5b66\u751f\u9009\u4fee \u5b9e\u73b0\uff1a\u5efa\u7acb\u7b2c\u4e09\u5f20\u4e2d\u95f4\u8868\uff0c\u4e2d\u95f4\u8868\u81f3\u5c11\u5305\u542b\u4e24\u4e2a\u5916\u952e\uff0c\u5206\u522b\u5173\u8054\u4e24\u65b9\u4e3b\u952e \u4e00\u5bf9\u4e00 \u6848\u4f8b\uff1a\u7528\u6237\u4e0e\u7528\u6237\u8be6\u60c5 \u5173\u7cfb\uff1a\u4e00\u5bf9\u4e00\u5173\u7cfb\uff0c\u591a\u7528\u4e8e\u5355\u8868\u62c6\u5206\uff0c\u5c06\u4e00\u5f20\u8868\u7684\u57fa\u7840\u5b57\u6bb5\u653e\u5728\u4e00\u5f20\u8868\u4e2d\uff0c\u5176\u4ed6\u8be6\u60c5\u5b57\u6bb5\u653e\u5728\u53e6\u4e00\u5f20\u8868\u4e2d\uff0c\u4ee5\u63d0\u5347\u64cd\u4f5c\u6548\u7387 \u5b9e\u73b0\uff1a\u5728\u4efb\u610f\u4e00\u65b9\u52a0\u5165\u5916\u952e\uff0c\u5173\u8054\u53e6\u5916\u4e00\u65b9\u7684\u4e3b\u952e\uff0c\u5e76\u4e14\u8bbe\u7f6e\u5916\u952e\u4e3a\u552f\u4e00\u7684\uff08UNIQUE\uff09 \u67e5\u8be2 \u5408\u5e76\u67e5\u8be2\uff08\u7b1b\u5361\u5c14\u79ef\uff0c\u4f1a\u5c55\u793a\u6240\u6709\u7ec4\u5408\u7ed3\u679c\uff09\uff1a select * from employee, dept; \u7b1b\u5361\u5c14\u79ef\uff1a\u4e24\u4e2a\u96c6\u5408A\u96c6\u5408\u548cB\u96c6\u5408\u7684\u6240\u6709\u7ec4\u5408\u60c5\u51b5\uff08\u5728\u591a\u8868\u67e5\u8be2\u65f6\uff0c\u9700\u8981\u6d88\u9664\u65e0\u6548\u7684\u7b1b\u5361\u5c14\u79ef\uff09 \u6d88\u9664\u65e0\u6548\u7b1b\u5361\u5c14\u79ef\uff1a select * from employee, dept where employee.dept = dept.id; \u5185\u8fde\u63a5\u67e5\u8be2 \u5185\u8fde\u63a5\u67e5\u8be2\u7684\u662f\u4e24\u5f20\u8868\u4ea4\u96c6\u7684\u90e8\u5206 \u9690\u5f0f\u5185\u8fde\u63a5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u88681, \u88682 WHERE \u6761\u4ef6 ...; \u663e\u5f0f\u5185\u8fde\u63a5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u88681 [ INNER ] JOIN \u88682 ON \u8fde\u63a5\u6761\u4ef6 ...; \u663e\u5f0f\u6027\u80fd\u6bd4\u9690\u5f0f\u9ad8 \u4f8b\u5b50\uff1a -- \u67e5\u8be2\u5458\u5de5\u59d3\u540d\uff0c\u53ca\u5173\u8054\u7684\u90e8\u95e8\u7684\u540d\u79f0 -- \u9690\u5f0f select e.name, d.name from employee as e, dept as d where e.dept = d.id; -- \u663e\u5f0f select e.name, d.name from employee as e inner join dept as d on e.dept = d.id; \u5916\u8fde\u63a5\u67e5\u8be2 \u5de6\u5916\u8fde\u63a5\uff1a \u67e5\u8be2\u5de6\u8868\u6240\u6709\u6570\u636e\uff0c\u4ee5\u53ca\u4e24\u5f20\u8868\u4ea4\u96c6\u90e8\u5206\u6570\u636e SELECT \u5b57\u6bb5\u5217\u8868 FROM \u88681 LEFT [ OUTER ] JOIN \u88682 ON \u6761\u4ef6 ...; \u76f8\u5f53\u4e8e\u67e5\u8be2\u88681\u7684\u6240\u6709\u6570\u636e\uff0c\u5305\u542b\u88681\u548c\u88682\u4ea4\u96c6\u90e8\u5206\u6570\u636e \u53f3\u5916\u8fde\u63a5\uff1a \u67e5\u8be2\u53f3\u8868\u6240\u6709\u6570\u636e\uff0c\u4ee5\u53ca\u4e24\u5f20\u8868\u4ea4\u96c6\u90e8\u5206\u6570\u636e SELECT \u5b57\u6bb5\u5217\u8868 FROM \u88681 RIGHT [ OUTER ] JOIN \u88682 ON \u6761\u4ef6 ...; \u4f8b\u5b50\uff1a -- \u5de6 select e.*, d.name from employee as e left outer join dept as d on e.dept = d.id; select d.name, e.* from dept d left outer join emp e on e.dept = d.id; -- \u8fd9\u6761\u8bed\u53e5\u4e0e\u4e0b\u9762\u7684\u8bed\u53e5\u6548\u679c\u4e00\u6837 -- \u53f3 select d.name, e.* from employee as e right outer join dept as d on e.dept = d.id; \u5de6\u8fde\u63a5\u53ef\u4ee5\u67e5\u8be2\u5230\u6ca1\u6709dept\u7684employee\uff0c\u53f3\u8fde\u63a5\u53ef\u4ee5\u67e5\u8be2\u5230\u6ca1\u6709employee\u7684dept \u81ea\u8fde\u63a5\u67e5\u8be2 \u5f53\u524d\u8868\u4e0e\u81ea\u8eab\u7684\u8fde\u63a5\u67e5\u8be2\uff0c\u81ea\u8fde\u63a5\u5fc5\u987b\u4f7f\u7528\u8868\u522b\u540d \u8bed\u6cd5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868A \u522b\u540dA JOIN \u8868A \u522b\u540dB ON \u6761\u4ef6 ...; \u81ea\u8fde\u63a5\u67e5\u8be2\uff0c\u53ef\u4ee5\u662f\u5185\u8fde\u63a5\u67e5\u8be2\uff0c\u4e5f\u53ef\u4ee5\u662f\u5916\u8fde\u63a5\u67e5\u8be2 \u4f8b\u5b50\uff1a -- \u67e5\u8be2\u5458\u5de5\u53ca\u5176\u6240\u5c5e\u9886\u5bfc\u7684\u540d\u5b57 select a.name, b.name from employee a, employee b where a.manager = b.id; -- \u6ca1\u6709\u9886\u5bfc\u7684\u4e5f\u67e5\u8be2\u51fa\u6765 select a.name, b.name from employee a left join employee b on a.manager = b.id; \u8054\u5408\u67e5\u8be2 union, union all \u628a\u591a\u6b21\u67e5\u8be2\u7684\u7ed3\u679c\u5408\u5e76\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u67e5\u8be2\u96c6 \u8bed\u6cd5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868A ... UNION [ALL] SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868B ... \u6ce8\u610f\u4e8b\u9879 UNION ALL \u4f1a\u6709\u91cd\u590d\u7ed3\u679c\uff0cUNION \u4e0d\u4f1a \u8054\u5408\u67e5\u8be2\u6bd4\u4f7f\u7528or\u6548\u7387\u9ad8\uff0c\u4e0d\u4f1a\u4f7f\u7d22\u5f15\u5931\u6548 \u5b50\u67e5\u8be2 SQL\u8bed\u53e5\u4e2d\u5d4c\u5957SELECT\u8bed\u53e5\uff0c\u79f0\u8c13\u5d4c\u5957\u67e5\u8be2\uff0c\u53c8\u79f0\u5b50\u67e5\u8be2\u3002 SELECT * FROM t1 WHERE column1 = ( SELECT column1 FROM t2); \u5b50\u67e5\u8be2\u5916\u90e8\u7684\u8bed\u53e5\u53ef\u4ee5\u662f INSERT / UPDATE / DELETE / SELECT \u7684\u4efb\u4f55\u4e00\u4e2a \u6839\u636e\u5b50\u67e5\u8be2\u7ed3\u679c\u53ef\u4ee5\u5206\u4e3a\uff1a \u6807\u91cf\u5b50\u67e5\u8be2\uff08\u5b50\u67e5\u8be2\u7ed3\u679c\u4e3a\u5355\u4e2a\u503c\uff09 \u5217\u5b50\u67e5\u8be2\uff08\u5b50\u67e5\u8be2\u7ed3\u679c\u4e3a\u4e00\u5217\uff09 \u884c\u5b50\u67e5\u8be2\uff08\u5b50\u67e5\u8be2\u7ed3\u679c\u4e3a\u4e00\u884c\uff09 \u8868\u5b50\u67e5\u8be2\uff08\u5b50\u67e5\u8be2\u7ed3\u679c\u4e3a\u591a\u884c\u591a\u5217\uff09 \u6839\u636e\u5b50\u67e5\u8be2\u4f4d\u7f6e\u53ef\u5206\u4e3a\uff1a WHERE \u4e4b\u540e FROM \u4e4b\u540e SELECT \u4e4b\u540e \u6807\u91cf\u5b50\u67e5\u8be2 \u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u5355\u4e2a\u503c\uff08\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u3001\u65e5\u671f\u7b49\uff09\u3002 \u5e38\u7528\u64cd\u4f5c\u7b26\uff1a- < > > >= < <= \u4f8b\u5b50\uff1a -- \u67e5\u8be2\u9500\u552e\u90e8\u6240\u6709\u5458\u5de5 select id from dept where name = '\u9500\u552e\u90e8'; -- \u6839\u636e\u9500\u552e\u90e8\u90e8\u95e8ID\uff0c\u67e5\u8be2\u5458\u5de5\u4fe1\u606f select * from employee where dept = 4; -- \u5408\u5e76\uff08\u5b50\u67e5\u8be2\uff09 select * from employee where dept = (select id from dept where name = '\u9500\u552e\u90e8'); -- \u67e5\u8be2xxx\u5165\u804c\u4e4b\u540e\u7684\u5458\u5de5\u4fe1\u606f select * from employee where entrydate > (select entrydate from employee where name = 'xxx'); \u5217\u5b50\u67e5\u8be2 \u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u5217\uff08\u53ef\u4ee5\u662f\u591a\u884c\uff09\u3002 \u5e38\u7528\u64cd\u4f5c\u7b26\uff1a \u64cd\u4f5c\u7b26 \u63cf\u8ff0 IN \u5728\u6307\u5b9a\u7684\u96c6\u5408\u8303\u56f4\u5185\uff0c\u591a\u9009\u4e00 NOT IN \u4e0d\u5728\u6307\u5b9a\u7684\u96c6\u5408\u8303\u56f4\u5185 ANY \u5b50\u67e5\u8be2\u8fd4\u56de\u5217\u8868\u4e2d\uff0c\u6709\u4efb\u610f\u4e00\u4e2a\u6ee1\u8db3\u5373\u53ef SOME \u4e0eANY\u7b49\u540c\uff0c\u4f7f\u7528SOME\u7684\u5730\u65b9\u90fd\u53ef\u4ee5\u4f7f\u7528ANY ALL \u5b50\u67e5\u8be2\u8fd4\u56de\u5217\u8868\u7684\u6240\u6709\u503c\u90fd\u5fc5\u987b\u6ee1\u8db3 \u4f8b\u5b50\uff1a -- \u67e5\u8be2\u9500\u552e\u90e8\u548c\u5e02\u573a\u90e8\u7684\u6240\u6709\u5458\u5de5\u4fe1\u606f select * from employee where dept in (select id from dept where name = '\u9500\u552e\u90e8' or name = '\u5e02\u573a\u90e8'); -- \u67e5\u8be2\u6bd4\u8d22\u52a1\u90e8\u6240\u6709\u4eba\u5de5\u8d44\u90fd\u9ad8\u7684\u5458\u5de5\u4fe1\u606f select * from employee where salary > all(select salary from employee where dept = (select id from dept where name = '\u8d22\u52a1\u90e8')); -- \u67e5\u8be2\u6bd4\u7814\u53d1\u90e8\u4efb\u610f\u4e00\u4eba\u5de5\u8d44\u9ad8\u7684\u5458\u5de5\u4fe1\u606f select * from employee where salary > any (select salary from employee where dept = (select id from dept where name = '\u7814\u53d1\u90e8')); \u884c\u5b50\u67e5\u8be2 \u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u884c\uff08\u53ef\u4ee5\u662f\u591a\u5217\uff09\u3002 \u5e38\u7528\u64cd\u4f5c\u7b26\uff1a=, <, >, IN, NOT IN \u4f8b\u5b50\uff1a -- \u67e5\u8be2\u4e0exxx\u7684\u85aa\u8d44\u53ca\u76f4\u5c5e\u9886\u5bfc\u76f8\u540c\u7684\u5458\u5de5\u4fe1\u606f select * from employee where (salary, manager) = (12500, 1); select * from employee where (salary, manager) = (select salary, manager from employee where name = 'xxx'); \u8868\u5b50\u67e5\u8be2 \u8fd4\u56de\u7684\u7ed3\u679c\u662f\u591a\u884c\u591a\u5217 \u5e38\u7528\u64cd\u4f5c\u7b26\uff1aIN \u4f8b\u5b50\uff1a -- \u67e5\u8be2\u4e0exxx1\uff0cxxx2\u7684\u804c\u4f4d\u548c\u85aa\u8d44\u76f8\u540c\u7684\u5458\u5de5 select * from employee where (job, salary) in (select job, salary from employee where name = 'xxx1' or name = 'xxx2'); -- \u67e5\u8be2\u5165\u804c\u65e5\u671f\u662f2006-01-01\u4e4b\u540e\u7684\u5458\u5de5\uff0c\u53ca\u5176\u90e8\u95e8\u4fe1\u606f select e.*, d.* from (select * from employee where entrydate > '2006-01-01') as e left join dept as d on e.dept = d.id; \u4e8b\u52a1 \u4e8b\u52a1\u662f\u4e00\u7ec4\u64cd\u4f5c\u7684\u96c6\u5408\uff0c\u4e8b\u52a1\u4f1a\u628a\u6240\u6709\u64cd\u4f5c\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u4e00\u8d77\u5411\u7cfb\u7edf\u63d0\u4ea4\u6216\u64a4\u9500\u64cd\u4f5c\u8bf7\u6c42\uff0c\u5373\u8fd9\u4e9b\u64cd\u4f5c\u8981\u4e48\u540c\u65f6\u6210\u529f\uff0c\u8981\u4e48\u540c\u65f6\u5931\u8d25\u3002 \u57fa\u672c\u64cd\u4f5c\uff1a -- 1. \u67e5\u8be2\u5f20\u4e09\u8d26\u6237\u4f59\u989d select * from account where name = '\u5f20\u4e09'; -- 2. \u5c06\u5f20\u4e09\u8d26\u6237\u4f59\u989d-1000 update account set money = money - 1000 where name = '\u5f20\u4e09'; -- \u6b64\u8bed\u53e5\u51fa\u9519\u540e\u5f20\u4e09\u94b1\u51cf\u5c11\u4f46\u662f\u674e\u56db\u94b1\u6ca1\u6709\u589e\u52a0 \u6a21\u62dfsql\u8bed\u53e5\u9519\u8bef -- 3. \u5c06\u674e\u56db\u8d26\u6237\u4f59\u989d+1000 update account set money = money + 1000 where name = '\u674e\u56db'; -- \u67e5\u770b\u4e8b\u52a1\u63d0\u4ea4\u65b9\u5f0f SELECT @@AUTOCOMMIT; -- \u8bbe\u7f6e\u4e8b\u52a1\u63d0\u4ea4\u65b9\u5f0f\uff0c1\u4e3a\u81ea\u52a8\u63d0\u4ea4\uff0c0\u4e3a\u624b\u52a8\u63d0\u4ea4\uff0c\u8be5\u8bbe\u7f6e\u53ea\u5bf9\u5f53\u524d\u4f1a\u8bdd\u6709\u6548 SET @@AUTOCOMMIT = 0; -- \u63d0\u4ea4\u4e8b\u52a1 COMMIT; -- \u56de\u6eda\u4e8b\u52a1 ROLLBACK; -- \u8bbe\u7f6e\u624b\u52a8\u63d0\u4ea4\u540e\u4e0a\u9762\u4ee3\u7801\u6539\u4e3a\uff1a select * from account where name = '\u5f20\u4e09'; update account set money = money - 1000 where name = '\u5f20\u4e09'; update account set money = money + 1000 where name = '\u674e\u56db'; commit; \u64cd\u4f5c\u65b9\u5f0f\u4e8c\uff1a \u5f00\u542f\u4e8b\u52a1\uff1a START TRANSACTION \u6216 BEGIN TRANSACTION; \u63d0\u4ea4\u4e8b\u52a1\uff1a COMMIT; \u56de\u6eda\u4e8b\u52a1\uff1a ROLLBACK; \u64cd\u4f5c\u5b9e\u4f8b\uff1a start transaction; select * from account where name = '\u5f20\u4e09'; update account set money = money - 1000 where name = '\u5f20\u4e09'; update account set money = money + 1000 where name = '\u674e\u56db'; commit; \u56db\u5927\u7279\u6027ACID \u539f\u5b50\u6027(Atomicity)\uff1a\u4e8b\u52a1\u662f\u4e0d\u53ef\u5206\u5272\u7684\u6700\u5c0f\u64cd\u4f5c\u4f46\u613f\uff0c\u8981\u4e48\u5168\u90e8\u6210\u529f\uff0c\u8981\u4e48\u5168\u90e8\u5931\u8d25 \u4e00\u81f4\u6027(Consistency)\uff1a\u4e8b\u52a1\u5b8c\u6210\u65f6\uff0c\u5fc5\u987b\u4f7f\u6240\u6709\u6570\u636e\u90fd\u4fdd\u6301\u4e00\u81f4\u72b6\u6001 \u9694\u79bb\u6027(Isolation)\uff1a\u6570\u636e\u5e93\u7cfb\u7edf\u63d0\u4f9b\u7684\u9694\u79bb\u673a\u5236\uff0c\u4fdd\u8bc1\u4e8b\u52a1\u5728\u4e0d\u53d7\u5916\u90e8\u5e76\u53d1\u64cd\u4f5c\u5f71\u54cd\u7684\u72ec\u7acb\u73af\u5883\u4e0b\u8fd0\u884c \u6301\u4e45\u6027(Durability)\uff1a\u4e8b\u52a1\u4e00\u65e6\u63d0\u4ea4\u6216\u56de\u6eda\uff0c\u5b83\u5bf9\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u7684\u6539\u53d8\u5c31\u662f\u6c38\u4e45\u7684 \u5e76\u53d1\u4e8b\u52a1 \u95ee\u9898 \u63cf\u8ff0 \u810f\u8bfb \u4e00\u4e2a\u4e8b\u52a1\u8bfb\u5230\u53e6\u4e00\u4e2a\u4e8b\u52a1\u8fd8\u6ca1\u63d0\u4ea4\u7684\u6570\u636e \u4e0d\u53ef\u91cd\u590d\u8bfb \u4e00\u4e2a\u4e8b\u52a1\u5148\u540e\u8bfb\u53d6\u540c\u4e00\u6761\u8bb0\u5f55\uff0c\u4f46\u4e24\u6b21\u8bfb\u53d6\u7684\u6570\u636e\u4e0d\u540c \u5e7b\u8bfb \u4e00\u4e2a\u4e8b\u52a1\u6309\u7167\u6761\u4ef6\u67e5\u8be2\u6570\u636e\u65f6\uff0c\u6ca1\u6709\u5bf9\u5e94\u7684\u6570\u636e\u884c\uff0c\u4f46\u662f\u518d\u63d2\u5165\u6570\u636e\u65f6\uff0c\u53c8\u53d1\u73b0\u8fd9\u884c\u6570\u636e\u5df2\u7ecf\u5b58\u5728 \u8fd9\u4e09\u4e2a\u95ee\u9898\u7684\u8be6\u7ec6\u6f14\u793a\uff1ahttps://www.bilibili.com/video/BV1Kr4y1i7ru?p=55cd \u5e76\u53d1\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff1a \u9694\u79bb\u7ea7\u522b \u810f\u8bfb \u4e0d\u53ef\u91cd\u590d\u8bfb \u5e7b\u8bfb Read uncommitted \u221a \u221a \u221a Read committed \u00d7 \u221a \u221a Repeatable Read(\u9ed8\u8ba4) \u00d7 \u00d7 \u221a Serializable \u00d7 \u00d7 \u00d7 \u221a\u8868\u793a\u5728\u5f53\u524d\u9694\u79bb\u7ea7\u522b\u4e0b\u8be5\u95ee\u9898\u4f1a\u51fa\u73b0 Serializable \u6027\u80fd\u6700\u4f4e\uff1bRead uncommitted \u6027\u80fd\u6700\u9ad8\uff0c\u6570\u636e\u5b89\u5168\u6027\u6700\u5dee \u67e5\u770b\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff1a SELECT @@TRANSACTION_ISOLATION; \u8bbe\u7f6e\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff1a SET [ SESSION | GLOBAL ] TRANSACTION ISOLATION LEVEL {READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE }; SESSION \u662f\u4f1a\u8bdd\u7ea7\u522b\uff0c\u8868\u793a\u53ea\u9488\u5bf9\u5f53\u524d\u4f1a\u8bdd\u6709\u6548\uff0cGLOBAL \u8868\u793a\u5bf9\u6240\u6709\u4f1a\u8bdd\u6709\u6548","title":"MySQL\u57fa\u7840\u7bc7"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_1","text":"","title":"\u57fa\u7840\u7bc7"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_2","text":"DDL: \u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff0c\u7528\u6765\u5b9a\u4e49\u6570\u636e\u5e93\u5bf9\u8c61\uff08\u6570\u636e\u5e93\u3001\u8868\u3001\u5b57\u6bb5\uff09 DML: \u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff0c\u7528\u6765\u5bf9\u6570\u636e\u5e93\u8868\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u589e\u5220\u6539 DQL: \u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff0c\u7528\u6765\u67e5\u8be2\u6570\u636e\u5e93\u4e2d\u8868\u7684\u8bb0\u5f55 DCL: \u6570\u636e\u63a7\u5236\u8bed\u8a00\uff0c\u7528\u6765\u521b\u5efa\u6570\u636e\u5e93\u7528\u6237\u3001\u63a7\u5236\u6570\u636e\u5e93\u7684\u63a7\u5236\u6743\u9650","title":"\u901a\u7528\u8bed\u6cd5\u53ca\u5206\u7c7b"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#ddl","text":"\u6570\u636e\u5b9a\u4e49\u8bed\u8a00","title":"DDL\uff08\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff09"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_3","text":"\u67e5\u8be2\u6240\u6709\u6570\u636e\u5e93\uff1a SHOW DATABASES; \u67e5\u8be2\u5f53\u524d\u6570\u636e\u5e93\uff1a SELECT DATABASE(); \u521b\u5efa\u6570\u636e\u5e93\uff1a CREATE DATABASE [ IF NOT EXISTS ] \u6570\u636e\u5e93\u540d [ DEFAULT CHARSET \u5b57\u7b26\u96c6] [COLLATE \u6392\u5e8f\u89c4\u5219 ]; \u5220\u9664\u6570\u636e\u5e93\uff1a DROP DATABASE [ IF EXISTS ] \u6570\u636e\u5e93\u540d; \u4f7f\u7528\u6570\u636e\u5e93\uff1a USE \u6570\u636e\u5e93\u540d;","title":"\u6570\u636e\u5e93\u64cd\u4f5c"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_4","text":"UTF8\u5b57\u7b26\u96c6\u957f\u5ea6\u4e3a3\u5b57\u8282\uff0c\u6709\u4e9b\u7b26\u53f7\u53604\u5b57\u8282\uff0c\u6240\u4ee5\u63a8\u8350\u7528utf8mb4\u5b57\u7b26\u96c6","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_5","text":"\u67e5\u8be2\u5f53\u524d\u6570\u636e\u5e93\u6240\u6709\u8868\uff1a SHOW TABLES; \u67e5\u8be2\u8868\u7ed3\u6784\uff1a DESC \u8868\u540d; \u67e5\u8be2\u6307\u5b9a\u8868\u7684\u5efa\u8868\u8bed\u53e5\uff1a SHOW CREATE TABLE \u8868\u540d; \u521b\u5efa\u8868\uff1a CREATE TABLE \u8868\u540d( \u5b57\u6bb51 \u5b57\u6bb51\u7c7b\u578b [COMMENT \u5b57\u6bb51\u6ce8\u91ca], \u5b57\u6bb52 \u5b57\u6bb52\u7c7b\u578b [COMMENT \u5b57\u6bb52\u6ce8\u91ca], \u5b57\u6bb53 \u5b57\u6bb53\u7c7b\u578b [COMMENT \u5b57\u6bb53\u6ce8\u91ca], ... \u5b57\u6bb5n \u5b57\u6bb5n\u7c7b\u578b [COMMENT \u5b57\u6bb5n\u6ce8\u91ca] )[ COMMENT \u8868\u6ce8\u91ca ]; \u6700\u540e\u4e00\u4e2a\u5b57\u6bb5\u540e\u9762\u6ca1\u6709\u9017\u53f7 \u6dfb\u52a0\u5b57\u6bb5\uff1a ALTER TABLE \u8868\u540d ADD \u5b57\u6bb5\u540d \u7c7b\u578b(\u957f\u5ea6) [COMMENT \u6ce8\u91ca] [\u7ea6\u675f]; \u4f8b\uff1a ALTER TABLE emp ADD nickname varchar(20) COMMENT '\u6635\u79f0'; \u4fee\u6539\u6570\u636e\u7c7b\u578b\uff1a ALTER TABLE \u8868\u540d MODIFY \u5b57\u6bb5\u540d \u65b0\u6570\u636e\u7c7b\u578b(\u957f\u5ea6); \u4fee\u6539\u5b57\u6bb5\u540d\u548c\u5b57\u6bb5\u7c7b\u578b\uff1a ALTER TABLE \u8868\u540d CHANGE \u65e7\u5b57\u6bb5\u540d \u65b0\u5b57\u6bb5\u540d \u7c7b\u578b(\u957f\u5ea6) [COMMENT \u6ce8\u91ca] [\u7ea6\u675f]; \u4f8b\uff1a\u5c06emp\u8868\u7684nickname\u5b57\u6bb5\u4fee\u6539\u4e3ausername\uff0c\u7c7b\u578b\u4e3avarchar(30) ALTER TABLE emp CHANGE nickname username varchar(30) COMMENT '\u6635\u79f0'; \u5220\u9664\u5b57\u6bb5\uff1a ALTER TABLE \u8868\u540d DROP \u5b57\u6bb5\u540d; \u4fee\u6539\u8868\u540d\uff1a ALTER TABLE \u8868\u540d RENAME TO \u65b0\u8868\u540d \u5220\u9664\u8868\uff1a DROP TABLE [IF EXISTS] \u8868\u540d; \u5220\u9664\u8868\uff0c\u5e76\u91cd\u65b0\u521b\u5efa\u8be5\u8868\uff1a TRUNCATE TABLE \u8868\u540d;","title":"\u8868\u64cd\u4f5c"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#dml","text":"","title":"DML\uff08\u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff09"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_6","text":"\u6307\u5b9a\u5b57\u6bb5\uff1a INSERT INTO \u8868\u540d (\u5b57\u6bb5\u540d1, \u5b57\u6bb5\u540d2, ...) VALUES (\u503c1, \u503c2, ...); \u5168\u90e8\u5b57\u6bb5\uff1a INSERT INTO \u8868\u540d VALUES (\u503c1, \u503c2, ...); \u6279\u91cf\u6dfb\u52a0\u6570\u636e\uff1a INSERT INTO \u8868\u540d (\u5b57\u6bb5\u540d1, \u5b57\u6bb5\u540d2, ...) VALUES (\u503c1, \u503c2, ...), (\u503c1, \u503c2, ...), (\u503c1, \u503c2, ...); INSERT INTO \u8868\u540d VALUES (\u503c1, \u503c2, ...), (\u503c1, \u503c2, ...), (\u503c1, \u503c2, ...);","title":"\u6dfb\u52a0\u6570\u636e"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_7","text":"\u5b57\u7b26\u4e32\u548c\u65e5\u671f\u7c7b\u578b\u6570\u636e\u5e94\u8be5\u5305\u542b\u5728\u5f15\u53f7\u4e2d \u63d2\u5165\u7684\u6570\u636e\u5927\u5c0f\u5e94\u8be5\u5728\u5b57\u6bb5\u7684\u89c4\u5b9a\u8303\u56f4\u5185","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_8","text":"\u4fee\u6539\u6570\u636e\uff1a UPDATE \u8868\u540d SET \u5b57\u6bb5\u540d1 = \u503c1, \u5b57\u6bb5\u540d2 = \u503c2, ... [ WHERE \u6761\u4ef6 ]; \u4f8b\uff1a UPDATE emp SET name = 'Jack' WHERE id = 1; \u5220\u9664\u6570\u636e\uff1a DELETE FROM \u8868\u540d [ WHERE \u6761\u4ef6 ];","title":"\u66f4\u65b0\u548c\u5220\u9664\u6570\u636e"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#dql","text":"\u8bed\u6cd5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d\u5b57\u6bb5 WHERE \u6761\u4ef6\u5217\u8868 GROUP BY \u5206\u7ec4\u5b57\u6bb5\u5217\u8868 HAVING \u5206\u7ec4\u540e\u7684\u6761\u4ef6\u5217\u8868 ORDER BY \u6392\u5e8f\u5b57\u6bb5\u5217\u8868 LIMIT \u5206\u9875\u53c2\u6570","title":"DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_9","text":"\u67e5\u8be2\u591a\u4e2a\u5b57\u6bb5\uff1a SELECT \u5b57\u6bb51, \u5b57\u6bb52, \u5b57\u6bb53, ... FROM \u8868\u540d; SELECT * FROM \u8868\u540d; \u8bbe\u7f6e\u522b\u540d\uff1a SELECT \u5b57\u6bb51 [ AS \u522b\u540d1 ], \u5b57\u6bb52 [ AS \u522b\u540d2 ], \u5b57\u6bb53 [ AS \u522b\u540d3 ], ... FROM \u8868\u540d; SELECT \u5b57\u6bb51 [ \u522b\u540d1 ], \u5b57\u6bb52 [ \u522b\u540d2 ], \u5b57\u6bb53 [ \u522b\u540d3 ], ... FROM \u8868\u540d; \u53bb\u9664\u91cd\u590d\u8bb0\u5f55\uff1a SELECT DISTINCT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d; \u8f6c\u4e49\uff1a SELECT * FROM \u8868\u540d WHERE name LIKE '/_\u5f20\u4e09' ESCAPE '/' / \u4e4b\u540e\u7684_\u4e0d\u4f5c\u4e3a\u901a\u914d\u7b26","title":"\u57fa\u7840\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_10","text":"\u8bed\u6cd5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d WHERE \u6761\u4ef6\u5217\u8868; \u6761\u4ef6\uff1a \u6bd4\u8f83\u8fd0\u7b97\u7b26 \u529f\u80fd > \u5927\u4e8e >= \u5927\u4e8e\u7b49\u4e8e < \u5c0f\u4e8e <= \u5c0f\u4e8e\u7b49\u4e8e = \u7b49\u4e8e <> \u6216 != \u4e0d\u7b49\u4e8e BETWEEN ... AND ... \u5728\u67d0\u4e2a\u8303\u56f4\u5185\uff08\u542b\u6700\u5c0f\u3001\u6700\u5927\u503c\uff09 IN(...) \u5728in\u4e4b\u540e\u7684\u5217\u8868\u4e2d\u7684\u503c\uff0c\u591a\u9009\u4e00 LIKE \u5360\u4f4d\u7b26 \u6a21\u7cca\u5339\u914d\uff08_\u5339\u914d\u5355\u4e2a\u5b57\u7b26\uff0c%\u5339\u914d\u4efb\u610f\u4e2a\u5b57\u7b26\uff09 IS NULL \u662fNULL \u903b\u8f91\u8fd0\u7b97\u7b26 \u529f\u80fd AND \u6216 && \u5e76\u4e14\uff08\u591a\u4e2a\u6761\u4ef6\u540c\u65f6\u6210\u7acb\uff09 OR \u6216 || \u6216\u8005\uff08\u591a\u4e2a\u6761\u4ef6\u4efb\u610f\u4e00\u4e2a\u6210\u7acb\uff09 NOT \u6216 ! \u975e\uff0c\u4e0d\u662f \u4f8b\u5b50\uff1a -- \u5e74\u9f84\u7b49\u4e8e30 select * from employee where age = 30; -- \u5e74\u9f84\u5c0f\u4e8e30 select * from employee where age < 30; -- \u5c0f\u4e8e\u7b49\u4e8e select * from employee where age <= 30; -- \u6ca1\u6709\u8eab\u4efd\u8bc1 select * from employee where idcard is null or idcard = ''; -- \u6709\u8eab\u4efd\u8bc1 select * from employee where idcard; select * from employee where idcard is not null; -- \u4e0d\u7b49\u4e8e select * from employee where age != 30; -- \u5e74\u9f84\u572820\u523030\u4e4b\u95f4 select * from employee where age between 20 and 30; select * from employee where age >= 20 and age <= 30; -- \u4e0b\u9762\u8bed\u53e5\u4e0d\u62a5\u9519\uff0c\u4f46\u67e5\u4e0d\u5230\u4efb\u4f55\u4fe1\u606f select * from employee where age between 30 and 20; -- \u6027\u522b\u4e3a\u5973\u4e14\u5e74\u9f84\u5c0f\u4e8e30 select * from employee where age < 30 and gender = '\u5973'; -- \u5e74\u9f84\u7b49\u4e8e25\u621630\u621635 select * from employee where age = 25 or age = 30 or age = 35; select * from employee where age in (25, 30, 35); -- \u59d3\u540d\u4e3a\u4e24\u4e2a\u5b57 select * from employee where name like '__'; -- \u8eab\u4efd\u8bc1\u6700\u540e\u4e3aX select * from employee where idcard like '%X';","title":"\u6761\u4ef6\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_11","text":"\u5e38\u89c1\u805a\u5408\u51fd\u6570\uff1a \u51fd\u6570 \u529f\u80fd count \u7edf\u8ba1\u6570\u91cf max \u6700\u5927\u503c min \u6700\u5c0f\u503c avg \u5e73\u5747\u503c sum \u6c42\u548c \u8bed\u6cd5\uff1a SELECT \u805a\u5408\u51fd\u6570(\u5b57\u6bb5\u5217\u8868) FROM \u8868\u540d; \u4f8b\uff1a SELECT count(id) from employee where workaddress = \"\u5e7f\u4e1c\u7701\";","title":"\u805a\u5408\u67e5\u8be2\uff08\u805a\u5408\u51fd\u6570\uff09"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_12","text":"\u8bed\u6cd5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d [ WHERE \u6761\u4ef6 ] GROUP BY \u5206\u7ec4\u5b57\u6bb5\u540d [ HAVING \u5206\u7ec4\u540e\u7684\u8fc7\u6ee4\u6761\u4ef6 ]; where \u548c having \u7684\u533a\u522b\uff1a \u6267\u884c\u65f6\u673a\u4e0d\u540c\uff1awhere\u662f\u5206\u7ec4\u4e4b\u524d\u8fdb\u884c\u8fc7\u6ee4\uff0c\u4e0d\u6ee1\u8db3where\u6761\u4ef6\u4e0d\u53c2\u4e0e\u5206\u7ec4\uff1bhaving\u662f\u5206\u7ec4\u540e\u5bf9\u7ed3\u679c\u8fdb\u884c\u8fc7\u6ee4\u3002 \u5224\u65ad\u6761\u4ef6\u4e0d\u540c\uff1awhere\u4e0d\u80fd\u5bf9\u805a\u5408\u51fd\u6570\u8fdb\u884c\u5224\u65ad\uff0c\u800chaving\u53ef\u4ee5\u3002 \u4f8b\u5b50\uff1a -- \u6839\u636e\u6027\u522b\u5206\u7ec4\uff0c\u7edf\u8ba1\u7537\u6027\u548c\u5973\u6027\u6570\u91cf\uff08\u53ea\u663e\u793a\u5206\u7ec4\u6570\u91cf\uff0c\u4e0d\u663e\u793a\u54ea\u4e2a\u662f\u7537\u54ea\u4e2a\u662f\u5973\uff09 select count(*) from employee group by gender; -- \u6839\u636e\u6027\u522b\u5206\u7ec4\uff0c\u7edf\u8ba1\u7537\u6027\u548c\u5973\u6027\u6570\u91cf select gender, count(*) from employee group by gender; -- \u6839\u636e\u6027\u522b\u5206\u7ec4\uff0c\u7edf\u8ba1\u7537\u6027\u548c\u5973\u6027\u7684\u5e73\u5747\u5e74\u9f84 select gender, avg(age) from employee group by gender; -- \u5e74\u9f84\u5c0f\u4e8e45\uff0c\u5e76\u6839\u636e\u5de5\u4f5c\u5730\u5740\u5206\u7ec4 select workaddress, count(*) from employee where age < 45 group by workaddress; -- \u5e74\u9f84\u5c0f\u4e8e45\uff0c\u5e76\u6839\u636e\u5de5\u4f5c\u5730\u5740\u5206\u7ec4\uff0c\u83b7\u53d6\u5458\u5de5\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e3\u7684\u5de5\u4f5c\u5730\u5740 select workaddress, count(*) address_count from employee where age < 45 group by workaddress having address_count >= 3;","title":"\u5206\u7ec4\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_13","text":"\u6267\u884c\u987a\u5e8f\uff1awhere > \u805a\u5408\u51fd\u6570 > having \u5206\u7ec4\u4e4b\u540e\uff0c\u67e5\u8be2\u7684\u5b57\u6bb5\u4e00\u822c\u4e3a\u805a\u5408\u51fd\u6570\u548c\u5206\u7ec4\u5b57\u6bb5\uff0c\u67e5\u8be2\u5176\u4ed6\u5b57\u6bb5\u65e0\u4efb\u4f55\u610f\u4e49","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_14","text":"\u8bed\u6cd5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d ORDER BY \u5b57\u6bb51 \u6392\u5e8f\u65b9\u5f0f1, \u5b57\u6bb52 \u6392\u5e8f\u65b9\u5f0f2; \u6392\u5e8f\u65b9\u5f0f\uff1a ASC: \u5347\u5e8f\uff08\u9ed8\u8ba4\uff09 DESC: \u964d\u5e8f \u4f8b\u5b50\uff1a -- \u6839\u636e\u5e74\u9f84\u5347\u5e8f\u6392\u5e8f SELECT * FROM employee ORDER BY age ASC; SELECT * FROM employee ORDER BY age; -- \u4e24\u5b57\u6bb5\u6392\u5e8f\uff0c\u6839\u636e\u5e74\u9f84\u5347\u5e8f\u6392\u5e8f\uff0c\u5165\u804c\u65f6\u95f4\u964d\u5e8f\u6392\u5e8f SELECT * FROM employee ORDER BY age ASC, entrydate DESC;","title":"\u6392\u5e8f\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_15","text":"\u5982\u679c\u662f\u591a\u5b57\u6bb5\u6392\u5e8f\uff0c\u5f53\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u503c\u76f8\u540c\u65f6\uff0c\u624d\u4f1a\u6839\u636e\u7b2c\u4e8c\u4e2a\u5b57\u6bb5\u8fdb\u884c\u6392\u5e8f","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_16","text":"\u8bed\u6cd5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d LIMIT \u8d77\u59cb\u7d22\u5f15, \u67e5\u8be2\u8bb0\u5f55\u6570; \u4f8b\u5b50\uff1a -- \u67e5\u8be2\u7b2c\u4e00\u9875\u6570\u636e\uff0c\u5c55\u793a10\u6761 SELECT * FROM employee LIMIT 0, 10; -- \u67e5\u8be2\u7b2c\u4e8c\u9875 SELECT * FROM employee LIMIT 10, 10;","title":"\u5206\u9875\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_17","text":"\u8d77\u59cb\u7d22\u5f15\u4ece0\u5f00\u59cb\uff0c\u8d77\u59cb\u7d22\u5f15 = \uff08\u67e5\u8be2\u9875\u7801 - 1\uff09 * \u6bcf\u9875\u663e\u793a\u8bb0\u5f55\u6570 \u5206\u9875\u67e5\u8be2\u662f\u6570\u636e\u5e93\u7684\u65b9\u8a00\uff0c\u4e0d\u540c\u6570\u636e\u5e93\u6709\u4e0d\u540c\u5b9e\u73b0\uff0cMySQL\u662fLIMIT \u5982\u679c\u67e5\u8be2\u7684\u662f\u7b2c\u4e00\u9875\u6570\u636e\uff0c\u8d77\u59cb\u7d22\u5f15\u53ef\u4ee5\u7701\u7565\uff0c\u76f4\u63a5\u7b80\u5199 LIMIT 10","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#dql_1","text":"FROM -> WHERE -> GROUP BY -> SELECT -> ORDER BY -> LIMIT","title":"DQL\u6267\u884c\u987a\u5e8f"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#dcl","text":"","title":"DCL"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_18","text":"\u67e5\u8be2\u7528\u6237\uff1a USE mysql; SELECT * FROM user; \u521b\u5efa\u7528\u6237: CREATE USER '\u7528\u6237\u540d'@'\u4e3b\u673a\u540d' IDENTIFIED BY '\u5bc6\u7801'; \u4fee\u6539\u7528\u6237\u5bc6\u7801\uff1a ALTER USER '\u7528\u6237\u540d'@'\u4e3b\u673a\u540d' IDENTIFIED WITH mysql_native_password BY '\u65b0\u5bc6\u7801'; \u5220\u9664\u7528\u6237\uff1a DROP USER '\u7528\u6237\u540d'@'\u4e3b\u673a\u540d'; \u4f8b\u5b50\uff1a -- \u521b\u5efa\u7528\u6237test\uff0c\u53ea\u80fd\u5728\u5f53\u524d\u4e3b\u673alocalhost\u8bbf\u95ee create user 'test'@'localhost' identified by '123456'; -- \u521b\u5efa\u7528\u6237test\uff0c\u80fd\u5728\u4efb\u610f\u4e3b\u673a\u8bbf\u95ee create user 'test'@'%' identified by '123456'; create user 'test' identified by '123456'; -- \u4fee\u6539\u5bc6\u7801 alter user 'test'@'localhost' identified with mysql_native_password by '1234'; -- \u5220\u9664\u7528\u6237 drop user 'test'@'localhost';","title":"\u7ba1\u7406\u7528\u6237"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_19","text":"\u4e3b\u673a\u540d\u53ef\u4ee5\u4f7f\u7528 % \u901a\u914d","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_20","text":"\u5e38\u7528\u6743\u9650\uff1a \u6743\u9650 \u8bf4\u660e ALL, ALL PRIVILEGES \u6240\u6709\u6743\u9650 SELECT \u67e5\u8be2\u6570\u636e INSERT \u63d2\u5165\u6570\u636e UPDATE \u4fee\u6539\u6570\u636e DELETE \u5220\u9664\u6570\u636e ALTER \u4fee\u6539\u8868 DROP \u5220\u9664\u6570\u636e\u5e93/\u8868/\u89c6\u56fe CREATE \u521b\u5efa\u6570\u636e\u5e93/\u8868 \u66f4\u591a\u6743\u9650\u8bf7\u770b \u6743\u9650\u4e00\u89c8\u8868 \u67e5\u8be2\u6743\u9650\uff1a SHOW GRANTS FOR '\u7528\u6237\u540d'@'\u4e3b\u673a\u540d'; \u6388\u4e88\u6743\u9650\uff1a GRANT \u6743\u9650\u5217\u8868 ON \u6570\u636e\u5e93\u540d.\u8868\u540d TO '\u7528\u6237\u540d'@'\u4e3b\u673a\u540d'; \u64a4\u9500\u6743\u9650\uff1a REVOKE \u6743\u9650\u5217\u8868 ON \u6570\u636e\u5e93\u540d.\u8868\u540d FROM '\u7528\u6237\u540d'@'\u4e3b\u673a\u540d';","title":"\u6743\u9650\u63a7\u5236"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_21","text":"\u591a\u4e2a\u6743\u9650\u7528\u9017\u53f7\u5206\u9694 \u6388\u6743\u65f6\uff0c\u6570\u636e\u5e93\u540d\u548c\u8868\u540d\u53ef\u4ee5\u7528 * \u8fdb\u884c\u901a\u914d\uff0c\u4ee3\u8868\u6240\u6709","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_22","text":"\u5b57\u7b26\u4e32\u51fd\u6570 \u6570\u503c\u51fd\u6570 \u65e5\u671f\u51fd\u6570 \u6d41\u7a0b\u51fd\u6570","title":"\u51fd\u6570"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_23","text":"\u5e38\u7528\u51fd\u6570\uff1a \u51fd\u6570 \u529f\u80fd CONCAT(s1, s2, ..., sn) \u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u5c06s1, s2, ..., sn\u62fc\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32 LOWER(str) \u5c06\u5b57\u7b26\u4e32\u5168\u90e8\u8f6c\u4e3a\u5c0f\u5199 UPPER(str) \u5c06\u5b57\u7b26\u4e32\u5168\u90e8\u8f6c\u4e3a\u5927\u5199 LPAD(str, n, pad) \u5de6\u586b\u5145\uff0c\u7528\u5b57\u7b26\u4e32pad\u5bf9str\u7684\u5de6\u8fb9\u8fdb\u884c\u586b\u5145\uff0c\u8fbe\u5230n\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6 RPAD(str, n, pad) \u53f3\u586b\u5145\uff0c\u7528\u5b57\u7b26\u4e32pad\u5bf9str\u7684\u53f3\u8fb9\u8fdb\u884c\u586b\u5145\uff0c\u8fbe\u5230n\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6 TRIM(str) \u53bb\u6389\u5b57\u7b26\u4e32\u5934\u90e8\u548c\u5c3e\u90e8\u7684\u7a7a\u683c SUBSTRING(str, start, len) \u8fd4\u56de\u4ece\u5b57\u7b26\u4e32str\u4ecestart\u4f4d\u7f6e\u8d77\u7684len\u4e2a\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 REPLACE(column, source, replace) \u66ff\u6362\u5b57\u7b26\u4e32 \u4f7f\u7528\u793a\u4f8b\uff1a -- \u62fc\u63a5 SELECT CONCAT('Hello', 'World'); -- \u5c0f\u5199 SELECT LOWER('Hello'); -- \u5927\u5199 SELECT UPPER('Hello'); -- \u5de6\u586b\u5145 SELECT LPAD('01', 5, '-'); -- \u53f3\u586b\u5145 SELECT RPAD('01', 5, '-'); -- \u53bb\u9664\u7a7a\u683c SELECT TRIM(' Hello World '); -- \u5207\u7247\uff08\u8d77\u59cb\u7d22\u5f15\u4e3a1\uff09 SELECT SUBSTRING('Hello World', 1, 5);","title":"\u5b57\u7b26\u4e32\u51fd\u6570"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_24","text":"\u5e38\u89c1\u51fd\u6570\uff1a \u51fd\u6570 \u529f\u80fd CEIL(x) \u5411\u4e0a\u53d6\u6574 FLOOR(x) \u5411\u4e0b\u53d6\u6574 MOD(x, y) \u8fd4\u56dex/y\u7684\u6a21 RAND() \u8fd4\u56de0~1\u5185\u7684\u968f\u673a\u6570 ROUND(x, y) \u6c42\u53c2\u6570x\u7684\u56db\u820d\u4e94\u5165\u503c\uff0c\u4fdd\u7559y\u4f4d\u5c0f\u6570","title":"\u6570\u503c\u51fd\u6570"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_25","text":"\u5e38\u7528\u51fd\u6570\uff1a \u51fd\u6570 \u529f\u80fd CURDATE() \u8fd4\u56de\u5f53\u524d\u65e5\u671f CURTIME() \u8fd4\u56de\u5f53\u524d\u65f6\u95f4 NOW() \u8fd4\u56de\u5f53\u524d\u65e5\u671f\u548c\u65f6\u95f4 YEAR(date) \u83b7\u53d6\u6307\u5b9adate\u7684\u5e74\u4efd MONTH(date) \u83b7\u53d6\u6307\u5b9adate\u7684\u6708\u4efd DAY(date) \u83b7\u53d6\u6307\u5b9adate\u7684\u65e5\u671f DATE_ADD(date, INTERVAL expr type) \u8fd4\u56de\u4e00\u4e2a\u65e5\u671f/\u65f6\u95f4\u503c\u52a0\u4e0a\u4e00\u4e2a\u65f6\u95f4\u95f4\u9694expr\u540e\u7684\u65f6\u95f4\u503c DATEDIFF(date1, date2) \u8fd4\u56de\u8d77\u59cb\u65f6\u95f4date1\u548c\u7ed3\u675f\u65f6\u95f4date2\u4e4b\u95f4\u7684\u5929\u6570 \u4f8b\u5b50\uff1a -- DATE_ADD SELECT DATE_ADD(NOW(), INTERVAL 70 YEAR);","title":"\u65e5\u671f\u51fd\u6570"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_26","text":"\u5e38\u7528\u51fd\u6570\uff1a \u51fd\u6570 \u529f\u80fd IF(value, t, f) \u5982\u679cvalue\u4e3atrue\uff0c\u5219\u8fd4\u56det\uff0c\u5426\u5219\u8fd4\u56def IFNULL(value1, value2) \u5982\u679cvalue1\u4e0d\u4e3a\u7a7a\uff0c\u8fd4\u56devalue1\uff0c\u5426\u5219\u8fd4\u56devalue2 CASE WHEN [ val1 ] THEN [ res1 ] ... ELSE [ default ] END \u5982\u679cval1\u4e3atrue\uff0c\u8fd4\u56deres1\uff0c... \u5426\u5219\u8fd4\u56dedefault\u9ed8\u8ba4\u503c CASE [ expr ] WHEN [ val1 ] THEN [ res1 ] ... ELSE [ default ] END \u5982\u679cexpr\u7684\u503c\u7b49\u4e8eval1\uff0c\u8fd4\u56deres1\uff0c... \u5426\u5219\u8fd4\u56dedefault\u9ed8\u8ba4\u503c \u4f8b\u5b50\uff1a select name, (case when age > 30 then '\u4e2d\u5e74' else '\u9752\u5e74' end) from employee; select name, (case workaddress when '\u5317\u4eac\u5e02' then '\u4e00\u7ebf\u57ce\u5e02' when '\u4e0a\u6d77\u5e02' then '\u4e00\u7ebf\u57ce\u5e02' else '\u4e8c\u7ebf\u57ce\u5e02' end) as '\u5de5\u4f5c\u5730\u5740' from employee;","title":"\u6d41\u7a0b\u51fd\u6570"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_27","text":"\u5206\u7c7b\uff1a \u7ea6\u675f \u63cf\u8ff0 \u5173\u952e\u5b57 \u975e\u7a7a\u7ea6\u675f \u9650\u5236\u8be5\u5b57\u6bb5\u7684\u6570\u636e\u4e0d\u80fd\u4e3anull NOT NULL \u552f\u4e00\u7ea6\u675f \u4fdd\u8bc1\u8be5\u5b57\u6bb5\u7684\u6240\u6709\u6570\u636e\u90fd\u662f\u552f\u4e00\u3001\u4e0d\u91cd\u590d\u7684 UNIQUE \u4e3b\u952e\u7ea6\u675f \u4e3b\u952e\u662f\u4e00\u884c\u6570\u636e\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u8981\u6c42\u975e\u7a7a\u4e14\u552f\u4e00 PRIMARY KEY \u9ed8\u8ba4\u7ea6\u675f \u4fdd\u5b58\u6570\u636e\u65f6\uff0c\u5982\u679c\u672a\u6307\u5b9a\u8be5\u5b57\u6bb5\u7684\u503c\uff0c\u5219\u91c7\u7528\u9ed8\u8ba4\u503c DEFAULT \u68c0\u67e5\u7ea6\u675f\uff088.0.1\u7248\u672c\u540e\uff09 \u4fdd\u8bc1\u5b57\u6bb5\u503c\u6ee1\u8db3\u67d0\u4e00\u4e2a\u6761\u4ef6 CHECK \u5916\u952e\u7ea6\u675f \u7528\u6765\u8ba9\u4e24\u5f20\u56fe\u7684\u6570\u636e\u4e4b\u95f4\u5efa\u7acb\u8fde\u63a5\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u548c\u5b8c\u6574\u6027 FOREIGN KEY \u7ea6\u675f\u662f\u4f5c\u7528\u4e8e\u8868\u4e2d\u5b57\u6bb5\u4e0a\u7684\uff0c\u53ef\u4ee5\u518d\u521b\u5efa\u8868/\u4fee\u6539\u8868\u7684\u65f6\u5019\u6dfb\u52a0\u7ea6\u675f\u3002","title":"\u7ea6\u675f"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_28","text":"\u7ea6\u675f\u6761\u4ef6 \u5173\u952e\u5b57 \u4e3b\u952e PRIMARY KEY \u81ea\u52a8\u589e\u957f AUTO_INCREMENT \u4e0d\u4e3a\u7a7a NOT NULL \u552f\u4e00 UNIQUE \u903b\u8f91\u6761\u4ef6 CHECK \u9ed8\u8ba4\u503c DEFAULT \u4f8b\u5b50\uff1a create table user( id int primary key auto_increment, name varchar(10) not null unique, age int check(age > 0 and age < 120), status char(1) default '1', gender char(1) );","title":"\u5e38\u7528\u7ea6\u675f"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_29","text":"\u6dfb\u52a0\u5916\u952e\uff1a CREATE TABLE \u8868\u540d( \u5b57\u6bb5\u540d \u5b57\u6bb5\u7c7b\u578b, ... [CONSTRAINT] [\u5916\u952e\u540d\u79f0] FOREIGN KEY(\u5916\u952e\u5b57\u6bb5\u540d) REFERENCES \u4e3b\u8868(\u4e3b\u8868\u5217\u540d) ); ALTER TABLE \u8868\u540d ADD CONSTRAINT \u5916\u952e\u540d\u79f0 FOREIGN KEY (\u5916\u952e\u5b57\u6bb5\u540d) REFERENCES \u4e3b\u8868(\u4e3b\u8868\u5217\u540d); -- \u4f8b\u5b50 alter table emp add constraint fk_emp_dept_id foreign key(dept_id) references dept(id); \u5220\u9664\u5916\u952e\uff1a ALTER TABLE \u8868\u540d DROP FOREIGN KEY \u5916\u952e\u540d;","title":"\u5916\u952e\u7ea6\u675f"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_30","text":"\u884c\u4e3a \u8bf4\u660e NO ACTION \u5f53\u5728\u7236\u8868\u4e2d\u5220\u9664/\u66f4\u65b0\u5bf9\u5e94\u8bb0\u5f55\u65f6\uff0c\u9996\u5148\u68c0\u67e5\u8be5\u8bb0\u5f55\u662f\u5426\u6709\u5bf9\u5e94\u5916\u952e\uff0c\u5982\u679c\u6709\u5219\u4e0d\u5141\u8bb8\u5220\u9664/\u66f4\u65b0\uff08\u4e0eRESTRICT\u4e00\u81f4\uff09 RESTRICT \u5f53\u5728\u7236\u8868\u4e2d\u5220\u9664/\u66f4\u65b0\u5bf9\u5e94\u8bb0\u5f55\u65f6\uff0c\u9996\u5148\u68c0\u67e5\u8be5\u8bb0\u5f55\u662f\u5426\u6709\u5bf9\u5e94\u5916\u952e\uff0c\u5982\u679c\u6709\u5219\u4e0d\u5141\u8bb8\u5220\u9664/\u66f4\u65b0\uff08\u4e0eNO ACTION\u4e00\u81f4\uff09 CASCADE \u5f53\u5728\u7236\u8868\u4e2d\u5220\u9664/\u66f4\u65b0\u5bf9\u5e94\u8bb0\u5f55\u65f6\uff0c\u9996\u5148\u68c0\u67e5\u8be5\u8bb0\u5f55\u662f\u5426\u6709\u5bf9\u5e94\u5916\u952e\uff0c\u5982\u679c\u6709\u5219\u4e5f\u5220\u9664/\u66f4\u65b0\u5916\u952e\u5728\u5b50\u8868\u4e2d\u7684\u8bb0\u5f55 SET NULL \u5f53\u5728\u7236\u8868\u4e2d\u5220\u9664/\u66f4\u65b0\u5bf9\u5e94\u8bb0\u5f55\u65f6\uff0c\u9996\u5148\u68c0\u67e5\u8be5\u8bb0\u5f55\u662f\u5426\u6709\u5bf9\u5e94\u5916\u952e\uff0c\u5982\u679c\u6709\u5219\u8bbe\u7f6e\u5b50\u8868\u4e2d\u8be5\u5916\u952e\u503c\u4e3anull\uff08\u8981\u6c42\u8be5\u5916\u952e\u5141\u8bb8\u4e3anull\uff09 SET DEFAULT \u7236\u8868\u6709\u53d8\u66f4\u65f6\uff0c\u5b50\u8868\u5c06\u5916\u952e\u8bbe\u4e3a\u4e00\u4e2a\u9ed8\u8ba4\u503c\uff08Innodb\u4e0d\u652f\u6301\uff09 \u66f4\u6539\u5220\u9664/\u66f4\u65b0\u884c\u4e3a\uff1a ALTER TABLE \u8868\u540d ADD CONSTRAINT \u5916\u952e\u540d\u79f0 FOREIGN KEY (\u5916\u952e\u5b57\u6bb5) REFERENCES \u4e3b\u8868\u540d(\u4e3b\u8868\u5b57\u6bb5\u540d) ON UPDATE \u884c\u4e3a ON DELETE \u884c\u4e3a;","title":"\u5220\u9664/\u66f4\u65b0\u884c\u4e3a"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_31","text":"","title":"\u591a\u8868\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_32","text":"\u4e00\u5bf9\u591a\uff08\u591a\u5bf9\u4e00\uff09 \u591a\u5bf9\u591a \u4e00\u5bf9\u4e00","title":"\u591a\u8868\u5173\u7cfb"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_33","text":"\u6848\u4f8b\uff1a\u90e8\u95e8\u4e0e\u5458\u5de5 \u5173\u7cfb\uff1a\u4e00\u4e2a\u90e8\u95e8\u5bf9\u5e94\u591a\u4e2a\u5458\u5de5\uff0c\u4e00\u4e2a\u5458\u5de5\u5bf9\u5e94\u4e00\u4e2a\u90e8\u95e8 \u5b9e\u73b0\uff1a\u5728\u591a\u7684\u4e00\u65b9\u5efa\u7acb\u5916\u952e\uff0c\u6307\u5411\u4e00\u7684\u4e00\u65b9\u7684\u4e3b\u952e","title":"\u4e00\u5bf9\u591a"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_34","text":"\u6848\u4f8b\uff1a\u5b66\u751f\u4e0e\u8bfe\u7a0b \u5173\u7cfb\uff1a\u4e00\u4e2a\u5b66\u751f\u53ef\u4ee5\u9009\u591a\u95e8\u8bfe\u7a0b\uff0c\u4e00\u95e8\u8bfe\u7a0b\u4e5f\u53ef\u4ee5\u4f9b\u591a\u4e2a\u5b66\u751f\u9009\u4fee \u5b9e\u73b0\uff1a\u5efa\u7acb\u7b2c\u4e09\u5f20\u4e2d\u95f4\u8868\uff0c\u4e2d\u95f4\u8868\u81f3\u5c11\u5305\u542b\u4e24\u4e2a\u5916\u952e\uff0c\u5206\u522b\u5173\u8054\u4e24\u65b9\u4e3b\u952e","title":"\u591a\u5bf9\u591a"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_35","text":"\u6848\u4f8b\uff1a\u7528\u6237\u4e0e\u7528\u6237\u8be6\u60c5 \u5173\u7cfb\uff1a\u4e00\u5bf9\u4e00\u5173\u7cfb\uff0c\u591a\u7528\u4e8e\u5355\u8868\u62c6\u5206\uff0c\u5c06\u4e00\u5f20\u8868\u7684\u57fa\u7840\u5b57\u6bb5\u653e\u5728\u4e00\u5f20\u8868\u4e2d\uff0c\u5176\u4ed6\u8be6\u60c5\u5b57\u6bb5\u653e\u5728\u53e6\u4e00\u5f20\u8868\u4e2d\uff0c\u4ee5\u63d0\u5347\u64cd\u4f5c\u6548\u7387 \u5b9e\u73b0\uff1a\u5728\u4efb\u610f\u4e00\u65b9\u52a0\u5165\u5916\u952e\uff0c\u5173\u8054\u53e6\u5916\u4e00\u65b9\u7684\u4e3b\u952e\uff0c\u5e76\u4e14\u8bbe\u7f6e\u5916\u952e\u4e3a\u552f\u4e00\u7684\uff08UNIQUE\uff09","title":"\u4e00\u5bf9\u4e00"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_36","text":"\u5408\u5e76\u67e5\u8be2\uff08\u7b1b\u5361\u5c14\u79ef\uff0c\u4f1a\u5c55\u793a\u6240\u6709\u7ec4\u5408\u7ed3\u679c\uff09\uff1a select * from employee, dept; \u7b1b\u5361\u5c14\u79ef\uff1a\u4e24\u4e2a\u96c6\u5408A\u96c6\u5408\u548cB\u96c6\u5408\u7684\u6240\u6709\u7ec4\u5408\u60c5\u51b5\uff08\u5728\u591a\u8868\u67e5\u8be2\u65f6\uff0c\u9700\u8981\u6d88\u9664\u65e0\u6548\u7684\u7b1b\u5361\u5c14\u79ef\uff09 \u6d88\u9664\u65e0\u6548\u7b1b\u5361\u5c14\u79ef\uff1a select * from employee, dept where employee.dept = dept.id;","title":"\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_37","text":"\u5185\u8fde\u63a5\u67e5\u8be2\u7684\u662f\u4e24\u5f20\u8868\u4ea4\u96c6\u7684\u90e8\u5206 \u9690\u5f0f\u5185\u8fde\u63a5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u88681, \u88682 WHERE \u6761\u4ef6 ...; \u663e\u5f0f\u5185\u8fde\u63a5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u88681 [ INNER ] JOIN \u88682 ON \u8fde\u63a5\u6761\u4ef6 ...; \u663e\u5f0f\u6027\u80fd\u6bd4\u9690\u5f0f\u9ad8 \u4f8b\u5b50\uff1a -- \u67e5\u8be2\u5458\u5de5\u59d3\u540d\uff0c\u53ca\u5173\u8054\u7684\u90e8\u95e8\u7684\u540d\u79f0 -- \u9690\u5f0f select e.name, d.name from employee as e, dept as d where e.dept = d.id; -- \u663e\u5f0f select e.name, d.name from employee as e inner join dept as d on e.dept = d.id;","title":"\u5185\u8fde\u63a5\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_38","text":"\u5de6\u5916\u8fde\u63a5\uff1a \u67e5\u8be2\u5de6\u8868\u6240\u6709\u6570\u636e\uff0c\u4ee5\u53ca\u4e24\u5f20\u8868\u4ea4\u96c6\u90e8\u5206\u6570\u636e SELECT \u5b57\u6bb5\u5217\u8868 FROM \u88681 LEFT [ OUTER ] JOIN \u88682 ON \u6761\u4ef6 ...; \u76f8\u5f53\u4e8e\u67e5\u8be2\u88681\u7684\u6240\u6709\u6570\u636e\uff0c\u5305\u542b\u88681\u548c\u88682\u4ea4\u96c6\u90e8\u5206\u6570\u636e \u53f3\u5916\u8fde\u63a5\uff1a \u67e5\u8be2\u53f3\u8868\u6240\u6709\u6570\u636e\uff0c\u4ee5\u53ca\u4e24\u5f20\u8868\u4ea4\u96c6\u90e8\u5206\u6570\u636e SELECT \u5b57\u6bb5\u5217\u8868 FROM \u88681 RIGHT [ OUTER ] JOIN \u88682 ON \u6761\u4ef6 ...; \u4f8b\u5b50\uff1a -- \u5de6 select e.*, d.name from employee as e left outer join dept as d on e.dept = d.id; select d.name, e.* from dept d left outer join emp e on e.dept = d.id; -- \u8fd9\u6761\u8bed\u53e5\u4e0e\u4e0b\u9762\u7684\u8bed\u53e5\u6548\u679c\u4e00\u6837 -- \u53f3 select d.name, e.* from employee as e right outer join dept as d on e.dept = d.id; \u5de6\u8fde\u63a5\u53ef\u4ee5\u67e5\u8be2\u5230\u6ca1\u6709dept\u7684employee\uff0c\u53f3\u8fde\u63a5\u53ef\u4ee5\u67e5\u8be2\u5230\u6ca1\u6709employee\u7684dept","title":"\u5916\u8fde\u63a5\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_39","text":"\u5f53\u524d\u8868\u4e0e\u81ea\u8eab\u7684\u8fde\u63a5\u67e5\u8be2\uff0c\u81ea\u8fde\u63a5\u5fc5\u987b\u4f7f\u7528\u8868\u522b\u540d \u8bed\u6cd5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868A \u522b\u540dA JOIN \u8868A \u522b\u540dB ON \u6761\u4ef6 ...; \u81ea\u8fde\u63a5\u67e5\u8be2\uff0c\u53ef\u4ee5\u662f\u5185\u8fde\u63a5\u67e5\u8be2\uff0c\u4e5f\u53ef\u4ee5\u662f\u5916\u8fde\u63a5\u67e5\u8be2 \u4f8b\u5b50\uff1a -- \u67e5\u8be2\u5458\u5de5\u53ca\u5176\u6240\u5c5e\u9886\u5bfc\u7684\u540d\u5b57 select a.name, b.name from employee a, employee b where a.manager = b.id; -- \u6ca1\u6709\u9886\u5bfc\u7684\u4e5f\u67e5\u8be2\u51fa\u6765 select a.name, b.name from employee a left join employee b on a.manager = b.id;","title":"\u81ea\u8fde\u63a5\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#union-union-all","text":"\u628a\u591a\u6b21\u67e5\u8be2\u7684\u7ed3\u679c\u5408\u5e76\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u67e5\u8be2\u96c6 \u8bed\u6cd5\uff1a SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868A ... UNION [ALL] SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868B ...","title":"\u8054\u5408\u67e5\u8be2 union, union all"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_40","text":"UNION ALL \u4f1a\u6709\u91cd\u590d\u7ed3\u679c\uff0cUNION \u4e0d\u4f1a \u8054\u5408\u67e5\u8be2\u6bd4\u4f7f\u7528or\u6548\u7387\u9ad8\uff0c\u4e0d\u4f1a\u4f7f\u7d22\u5f15\u5931\u6548","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_41","text":"SQL\u8bed\u53e5\u4e2d\u5d4c\u5957SELECT\u8bed\u53e5\uff0c\u79f0\u8c13\u5d4c\u5957\u67e5\u8be2\uff0c\u53c8\u79f0\u5b50\u67e5\u8be2\u3002 SELECT * FROM t1 WHERE column1 = ( SELECT column1 FROM t2); \u5b50\u67e5\u8be2\u5916\u90e8\u7684\u8bed\u53e5\u53ef\u4ee5\u662f INSERT / UPDATE / DELETE / SELECT \u7684\u4efb\u4f55\u4e00\u4e2a \u6839\u636e\u5b50\u67e5\u8be2\u7ed3\u679c\u53ef\u4ee5\u5206\u4e3a\uff1a \u6807\u91cf\u5b50\u67e5\u8be2\uff08\u5b50\u67e5\u8be2\u7ed3\u679c\u4e3a\u5355\u4e2a\u503c\uff09 \u5217\u5b50\u67e5\u8be2\uff08\u5b50\u67e5\u8be2\u7ed3\u679c\u4e3a\u4e00\u5217\uff09 \u884c\u5b50\u67e5\u8be2\uff08\u5b50\u67e5\u8be2\u7ed3\u679c\u4e3a\u4e00\u884c\uff09 \u8868\u5b50\u67e5\u8be2\uff08\u5b50\u67e5\u8be2\u7ed3\u679c\u4e3a\u591a\u884c\u591a\u5217\uff09 \u6839\u636e\u5b50\u67e5\u8be2\u4f4d\u7f6e\u53ef\u5206\u4e3a\uff1a WHERE \u4e4b\u540e FROM \u4e4b\u540e SELECT \u4e4b\u540e","title":"\u5b50\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_42","text":"\u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u5355\u4e2a\u503c\uff08\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u3001\u65e5\u671f\u7b49\uff09\u3002 \u5e38\u7528\u64cd\u4f5c\u7b26\uff1a- < > > >= < <= \u4f8b\u5b50\uff1a -- \u67e5\u8be2\u9500\u552e\u90e8\u6240\u6709\u5458\u5de5 select id from dept where name = '\u9500\u552e\u90e8'; -- \u6839\u636e\u9500\u552e\u90e8\u90e8\u95e8ID\uff0c\u67e5\u8be2\u5458\u5de5\u4fe1\u606f select * from employee where dept = 4; -- \u5408\u5e76\uff08\u5b50\u67e5\u8be2\uff09 select * from employee where dept = (select id from dept where name = '\u9500\u552e\u90e8'); -- \u67e5\u8be2xxx\u5165\u804c\u4e4b\u540e\u7684\u5458\u5de5\u4fe1\u606f select * from employee where entrydate > (select entrydate from employee where name = 'xxx');","title":"\u6807\u91cf\u5b50\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_43","text":"\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u5217\uff08\u53ef\u4ee5\u662f\u591a\u884c\uff09\u3002 \u5e38\u7528\u64cd\u4f5c\u7b26\uff1a \u64cd\u4f5c\u7b26 \u63cf\u8ff0 IN \u5728\u6307\u5b9a\u7684\u96c6\u5408\u8303\u56f4\u5185\uff0c\u591a\u9009\u4e00 NOT IN \u4e0d\u5728\u6307\u5b9a\u7684\u96c6\u5408\u8303\u56f4\u5185 ANY \u5b50\u67e5\u8be2\u8fd4\u56de\u5217\u8868\u4e2d\uff0c\u6709\u4efb\u610f\u4e00\u4e2a\u6ee1\u8db3\u5373\u53ef SOME \u4e0eANY\u7b49\u540c\uff0c\u4f7f\u7528SOME\u7684\u5730\u65b9\u90fd\u53ef\u4ee5\u4f7f\u7528ANY ALL \u5b50\u67e5\u8be2\u8fd4\u56de\u5217\u8868\u7684\u6240\u6709\u503c\u90fd\u5fc5\u987b\u6ee1\u8db3 \u4f8b\u5b50\uff1a -- \u67e5\u8be2\u9500\u552e\u90e8\u548c\u5e02\u573a\u90e8\u7684\u6240\u6709\u5458\u5de5\u4fe1\u606f select * from employee where dept in (select id from dept where name = '\u9500\u552e\u90e8' or name = '\u5e02\u573a\u90e8'); -- \u67e5\u8be2\u6bd4\u8d22\u52a1\u90e8\u6240\u6709\u4eba\u5de5\u8d44\u90fd\u9ad8\u7684\u5458\u5de5\u4fe1\u606f select * from employee where salary > all(select salary from employee where dept = (select id from dept where name = '\u8d22\u52a1\u90e8')); -- \u67e5\u8be2\u6bd4\u7814\u53d1\u90e8\u4efb\u610f\u4e00\u4eba\u5de5\u8d44\u9ad8\u7684\u5458\u5de5\u4fe1\u606f select * from employee where salary > any (select salary from employee where dept = (select id from dept where name = '\u7814\u53d1\u90e8'));","title":"\u5217\u5b50\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_44","text":"\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u884c\uff08\u53ef\u4ee5\u662f\u591a\u5217\uff09\u3002 \u5e38\u7528\u64cd\u4f5c\u7b26\uff1a=, <, >, IN, NOT IN \u4f8b\u5b50\uff1a -- \u67e5\u8be2\u4e0exxx\u7684\u85aa\u8d44\u53ca\u76f4\u5c5e\u9886\u5bfc\u76f8\u540c\u7684\u5458\u5de5\u4fe1\u606f select * from employee where (salary, manager) = (12500, 1); select * from employee where (salary, manager) = (select salary, manager from employee where name = 'xxx');","title":"\u884c\u5b50\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_45","text":"\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u591a\u884c\u591a\u5217 \u5e38\u7528\u64cd\u4f5c\u7b26\uff1aIN \u4f8b\u5b50\uff1a -- \u67e5\u8be2\u4e0exxx1\uff0cxxx2\u7684\u804c\u4f4d\u548c\u85aa\u8d44\u76f8\u540c\u7684\u5458\u5de5 select * from employee where (job, salary) in (select job, salary from employee where name = 'xxx1' or name = 'xxx2'); -- \u67e5\u8be2\u5165\u804c\u65e5\u671f\u662f2006-01-01\u4e4b\u540e\u7684\u5458\u5de5\uff0c\u53ca\u5176\u90e8\u95e8\u4fe1\u606f select e.*, d.* from (select * from employee where entrydate > '2006-01-01') as e left join dept as d on e.dept = d.id;","title":"\u8868\u5b50\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_46","text":"\u4e8b\u52a1\u662f\u4e00\u7ec4\u64cd\u4f5c\u7684\u96c6\u5408\uff0c\u4e8b\u52a1\u4f1a\u628a\u6240\u6709\u64cd\u4f5c\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u4e00\u8d77\u5411\u7cfb\u7edf\u63d0\u4ea4\u6216\u64a4\u9500\u64cd\u4f5c\u8bf7\u6c42\uff0c\u5373\u8fd9\u4e9b\u64cd\u4f5c\u8981\u4e48\u540c\u65f6\u6210\u529f\uff0c\u8981\u4e48\u540c\u65f6\u5931\u8d25\u3002 \u57fa\u672c\u64cd\u4f5c\uff1a -- 1. \u67e5\u8be2\u5f20\u4e09\u8d26\u6237\u4f59\u989d select * from account where name = '\u5f20\u4e09'; -- 2. \u5c06\u5f20\u4e09\u8d26\u6237\u4f59\u989d-1000 update account set money = money - 1000 where name = '\u5f20\u4e09'; -- \u6b64\u8bed\u53e5\u51fa\u9519\u540e\u5f20\u4e09\u94b1\u51cf\u5c11\u4f46\u662f\u674e\u56db\u94b1\u6ca1\u6709\u589e\u52a0 \u6a21\u62dfsql\u8bed\u53e5\u9519\u8bef -- 3. \u5c06\u674e\u56db\u8d26\u6237\u4f59\u989d+1000 update account set money = money + 1000 where name = '\u674e\u56db'; -- \u67e5\u770b\u4e8b\u52a1\u63d0\u4ea4\u65b9\u5f0f SELECT @@AUTOCOMMIT; -- \u8bbe\u7f6e\u4e8b\u52a1\u63d0\u4ea4\u65b9\u5f0f\uff0c1\u4e3a\u81ea\u52a8\u63d0\u4ea4\uff0c0\u4e3a\u624b\u52a8\u63d0\u4ea4\uff0c\u8be5\u8bbe\u7f6e\u53ea\u5bf9\u5f53\u524d\u4f1a\u8bdd\u6709\u6548 SET @@AUTOCOMMIT = 0; -- \u63d0\u4ea4\u4e8b\u52a1 COMMIT; -- \u56de\u6eda\u4e8b\u52a1 ROLLBACK; -- \u8bbe\u7f6e\u624b\u52a8\u63d0\u4ea4\u540e\u4e0a\u9762\u4ee3\u7801\u6539\u4e3a\uff1a select * from account where name = '\u5f20\u4e09'; update account set money = money - 1000 where name = '\u5f20\u4e09'; update account set money = money + 1000 where name = '\u674e\u56db'; commit; \u64cd\u4f5c\u65b9\u5f0f\u4e8c\uff1a \u5f00\u542f\u4e8b\u52a1\uff1a START TRANSACTION \u6216 BEGIN TRANSACTION; \u63d0\u4ea4\u4e8b\u52a1\uff1a COMMIT; \u56de\u6eda\u4e8b\u52a1\uff1a ROLLBACK; \u64cd\u4f5c\u5b9e\u4f8b\uff1a start transaction; select * from account where name = '\u5f20\u4e09'; update account set money = money - 1000 where name = '\u5f20\u4e09'; update account set money = money + 1000 where name = '\u674e\u56db'; commit;","title":"\u4e8b\u52a1"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#acid","text":"\u539f\u5b50\u6027(Atomicity)\uff1a\u4e8b\u52a1\u662f\u4e0d\u53ef\u5206\u5272\u7684\u6700\u5c0f\u64cd\u4f5c\u4f46\u613f\uff0c\u8981\u4e48\u5168\u90e8\u6210\u529f\uff0c\u8981\u4e48\u5168\u90e8\u5931\u8d25 \u4e00\u81f4\u6027(Consistency)\uff1a\u4e8b\u52a1\u5b8c\u6210\u65f6\uff0c\u5fc5\u987b\u4f7f\u6240\u6709\u6570\u636e\u90fd\u4fdd\u6301\u4e00\u81f4\u72b6\u6001 \u9694\u79bb\u6027(Isolation)\uff1a\u6570\u636e\u5e93\u7cfb\u7edf\u63d0\u4f9b\u7684\u9694\u79bb\u673a\u5236\uff0c\u4fdd\u8bc1\u4e8b\u52a1\u5728\u4e0d\u53d7\u5916\u90e8\u5e76\u53d1\u64cd\u4f5c\u5f71\u54cd\u7684\u72ec\u7acb\u73af\u5883\u4e0b\u8fd0\u884c \u6301\u4e45\u6027(Durability)\uff1a\u4e8b\u52a1\u4e00\u65e6\u63d0\u4ea4\u6216\u56de\u6eda\uff0c\u5b83\u5bf9\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u7684\u6539\u53d8\u5c31\u662f\u6c38\u4e45\u7684","title":"\u56db\u5927\u7279\u6027ACID"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E5%9F%BA%E7%A1%80/#_47","text":"\u95ee\u9898 \u63cf\u8ff0 \u810f\u8bfb \u4e00\u4e2a\u4e8b\u52a1\u8bfb\u5230\u53e6\u4e00\u4e2a\u4e8b\u52a1\u8fd8\u6ca1\u63d0\u4ea4\u7684\u6570\u636e \u4e0d\u53ef\u91cd\u590d\u8bfb \u4e00\u4e2a\u4e8b\u52a1\u5148\u540e\u8bfb\u53d6\u540c\u4e00\u6761\u8bb0\u5f55\uff0c\u4f46\u4e24\u6b21\u8bfb\u53d6\u7684\u6570\u636e\u4e0d\u540c \u5e7b\u8bfb \u4e00\u4e2a\u4e8b\u52a1\u6309\u7167\u6761\u4ef6\u67e5\u8be2\u6570\u636e\u65f6\uff0c\u6ca1\u6709\u5bf9\u5e94\u7684\u6570\u636e\u884c\uff0c\u4f46\u662f\u518d\u63d2\u5165\u6570\u636e\u65f6\uff0c\u53c8\u53d1\u73b0\u8fd9\u884c\u6570\u636e\u5df2\u7ecf\u5b58\u5728 \u8fd9\u4e09\u4e2a\u95ee\u9898\u7684\u8be6\u7ec6\u6f14\u793a\uff1ahttps://www.bilibili.com/video/BV1Kr4y1i7ru?p=55cd \u5e76\u53d1\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff1a \u9694\u79bb\u7ea7\u522b \u810f\u8bfb \u4e0d\u53ef\u91cd\u590d\u8bfb \u5e7b\u8bfb Read uncommitted \u221a \u221a \u221a Read committed \u00d7 \u221a \u221a Repeatable Read(\u9ed8\u8ba4) \u00d7 \u00d7 \u221a Serializable \u00d7 \u00d7 \u00d7 \u221a\u8868\u793a\u5728\u5f53\u524d\u9694\u79bb\u7ea7\u522b\u4e0b\u8be5\u95ee\u9898\u4f1a\u51fa\u73b0 Serializable \u6027\u80fd\u6700\u4f4e\uff1bRead uncommitted \u6027\u80fd\u6700\u9ad8\uff0c\u6570\u636e\u5b89\u5168\u6027\u6700\u5dee \u67e5\u770b\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff1a SELECT @@TRANSACTION_ISOLATION; \u8bbe\u7f6e\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff1a SET [ SESSION | GLOBAL ] TRANSACTION ISOLATION LEVEL {READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE }; SESSION \u662f\u4f1a\u8bdd\u7ea7\u522b\uff0c\u8868\u793a\u53ea\u9488\u5bf9\u5f53\u524d\u4f1a\u8bdd\u6709\u6548\uff0cGLOBAL \u8868\u793a\u5bf9\u6240\u6709\u4f1a\u8bdd\u6709\u6548","title":"\u5e76\u53d1\u4e8b\u52a1"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/","text":"\u8fdb\u9636\u7bc7 \u5b58\u50a8\u5f15\u64ce MySQL\u4f53\u7cfb\u7ed3\u6784\uff1a \u5b58\u50a8\u5f15\u64ce\u5c31\u662f\u5b58\u50a8\u6570\u636e\u3001\u5efa\u7acb\u7d22\u5f15\u3001\u66f4\u65b0/\u67e5\u8be2\u6570\u636e\u7b49\u6280\u672f\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u5b58\u50a8\u5f15\u64ce\u662f\u57fa\u4e8e\u8868\u800c\u4e0d\u662f\u57fa\u4e8e\u5e93\u7684\uff0c\u6240\u4ee5\u5b58\u50a8\u5f15\u64ce\u4e5f\u53ef\u4ee5\u88ab\u79f0\u4e3a\u8868\u5f15\u64ce\u3002 \u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce\u662fInnoDB\u3002 \u76f8\u5173\u64cd\u4f5c\uff1a -- \u67e5\u8be2\u5efa\u8868\u8bed\u53e5 show create table account; -- \u5efa\u8868\u65f6\u6307\u5b9a\u5b58\u50a8\u5f15\u64ce CREATE TABLE \u8868\u540d( ... ) ENGINE=INNODB; -- \u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93\u652f\u6301\u7684\u5b58\u50a8\u5f15\u64ce show engines; InnoDB InnoDB \u662f\u4e00\u79cd\u517c\u987e\u9ad8\u53ef\u9760\u6027\u548c\u9ad8\u6027\u80fd\u7684\u901a\u7528\u5b58\u50a8\u5f15\u64ce\uff0c\u5728 MySQL 5.5 \u4e4b\u540e\uff0cInnoDB \u662f\u9ed8\u8ba4\u7684 MySQL \u5f15\u64ce\u3002 \u7279\u70b9\uff1a DML \u64cd\u4f5c\u9075\u5faa ACID \u6a21\u578b\uff0c\u652f\u6301 \u4e8b\u52a1 \u884c\u7ea7\u9501 \uff0c\u63d0\u9ad8\u5e76\u53d1\u8bbf\u95ee\u6027\u80fd \u652f\u6301 \u5916\u952e \u7ea6\u675f\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027\u548c\u6b63\u786e\u6027 \u6587\u4ef6\uff1a xxx.ibd: xxx\u4ee3\u8868\u8868\u540d\uff0cInnoDB \u5f15\u64ce\u7684\u6bcf\u5f20\u8868\u90fd\u4f1a\u5bf9\u5e94\u8fd9\u6837\u4e00\u4e2a\u8868\u7a7a\u95f4\u6587\u4ef6\uff0c\u5b58\u50a8\u8be5\u8868\u7684\u8868\u7ed3\u6784\uff08frm\u3001sdi\uff09\u3001\u6570\u636e\u548c\u7d22\u5f15\u3002 \u53c2\u6570\uff1ainnodb_file_per_table\uff0c\u51b3\u5b9a\u591a\u5f20\u8868\u5171\u4eab\u4e00\u4e2a\u8868\u7a7a\u95f4\u8fd8\u662f\u6bcf\u5f20\u8868\u5bf9\u5e94\u4e00\u4e2a\u8868\u7a7a\u95f4 \u77e5\u8bc6\u70b9\uff1a \u67e5\u770b Mysql \u53d8\u91cf\uff1a show variables like 'innodb_file_per_table'; \u4eceidb\u6587\u4ef6\u63d0\u53d6\u8868\u7ed3\u6784\u6570\u636e\uff1a \uff08\u5728cmd\u8fd0\u884c\uff09 ibd2sdi xxx.ibd InnoDB \u903b\u8f91\u5b58\u50a8\u7ed3\u6784\uff1a MyISAM MyISAM \u662f MySQL \u65e9\u671f\u7684\u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce\u3002 \u7279\u70b9\uff1a \u4e0d\u652f\u6301\u4e8b\u52a1\uff0c\u4e0d\u652f\u6301\u5916\u952e \u652f\u6301\u8868\u9501\uff0c\u4e0d\u652f\u6301\u884c\u9501 \u8bbf\u95ee\u901f\u5ea6\u5feb \u6587\u4ef6\uff1a xxx.sdi: \u5b58\u50a8\u8868\u7ed3\u6784\u4fe1\u606f xxx.MYD: \u5b58\u50a8\u6570\u636e xxx.MYI: \u5b58\u50a8\u7d22\u5f15 Memory Memory \u5f15\u64ce\u7684\u8868\u6570\u636e\u662f\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u7684\uff0c\u53d7\u786c\u4ef6\u95ee\u9898\u3001\u65ad\u7535\u95ee\u9898\u7684\u5f71\u54cd\uff0c\u53ea\u80fd\u5c06\u8fd9\u4e9b\u8868\u4f5c\u4e3a\u4e34\u65f6\u8868\u6216\u7f13\u5b58\u4f7f\u7528\u3002 \u7279\u70b9\uff1a \u5b58\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u901f\u5ea6\u5feb hash\u7d22\u5f15\uff08\u9ed8\u8ba4\uff09 \u6587\u4ef6\uff1a xxx.sdi: \u5b58\u50a8\u8868\u7ed3\u6784\u4fe1\u606f \u5b58\u50a8\u5f15\u64ce\u7279\u70b9 \u7279\u70b9 InnoDB MyISAM Memory \u5b58\u50a8\u9650\u5236 64TB \u6709 \u6709 \u4e8b\u52a1\u5b89\u5168 \u652f\u6301 - - \u9501\u673a\u5236 \u884c\u9501 \u8868\u9501 \u8868\u9501 B+tree\u7d22\u5f15 \u652f\u6301 \u652f\u6301 \u652f\u6301 Hash\u7d22\u5f15 - - \u652f\u6301 \u5168\u6587\u7d22\u5f15 \u652f\u6301\uff085.6\u7248\u672c\u4e4b\u540e\uff09 \u652f\u6301 - \u7a7a\u95f4\u4f7f\u7528 \u9ad8 \u4f4e N/A \u5185\u5b58\u4f7f\u7528 \u9ad8 \u4f4e \u4e2d\u7b49 \u6279\u91cf\u63d2\u5165\u901f\u5ea6 \u4f4e \u9ad8 \u9ad8 \u652f\u6301\u5916\u952e \u652f\u6301 - - \u5b58\u50a8\u5f15\u64ce\u7684\u9009\u62e9 \u5728\u9009\u62e9\u5b58\u50a8\u5f15\u64ce\u65f6\uff0c\u5e94\u8be5\u6839\u636e\u5e94\u7528\u7cfb\u7edf\u7684\u7279\u70b9\u9009\u62e9\u5408\u9002\u7684\u5b58\u50a8\u5f15\u64ce\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u5e94\u7528\u7cfb\u7edf\uff0c\u8fd8\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u591a\u79cd\u5b58\u50a8\u5f15\u64ce\u8fdb\u884c\u7ec4\u5408\u3002 InnoDB: \u5982\u679c\u5e94\u7528\u5bf9\u4e8b\u7269\u7684\u5b8c\u6574\u6027\u6709\u6bd4\u8f83\u9ad8\u7684\u8981\u6c42\uff0c\u5728\u5e76\u53d1\u6761\u4ef6\u4e0b\u8981\u6c42\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u6570\u636e\u64cd\u4f5c\u9664\u4e86\u63d2\u5165\u548c\u67e5\u8be2\u4e4b\u5916\uff0c\u8fd8\u5305\u542b\u5f88\u591a\u7684\u66f4\u65b0\u3001\u5220\u9664\u64cd\u4f5c\uff0c\u5219 InnoDB \u662f\u6bd4\u8f83\u5408\u9002\u7684\u9009\u62e9 MyISAM: \u5982\u679c\u5e94\u7528\u662f\u4ee5\u8bfb\u64cd\u4f5c\u548c\u63d2\u5165\u64cd\u4f5c\u4e3a\u4e3b\uff0c\u53ea\u6709\u5f88\u5c11\u7684\u66f4\u65b0\u548c\u5220\u9664\u64cd\u4f5c\uff0c\u5e76\u4e14\u5bf9\u4e8b\u52a1\u7684\u5b8c\u6574\u6027\u3001\u5e76\u53d1\u6027\u8981\u6c42\u4e0d\u9ad8\uff0c\u90a3\u8fd9\u4e2a\u5b58\u50a8\u5f15\u64ce\u662f\u975e\u5e38\u5408\u9002\u7684\u3002 Memory: \u5c06\u6240\u6709\u6570\u636e\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u8bbf\u95ee\u901f\u5ea6\u5feb\uff0c\u901a\u5e38\u7528\u4e8e\u4e34\u65f6\u8868\u53ca\u7f13\u5b58\u3002Memory \u7684\u7f3a\u9677\u662f\u5bf9\u8868\u7684\u5927\u5c0f\u6709\u9650\u5236\uff0c\u592a\u5927\u7684\u8868\u65e0\u6cd5\u7f13\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u800c\u4e14\u65e0\u6cd5\u4fdd\u969c\u6570\u636e\u7684\u5b89\u5168\u6027 \u7535\u5546\u4e2d\u7684\u8db3\u8ff9\u548c\u8bc4\u8bba\u9002\u5408\u4f7f\u7528 MyISAM \u5f15\u64ce\uff0c\u7f13\u5b58\u9002\u5408\u4f7f\u7528 Memory \u5f15\u64ce\u3002 \u6027\u80fd\u5206\u6790 \u67e5\u770b\u6267\u884c\u9891\u6b21 \u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93\u7684 INSERT, UPDATE, DELETE, SELECT \u8bbf\u95ee\u9891\u6b21\uff1a SHOW GLOBAL STATUS LIKE 'Com_______'; \u6216\u8005 SHOW SESSION STATUS LIKE 'Com_______'; \u4f8b\uff1a show global status like 'Com_______' \u6162\u67e5\u8be2\u65e5\u5fd7 \u6162\u67e5\u8be2\u65e5\u5fd7\u8bb0\u5f55\u4e86\u6240\u6709\u6267\u884c\u65f6\u95f4\u8d85\u8fc7\u6307\u5b9a\u53c2\u6570\uff08long_query_time\uff0c\u5355\u4f4d\uff1a\u79d2\uff0c\u9ed8\u8ba410\u79d2\uff09\u7684\u6240\u6709SQL\u8bed\u53e5\u7684\u65e5\u5fd7\u3002 MySQL\u7684\u6162\u67e5\u8be2\u65e5\u5fd7\u9ed8\u8ba4\u6ca1\u6709\u5f00\u542f\uff0c\u9700\u8981\u5728MySQL\u7684\u914d\u7f6e\u6587\u4ef6\uff08/etc/my.cnf\uff09\u4e2d\u914d\u7f6e\u5982\u4e0b\u4fe1\u606f\uff1a # \u5f00\u542f\u6162\u67e5\u8be2\u65e5\u5fd7\u5f00\u5173 slow_query_log=1 # \u8bbe\u7f6e\u6162\u67e5\u8be2\u65e5\u5fd7\u7684\u65f6\u95f4\u4e3a2\u79d2\uff0cSQL\u8bed\u53e5\u6267\u884c\u65f6\u95f4\u8d85\u8fc72\u79d2\uff0c\u5c31\u4f1a\u89c6\u4e3a\u6162\u67e5\u8be2\uff0c\u8bb0\u5f55\u6162\u67e5\u8be2\u65e5\u5fd7 long_query_time=2 \u66f4\u6539\u540e\u8bb0\u5f97\u91cd\u542fMySQL\u670d\u52a1\uff0c\u65e5\u5fd7\u6587\u4ef6\u4f4d\u7f6e\uff1a/var/lib/mysql/localhost-slow.log \u67e5\u770b\u6162\u67e5\u8be2\u65e5\u5fd7\u5f00\u5173\u72b6\u6001\uff1a show variables like 'slow_query_log'; profile show profile \u80fd\u5728\u505aSQL\u4f18\u5316\u65f6\u5e2e\u6211\u4eec\u4e86\u89e3\u65f6\u95f4\u90fd\u8017\u8d39\u5728\u54ea\u91cc\u3002\u901a\u8fc7 have_profiling \u53c2\u6570\uff0c\u80fd\u770b\u5230\u5f53\u524d MySQL \u662f\u5426\u652f\u6301 profile \u64cd\u4f5c\uff1a SELECT @@have_profiling; profiling \u9ed8\u8ba4\u5173\u95ed\uff0c\u53ef\u4ee5\u901a\u8fc7set\u8bed\u53e5\u5728session/global\u7ea7\u522b\u5f00\u542f profiling\uff1a SET profiling = 1; \u67e5\u770b\u6240\u6709\u8bed\u53e5\u7684\u8017\u65f6\uff1a show profiles; \u67e5\u770b\u6307\u5b9aquery_id\u7684SQL\u8bed\u53e5\u5404\u4e2a\u9636\u6bb5\u7684\u8017\u65f6\uff1a show profile for query query_id; \u67e5\u770b\u6307\u5b9aquery_id\u7684SQL\u8bed\u53e5CPU\u7684\u4f7f\u7528\u60c5\u51b5 show profile cpu for query query_id; explain EXPLAIN \u6216\u8005 DESC \u547d\u4ee4\u83b7\u53d6 MySQL \u5982\u4f55\u6267\u884c SELECT \u8bed\u53e5\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u5728 SELECT \u8bed\u53e5\u6267\u884c\u8fc7\u7a0b\u4e2d\u8868\u5982\u4f55\u8fde\u63a5\u548c\u8fde\u63a5\u7684\u987a\u5e8f\u3002 \u8bed\u6cd5\uff1a # \u76f4\u63a5\u5728select\u8bed\u53e5\u4e4b\u524d\u52a0\u4e0a\u5173\u952e\u5b57 explain / desc EXPLAIN SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d HWERE \u6761\u4ef6; EXPLAIN \u5404\u5b57\u6bb5\u542b\u4e49\uff1a id\uff1aselect \u67e5\u8be2\u7684\u5e8f\u5217\u53f7\uff0c\u8868\u793a\u67e5\u8be2\u4e2d\u6267\u884c select \u5b50\u53e5\u6216\u8005\u64cd\u4f5c\u8868\u7684\u987a\u5e8f\uff08id\u76f8\u540c\uff0c\u6267\u884c\u987a\u5e8f\u4ece\u4e0a\u5230\u4e0b\uff1bid\u4e0d\u540c\uff0c\u503c\u8d8a\u5927\u8d8a\u5148\u6267\u884c\uff09 select_type\uff1a\u8868\u793a SELECT \u7684\u7c7b\u578b\uff0c\u5e38\u89c1\u53d6\u503c\u6709 SIMPLE\uff08\u7b80\u5355\u8868\uff0c\u5373\u4e0d\u9002\u7528\u8868\u8fde\u63a5\u6216\u8005\u5b50\u67e5\u8be2\uff09\u3001PRIMARY\uff08\u4e3b\u67e5\u8be2\uff0c\u5373\u5916\u5c42\u7684\u67e5\u8be2\uff09\u3001UNION\uff08UNION\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u6216\u8005\u540e\u9762\u7684\u67e5\u8be2\u8bed\u53e5\uff09\u3001SUBQUERY\uff08SELECT/WHERE\u4e4b\u540e\u5305\u542b\u4e86\u5b50\u67e5\u8be2\uff09\u7b49 type\uff1a\u8868\u793a\u8fde\u63a5\u7c7b\u578b\uff0c\u6027\u80fd\u7531\u597d\u5230\u5dee\u7684\u8fde\u63a5\u7c7b\u578b\u4e3a NULL\u3001system\u3001const\u3001eq_ref\u3001ref\u3001range\u3001index\u3001all possible_key\uff1a\u53ef\u80fd\u5e94\u7528\u5728\u8fd9\u5f20\u8868\u4e0a\u7684\u7d22\u5f15\uff0c\u4e00\u4e2a\u6216\u591a\u4e2a Key\uff1a\u5b9e\u9645\u4f7f\u7528\u7684\u7d22\u5f15\uff0c\u5982\u679c\u4e3a NULL\uff0c\u5219\u6ca1\u6709\u4f7f\u7528\u7d22\u5f15 Key_len\uff1a\u8868\u793a\u7d22\u5f15\u4e2d\u4f7f\u7528\u7684\u5b57\u8282\u6570\uff0c\u8be5\u503c\u4e3a\u7d22\u5f15\u5b57\u6bb5\u6700\u5927\u53ef\u80fd\u957f\u5ea6\uff0c\u5e76\u975e\u5b9e\u9645\u4f7f\u7528\u957f\u5ea6\uff0c\u5728\u4e0d\u635f\u5931\u7cbe\u786e\u6027\u7684\u524d\u63d0\u4e0b\uff0c\u957f\u5ea6\u8d8a\u77ed\u8d8a\u597d rows\uff1aMySQL\u8ba4\u4e3a\u5fc5\u987b\u8981\u6267\u884c\u7684\u884c\u6570\uff0c\u5728InnoDB\u5f15\u64ce\u7684\u8868\u4e2d\uff0c\u662f\u4e00\u4e2a\u4f30\u8ba1\u503c\uff0c\u53ef\u80fd\u5e76\u4e0d\u603b\u662f\u51c6\u786e\u7684 filtered\uff1a\u8868\u793a\u8fd4\u56de\u7ed3\u679c\u7684\u884c\u6570\u5360\u9700\u8bfb\u53d6\u884c\u6570\u7684\u767e\u5206\u6bd4\uff0cfiltered\u7684\u503c\u8d8a\u5927\u8d8a\u597d \u7d22\u5f15 \u7d22\u5f15\u662f\u5e2e\u52a9 MySQL \u9ad8\u6548\u83b7\u53d6\u6570\u636e \u7684 \u6570\u636e\u7ed3\u6784\uff08\u6709\u5e8f\uff09 \u3002\u5728\u6570\u636e\u4e4b\u5916\uff0c\u6570\u636e\u5e93\u7cfb\u7edf\u8fd8\u7ef4\u62a4\u7740\u6ee1\u8db3\u7279\u5b9a\u67e5\u627e\u7b97\u6cd5\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5f15\u7528\uff08\u6307\u5411\uff09\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u4e0a\u5b9e\u73b0\u9ad8\u7ea7\u67e5\u8be2\u7b97\u6cd5\uff0c\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u5c31\u662f\u7d22\u5f15\u3002 \u4f18\u7f3a\u70b9\uff1a \u4f18\u70b9\uff1a \u63d0\u9ad8\u6570\u636e\u68c0\u7d22\u6548\u7387\uff0c\u964d\u4f4e\u6570\u636e\u5e93\u7684IO\u6210\u672c \u901a\u8fc7\u7d22\u5f15\u5217\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u964d\u4f4e\u6570\u636e\u6392\u5e8f\u7684\u6210\u672c\uff0c\u964d\u4f4eCPU\u7684\u6d88\u8017 \u7f3a\u70b9\uff1a \u7d22\u5f15\u5217\u4e5f\u662f\u8981\u5360\u7528\u7a7a\u95f4\u7684 \u7d22\u5f15\u5927\u5927\u63d0\u9ad8\u4e86\u67e5\u8be2\u6548\u7387\uff0c\u4f46\u964d\u4f4e\u4e86\u66f4\u65b0\u7684\u901f\u5ea6\uff0c\u6bd4\u5982 INSERT\u3001UPDATE\u3001DELETE \u7d22\u5f15\u7ed3\u6784 \u7d22\u5f15\u7ed3\u6784 \u63cf\u8ff0 B+Tree \u6700\u5e38\u89c1\u7684\u7d22\u5f15\u7c7b\u578b\uff0c\u5927\u90e8\u5206\u5f15\u64ce\u90fd\u652f\u6301B+\u6811\u7d22\u5f15 Hash \u5e95\u5c42\u6570\u636e\u7ed3\u6784\u662f\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u53ea\u6709\u7cbe\u786e\u5339\u914d\u7d22\u5f15\u5217\u7684\u67e5\u8be2\u624d\u6709\u6548\uff0c\u4e0d\u652f\u6301\u8303\u56f4\u67e5\u8be2 R-Tree(\u7a7a\u95f4\u7d22\u5f15) \u7a7a\u95f4\u7d22\u5f15\u662f MyISAM \u5f15\u64ce\u7684\u4e00\u4e2a\u7279\u6b8a\u7d22\u5f15\u7c7b\u578b\uff0c\u4e3b\u8981\u7528\u4e8e\u5730\u7406\u7a7a\u95f4\u6570\u636e\u7c7b\u578b\uff0c\u901a\u5e38\u4f7f\u7528\u8f83\u5c11 Full-Text(\u5168\u6587\u7d22\u5f15) \u662f\u4e00\u79cd\u901a\u8fc7\u5efa\u7acb\u5012\u6392\u7d22\u5f15\uff0c\u5feb\u901f\u5339\u914d\u6587\u6863\u7684\u65b9\u5f0f\uff0c\u7c7b\u4f3c\u4e8e Lucene, Solr, ES \u7d22\u5f15 InnoDB MyISAM Memory B+Tree\u7d22\u5f15 \u652f\u6301 \u652f\u6301 \u652f\u6301 Hash\u7d22\u5f15 \u4e0d\u652f\u6301 \u4e0d\u652f\u6301 \u652f\u6301 R-Tree\u7d22\u5f15 \u4e0d\u652f\u6301 \u652f\u6301 \u4e0d\u652f\u6301 Full-text 5.6\u7248\u672c\u540e\u652f\u6301 \u652f\u6301 \u4e0d\u652f\u6301 B-Tree \u4e8c\u53c9\u6811\u7684\u7f3a\u70b9\u53ef\u4ee5\u7528\u7ea2\u9ed1\u6811\u6765\u89e3\u51b3\uff1a \u7ea2\u9ed1\u6811\u4e5f\u5b58\u5728\u5927\u6570\u636e\u91cf\u60c5\u51b5\u4e0b\uff0c\u5c42\u7ea7\u8f83\u6df1\uff0c\u68c0\u7d22\u901f\u5ea6\u6162\u7684\u95ee\u9898\u3002 \u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528 B-Tree \u7ed3\u6784\u3002 B-Tree (\u591a\u8def\u5e73\u8861\u67e5\u627e\u6811) \u4ee5\u4e00\u68f5\u6700\u5927\u5ea6\u6570\uff08max-degree\uff0c\u6307\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2a\u6570\uff09\u4e3a5\uff085\u9636\uff09\u7684 b-tree \u4e3a\u4f8b\uff08\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u5b58\u50a84\u4e2akey\uff0c5\u4e2a\u6307\u9488\uff09 B-Tree \u7684\u6570\u636e\u63d2\u5165\u8fc7\u7a0b\u52a8\u753b\u53c2\u7167\uff1ahttps://www.bilibili.com/video/BV1Kr4y1i7ru?p=68 \u6f14\u793a\u5730\u5740\uff1ahttps://www.cs.usfca.edu/~galles/visualization/BTree.html B+Tree \u7ed3\u6784\u56fe\uff1a \u6f14\u793a\u5730\u5740\uff1ahttps://www.cs.usfca.edu/~galles/visualization/BPlusTree.html \u4e0e B-Tree \u7684\u533a\u522b\uff1a \u6240\u6709\u7684\u6570\u636e\u90fd\u4f1a\u51fa\u73b0\u5728\u53f6\u5b50\u8282\u70b9 \u53f6\u5b50\u8282\u70b9\u5f62\u6210\u4e00\u4e2a\u5355\u5411\u94fe\u8868 MySQL \u7d22\u5f15\u6570\u636e\u7ed3\u6784\u5bf9\u7ecf\u5178\u7684 B+Tree \u8fdb\u884c\u4e86\u4f18\u5316\u3002\u5728\u539f B+Tree \u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e00\u4e2a\u6307\u5411\u76f8\u90bb\u53f6\u5b50\u8282\u70b9\u7684\u94fe\u8868\u6307\u9488\uff0c\u5c31\u5f62\u6210\u4e86\u5e26\u6709\u987a\u5e8f\u6307\u9488\u7684 B+Tree\uff0c\u63d0\u9ad8\u533a\u95f4\u8bbf\u95ee\u7684\u6027\u80fd\u3002 Hash \u54c8\u5e0c\u7d22\u5f15\u5c31\u662f\u91c7\u7528\u4e00\u5b9a\u7684hash\u7b97\u6cd5\uff0c\u5c06\u952e\u503c\u6362\u7b97\u6210\u65b0\u7684hash\u503c\uff0c\u6620\u5c04\u5230\u5bf9\u5e94\u7684\u69fd\u4f4d\u4e0a\uff0c\u7136\u540e\u5b58\u50a8\u5728hash\u8868\u4e2d\u3002 \u5982\u679c\u4e24\u4e2a\uff08\u6216\u591a\u4e2a\uff09\u952e\u503c\uff0c\u6620\u5c04\u5230\u4e00\u4e2a\u76f8\u540c\u7684\u69fd\u4f4d\u4e0a\uff0c\u4ed6\u4eec\u5c31\u4ea7\u751f\u4e86hash\u51b2\u7a81\uff08\u4e5f\u79f0\u4e3ahash\u78b0\u649e\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u94fe\u8868\u6765\u89e3\u51b3\u3002 \u7279\u70b9\uff1a Hash\u7d22\u5f15\u53ea\u80fd\u7528\u4e8e\u5bf9\u7b49\u6bd4\u8f83\uff08=\u3001in\uff09\uff0c\u4e0d\u652f\u6301\u8303\u56f4\u67e5\u8be2\uff08betwwn\u3001>\u3001<\u3001...\uff09 \u65e0\u6cd5\u5229\u7528\u7d22\u5f15\u5b8c\u6210\u6392\u5e8f\u64cd\u4f5c \u67e5\u8be2\u6548\u7387\u9ad8\uff0c\u901a\u5e38\u53ea\u9700\u8981\u4e00\u6b21\u68c0\u7d22\u5c31\u53ef\u4ee5\u4e86\uff0c\u6548\u7387\u901a\u5e38\u8981\u9ad8\u4e8e B+Tree \u7d22\u5f15 \u5b58\u50a8\u5f15\u64ce\u652f\u6301\uff1a Memory InnoDB: \u5177\u6709\u81ea\u9002\u5e94hash\u529f\u80fd\uff0chash\u7d22\u5f15\u662f\u5b58\u50a8\u5f15\u64ce\u6839\u636e B+Tree \u7d22\u5f15\u5728\u6307\u5b9a\u6761\u4ef6\u4e0b\u81ea\u52a8\u6784\u5efa\u7684 \u9762\u8bd5\u9898 \u4e3a\u4ec0\u4e48 InnoDB \u5b58\u50a8\u5f15\u64ce\u9009\u62e9\u4f7f\u7528 B+Tree \u7d22\u5f15\u7ed3\u6784\uff1f \u76f8\u5bf9\u4e8e\u4e8c\u53c9\u6811\uff0c\u5c42\u7ea7\u66f4\u5c11\uff0c\u641c\u7d22\u6548\u7387\u9ad8 \u5bf9\u4e8e B-Tree\uff0c\u65e0\u8bba\u662f\u53f6\u5b50\u8282\u70b9\u8fd8\u662f\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u90fd\u4f1a\u4fdd\u5b58\u6570\u636e\uff0c\u8fd9\u6837\u5bfc\u81f4\u4e00\u9875\u4e2d\u5b58\u50a8\u7684\u952e\u503c\u51cf\u5c11\uff0c\u6307\u9488\u4e5f\u8ddf\u7740\u51cf\u5c11\uff0c\u8981\u540c\u6837\u4fdd\u5b58\u5927\u91cf\u6570\u636e\uff0c\u53ea\u80fd\u589e\u52a0\u6811\u7684\u9ad8\u5ea6\uff0c\u5bfc\u81f4\u6027\u80fd\u964d\u4f4e \u76f8\u5bf9\u4e8e Hash \u7d22\u5f15\uff0cB+Tree \u652f\u6301\u8303\u56f4\u5339\u914d\u53ca\u6392\u5e8f\u64cd\u4f5c \u7d22\u5f15\u5206\u7c7b \u5206\u7c7b \u542b\u4e49 \u7279\u70b9 \u5173\u952e\u5b57 \u4e3b\u952e\u7d22\u5f15 \u9488\u5bf9\u4e8e\u8868\u4e2d\u4e3b\u952e\u521b\u5efa\u7684\u7d22\u5f15 \u9ed8\u8ba4\u81ea\u52a8\u521b\u5efa\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a PRIMARY \u552f\u4e00\u7d22\u5f15 \u907f\u514d\u540c\u4e00\u4e2a\u8868\u4e2d\u67d0\u6570\u636e\u5217\u4e2d\u7684\u503c\u91cd\u590d \u53ef\u4ee5\u6709\u591a\u4e2a UNIQUE \u5e38\u89c4\u7d22\u5f15 \u5feb\u901f\u5b9a\u4f4d\u7279\u5b9a\u6570\u636e \u53ef\u4ee5\u6709\u591a\u4e2a \u5168\u6587\u7d22\u5f15 \u5168\u6587\u7d22\u5f15\u67e5\u627e\u7684\u662f\u6587\u672c\u4e2d\u7684\u5173\u952e\u8bcd\uff0c\u800c\u4e0d\u662f\u6bd4\u8f83\u7d22\u5f15\u4e2d\u7684\u503c \u53ef\u4ee5\u6709\u591a\u4e2a FULLTEXT \u5728 InnoDB \u5b58\u50a8\u5f15\u64ce\u4e2d\uff0c\u6839\u636e\u7d22\u5f15\u7684\u5b58\u50a8\u5f62\u5f0f\uff0c\u53c8\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\uff1a \u5206\u7c7b \u542b\u4e49 \u7279\u70b9 \u805a\u96c6\u7d22\u5f15(Clustered Index) \u5c06\u6570\u636e\u5b58\u50a8\u4e0e\u7d22\u5f15\u653e\u4e00\u5757\uff0c\u7d22\u5f15\u7ed3\u6784\u7684\u53f6\u5b50\u8282\u70b9\u4fdd\u5b58\u4e86\u884c\u6570\u636e \u5fc5\u987b\u6709\uff0c\u800c\u4e14\u53ea\u6709\u4e00\u4e2a \u4e8c\u7ea7\u7d22\u5f15(Secondary Index) \u5c06\u6570\u636e\u4e0e\u7d22\u5f15\u5206\u5f00\u5b58\u50a8\uff0c\u7d22\u5f15\u7ed3\u6784\u7684\u53f6\u5b50\u8282\u70b9\u5173\u8054\u7684\u662f\u5bf9\u5e94\u7684\u4e3b\u952e \u53ef\u4ee5\u5b58\u5728\u591a\u4e2a \u6f14\u793a\u56fe\uff1a \u805a\u96c6\u7d22\u5f15\u9009\u53d6\u89c4\u5219\uff1a \u5982\u679c\u5b58\u5728\u4e3b\u952e\uff0c\u4e3b\u952e\u7d22\u5f15\u5c31\u662f\u805a\u96c6\u7d22\u5f15 \u5982\u679c\u4e0d\u5b58\u5728\u4e3b\u952e\uff0c\u5c06\u4f7f\u7528\u7b2c\u4e00\u4e2a\u552f\u4e00(UNIQUE)\u7d22\u5f15\u4f5c\u4e3a\u805a\u96c6\u7d22\u5f15 \u5982\u679c\u8868\u6ca1\u6709\u4e3b\u952e\u6216\u6ca1\u6709\u5408\u9002\u7684\u552f\u4e00\u7d22\u5f15\uff0c\u5219 InnoDB \u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a rowid \u4f5c\u4e3a\u9690\u85cf\u7684\u805a\u96c6\u7d22\u5f15 \u601d\u8003\u9898 1. \u4ee5\u4e0b SQL \u8bed\u53e5\uff0c\u54ea\u4e2a\u6267\u884c\u6548\u7387\u9ad8\uff1f\u4e3a\u4ec0\u4e48\uff1f select * from user where id = 10; select * from user where name = 'Arm'; -- \u5907\u6ce8\uff1aid\u4e3a\u4e3b\u952e\uff0cname\u5b57\u6bb5\u521b\u5efa\u7684\u6709\u7d22\u5f15 \u7b54\uff1a\u7b2c\u4e00\u6761\u8bed\u53e5\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u6761\u9700\u8981\u56de\u8868\u67e5\u8be2\uff0c\u76f8\u5f53\u4e8e\u4e24\u4e2a\u6b65\u9aa4\u3002 2. InnoDB \u4e3b\u952e\u7d22\u5f15\u7684 B+Tree \u9ad8\u5ea6\u4e3a\u591a\u5c11\uff1f \u7b54\uff1a\u5047\u8bbe\u4e00\u884c\u6570\u636e\u5927\u5c0f\u4e3a1k\uff0c\u4e00\u9875\u4e2d\u53ef\u4ee5\u5b58\u50a816\u884c\u8fd9\u6837\u7684\u6570\u636e\u3002InnoDB \u7684\u6307\u9488\u5360\u75286\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0c\u4e3b\u952e\u5047\u8bbe\u4e3abigint\uff0c\u5360\u7528\u5b57\u8282\u6570\u4e3a8. \u53ef\u5f97\u516c\u5f0f\uff1a n * 8 + (n + 1) * 6 = 16 * 1024 \uff0c\u5176\u4e2d 8 \u8868\u793a bigint \u5360\u7528\u7684\u5b57\u8282\u6570\uff0cn \u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684key\u7684\u6570\u91cf\uff0c(n + 1) \u8868\u793a\u6307\u9488\u6570\u91cf\uff08\u6bd4key\u591a\u4e00\u4e2a\uff09\u3002\u7b97\u51fan\u7ea6\u4e3a1170\u3002 \u5982\u679c\u6811\u7684\u9ad8\u5ea6\u4e3a2\uff0c\u90a3\u4e48\u4ed6\u80fd\u5b58\u50a8\u7684\u6570\u636e\u91cf\u5927\u6982\u4e3a\uff1a 1171 * 16 = 18736 \uff1b \u5982\u679c\u6811\u7684\u9ad8\u5ea6\u4e3a3\uff0c\u90a3\u4e48\u4ed6\u80fd\u5b58\u50a8\u7684\u6570\u636e\u91cf\u5927\u6982\u4e3a\uff1a 1171 * 1171 * 16 = 21939856 \u3002 \u53e6\u5916\uff0c\u5982\u679c\u6709\u6210\u5343\u4e0a\u4e07\u7684\u6570\u636e\uff0c\u90a3\u4e48\u5c31\u8981\u8003\u8651\u5206\u8868\uff0c\u6d89\u53ca\u8fd0\u7ef4\u7bc7\u77e5\u8bc6\u3002 \u8bed\u6cd5 \u521b\u5efa\u7d22\u5f15\uff1a CREATE [ UNIQUE | FULLTEXT ] INDEX index_name ON table_name (index_col_name, ...); \u5982\u679c\u4e0d\u52a0 CREATE \u540e\u9762\u4e0d\u52a0\u7d22\u5f15\u7c7b\u578b\u53c2\u6570\uff0c\u5219\u521b\u5efa\u7684\u662f\u5e38\u89c4\u7d22\u5f15 \u67e5\u770b\u7d22\u5f15\uff1a SHOW INDEX FROM table_name; \u5220\u9664\u7d22\u5f15\uff1a DROP INDEX index_name ON table_name; \u6848\u4f8b\uff1a -- name\u5b57\u6bb5\u4e3a\u59d3\u540d\u5b57\u6bb5\uff0c\u8be5\u5b57\u6bb5\u7684\u503c\u53ef\u80fd\u4f1a\u91cd\u590d\uff0c\u4e3a\u8be5\u5b57\u6bb5\u521b\u5efa\u7d22\u5f15 create index idx_user_name on tb_user(name); -- phone\u624b\u673a\u53f7\u5b57\u6bb5\u7684\u503c\u975e\u7a7a\uff0c\u4e14\u552f\u4e00\uff0c\u4e3a\u8be5\u5b57\u6bb5\u521b\u5efa\u552f\u4e00\u7d22\u5f15 create unique index idx_user_phone on tb_user (phone); -- \u4e3aprofession, age, status\u521b\u5efa\u8054\u5408\u7d22\u5f15 create index idx_user_pro_age_stat on tb_user(profession, age, status); -- \u4e3aemail\u5efa\u7acb\u5408\u9002\u7684\u7d22\u5f15\u6765\u63d0\u5347\u67e5\u8be2\u6548\u7387 create index idx_user_email on tb_user(email); -- \u5220\u9664\u7d22\u5f15 drop index idx_user_email on tb_user; \u4f7f\u7528\u89c4\u5219 \u6700\u5de6\u524d\u7f00\u6cd5\u5219 \u5982\u679c\u7d22\u5f15\u5173\u8054\u4e86\u591a\u5217\uff08\u8054\u5408\u7d22\u5f15\uff09\uff0c\u8981\u9075\u5b88\u6700\u5de6\u524d\u7f00\u6cd5\u5219\uff0c\u6700\u5de6\u524d\u7f00\u6cd5\u5219\u6307\u7684\u662f\u67e5\u8be2\u4ece\u7d22\u5f15\u7684\u6700\u5de6\u5217\u5f00\u59cb\uff0c\u5e76\u4e14\u4e0d\u8df3\u8fc7\u7d22\u5f15\u4e2d\u7684\u5217\u3002 \u5982\u679c\u8df3\u8dc3\u67d0\u4e00\u5217\uff0c\u7d22\u5f15\u5c06\u90e8\u5206\u5931\u6548\uff08\u540e\u9762\u7684\u5b57\u6bb5\u7d22\u5f15\u5931\u6548\uff09\u3002 \u8054\u5408\u7d22\u5f15\u4e2d\uff0c\u51fa\u73b0\u8303\u56f4\u67e5\u8be2\uff08<, >\uff09\uff0c\u8303\u56f4\u67e5\u8be2\u53f3\u4fa7\u7684\u5217\u7d22\u5f15\u5931\u6548\u3002\u53ef\u4ee5\u7528>=\u6216\u8005<=\u6765\u89c4\u907f\u7d22\u5f15\u5931\u6548\u95ee\u9898\u3002 \u7d22\u5f15\u5931\u6548\u60c5\u51b5 \u5728\u7d22\u5f15\u5217\u4e0a\u8fdb\u884c\u8fd0\u7b97\u64cd\u4f5c\uff0c\u7d22\u5f15\u5c06\u5931\u6548\u3002\u5982\uff1a explain select * from tb_user where substring(phone, 10, 2) = '15'; \u5b57\u7b26\u4e32\u7c7b\u578b\u5b57\u6bb5\u4f7f\u7528\u65f6\uff0c\u4e0d\u52a0\u5f15\u53f7\uff0c\u7d22\u5f15\u5c06\u5931\u6548\u3002\u5982\uff1a explain select * from tb_user where phone = 17799990015; \uff0c\u6b64\u5904phone\u7684\u503c\u6ca1\u6709\u52a0\u5f15\u53f7 \u6a21\u7cca\u67e5\u8be2\u4e2d\uff0c\u5982\u679c\u4ec5\u4ec5\u662f\u5c3e\u90e8\u6a21\u7cca\u5339\u914d\uff0c\u7d22\u5f15\u4e0d\u4f1a\u662f\u5931\u6548\uff1b\u5982\u679c\u662f\u5934\u90e8\u6a21\u7cca\u5339\u914d\uff0c\u7d22\u5f15\u5931\u6548\u3002\u5982\uff1a explain select * from tb_user where profession like '%\u5de5\u7a0b'; \uff0c\u524d\u540e\u90fd\u6709 % \u4e5f\u4f1a\u5931\u6548\u3002 \u7528 or \u5206\u5272\u5f00\u7684\u6761\u4ef6\uff0c\u5982\u679c or \u5176\u4e2d\u4e00\u4e2a\u6761\u4ef6\u7684\u5217\u6ca1\u6709\u7d22\u5f15\uff0c\u90a3\u4e48\u6d89\u53ca\u7684\u7d22\u5f15\u90fd\u4e0d\u4f1a\u88ab\u7528\u5230\u3002 \u5982\u679c MySQL \u8bc4\u4f30\u4f7f\u7528\u7d22\u5f15\u6bd4\u5168\u8868\u66f4\u6162\uff0c\u5219\u4e0d\u4f7f\u7528\u7d22\u5f15\u3002 SQL \u63d0\u793a \u662f\u4f18\u5316\u6570\u636e\u5e93\u7684\u4e00\u4e2a\u91cd\u8981\u624b\u6bb5\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5728SQL\u8bed\u53e5\u4e2d\u52a0\u5165\u4e00\u4e9b\u4eba\u4e3a\u7684\u63d0\u793a\u6765\u8fbe\u5230\u4f18\u5316\u64cd\u4f5c\u7684\u76ee\u7684\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528\u7d22\u5f15\uff1a explain select * from tb_user use index(idx_user_pro) where profession=\"\u8f6f\u4ef6\u5de5\u7a0b\"; \u4e0d\u4f7f\u7528\u54ea\u4e2a\u7d22\u5f15\uff1a explain select * from tb_user ignore index(idx_user_pro) where profession=\"\u8f6f\u4ef6\u5de5\u7a0b\"; \u5fc5\u987b\u4f7f\u7528\u54ea\u4e2a\u7d22\u5f15\uff1a explain select * from tb_user force index(idx_user_pro) where profession=\"\u8f6f\u4ef6\u5de5\u7a0b\"; use \u662f\u5efa\u8bae\uff0c\u5b9e\u9645\u4f7f\u7528\u54ea\u4e2a\u7d22\u5f15 MySQL \u8fd8\u4f1a\u81ea\u5df1\u6743\u8861\u8fd0\u884c\u901f\u5ea6\u53bb\u66f4\u6539\uff0cforce\u5c31\u662f\u65e0\u8bba\u5982\u4f55\u90fd\u5f3a\u5236\u4f7f\u7528\u8be5\u7d22\u5f15\u3002 \u8986\u76d6\u7d22\u5f15&\u56de\u8868\u67e5\u8be2 \u5c3d\u91cf\u4f7f\u7528\u8986\u76d6\u7d22\u5f15\uff08\u67e5\u8be2\u4f7f\u7528\u4e86\u7d22\u5f15\uff0c\u5e76\u4e14\u9700\u8981\u8fd4\u56de\u7684\u5217\uff0c\u5728\u8be5\u7d22\u5f15\u4e2d\u5df2\u7ecf\u5168\u90e8\u80fd\u627e\u5230\uff09\uff0c\u51cf\u5c11 select *\u3002 explain \u4e2d extra \u5b57\u6bb5\u542b\u4e49\uff1a using index condition \uff1a\u67e5\u627e\u4f7f\u7528\u4e86\u7d22\u5f15\uff0c\u4f46\u662f\u9700\u8981\u56de\u8868\u67e5\u8be2\u6570\u636e using where; using index; \uff1a\u67e5\u627e\u4f7f\u7528\u4e86\u7d22\u5f15\uff0c\u4f46\u662f\u9700\u8981\u7684\u6570\u636e\u90fd\u5728\u7d22\u5f15\u5217\u4e2d\u80fd\u627e\u5230\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u56de\u8868\u67e5\u8be2 \u5982\u679c\u5728\u805a\u96c6\u7d22\u5f15\u4e2d\u76f4\u63a5\u80fd\u627e\u5230\u5bf9\u5e94\u7684\u884c\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u884c\u6570\u636e\uff0c\u53ea\u9700\u8981\u4e00\u6b21\u67e5\u8be2\uff0c\u54ea\u6015\u662fselect *\uff1b\u5982\u679c\u5728\u8f85\u52a9\u7d22\u5f15\u4e2d\u627e\u805a\u96c6\u7d22\u5f15\uff0c\u5982 select id, name from xxx where name='xxx'; \uff0c\u4e5f\u53ea\u9700\u8981\u901a\u8fc7\u8f85\u52a9\u7d22\u5f15(name)\u67e5\u627e\u5230\u5bf9\u5e94\u7684id\uff0c\u8fd4\u56dename\u548cname\u7d22\u5f15\u5bf9\u5e94\u7684id\u5373\u53ef\uff0c\u53ea\u9700\u8981\u4e00\u6b21\u67e5\u8be2\uff1b\u5982\u679c\u662f\u901a\u8fc7\u8f85\u52a9\u7d22\u5f15\u67e5\u627e\u5176\u4ed6\u5b57\u6bb5\uff0c\u5219\u9700\u8981\u56de\u8868\u67e5\u8be2\uff0c\u5982 select id, name, gender from xxx where name='xxx'; \u6240\u4ee5\u5c3d\u91cf\u4e0d\u8981\u7528 select * \uff0c\u5bb9\u6613\u51fa\u73b0\u56de\u8868\u67e5\u8be2\uff0c\u964d\u4f4e\u6548\u7387\uff0c\u9664\u975e\u6709\u8054\u5408\u7d22\u5f15\u5305\u542b\u4e86\u6240\u6709\u5b57\u6bb5 \u9762\u8bd5\u9898\uff1a\u4e00\u5f20\u8868\uff0c\u6709\u56db\u4e2a\u5b57\u6bb5\uff08id, username, password, status\uff09\uff0c\u7531\u4e8e\u6570\u636e\u91cf\u5927\uff0c\u9700\u8981\u5bf9\u4ee5\u4e0bSQL\u8bed\u53e5\u8fdb\u884c\u4f18\u5316\uff0c\u8be5\u5982\u4f55\u8fdb\u884c\u624d\u662f\u6700\u4f18\u65b9\u6848\uff1a select id, username, password from tb_user where username='itcast'; \u89e3\uff1a\u7ed9username\u548cpassword\u5b57\u6bb5\u5efa\u7acb\u8054\u5408\u7d22\u5f15\uff0c\u5219\u4e0d\u9700\u8981\u56de\u8868\u67e5\u8be2\uff0c\u76f4\u63a5\u8986\u76d6\u7d22\u5f15 \u524d\u7f00\u7d22\u5f15 \u5f53\u5b57\u6bb5\u7c7b\u578b\u4e3a\u5b57\u7b26\u4e32\uff08varchar, text\u7b49\uff09\u65f6\uff0c\u6709\u65f6\u5019\u9700\u8981\u7d22\u5f15\u5f88\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u8fd9\u4f1a\u8ba9\u7d22\u5f15\u53d8\u5f97\u5f88\u5927\uff0c\u67e5\u8be2\u65f6\uff0c\u6d6a\u8d39\u5927\u91cf\u7684\u78c1\u76d8IO\uff0c\u5f71\u54cd\u67e5\u8be2\u6548\u7387\uff0c\u6b64\u65f6\u53ef\u4ee5\u53ea\u964d\u5b57\u7b26\u4e32\u7684\u4e00\u90e8\u5206\u524d\u7f00\uff0c\u5efa\u7acb\u7d22\u5f15\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u8282\u7ea6\u7d22\u5f15\u7a7a\u95f4\uff0c\u4ece\u800c\u63d0\u9ad8\u7d22\u5f15\u6548\u7387\u3002 \u8bed\u6cd5\uff1a create index idx_xxxx on table_name(columnn(n)); \u524d\u7f00\u957f\u5ea6\uff1a\u53ef\u4ee5\u6839\u636e\u7d22\u5f15\u7684\u9009\u62e9\u6027\u6765\u51b3\u5b9a\uff0c\u800c\u9009\u62e9\u6027\u662f\u6307\u4e0d\u91cd\u590d\u7684\u7d22\u5f15\u503c\uff08\u57fa\u6570\uff09\u548c\u6570\u636e\u8868\u7684\u8bb0\u5f55\u603b\u6570\u7684\u6bd4\u503c\uff0c\u7d22\u5f15\u9009\u62e9\u6027\u8d8a\u9ad8\u5219\u67e5\u8be2\u6548\u7387\u8d8a\u9ad8\uff0c\u552f\u4e00\u7d22\u5f15\u7684\u9009\u62e9\u6027\u662f1\uff0c\u8fd9\u662f\u6700\u597d\u7684\u7d22\u5f15\u9009\u62e9\u6027\uff0c\u6027\u80fd\u4e5f\u662f\u6700\u597d\u7684\u3002 \u6c42\u9009\u62e9\u6027\u516c\u5f0f\uff1a select count(distinct email) / count(*) from tb_user; select count(distinct substring(email, 1, 5)) / count(*) from tb_user; show index \u91cc\u9762\u7684sub_part\u53ef\u4ee5\u770b\u5230\u63a5\u53d6\u7684\u957f\u5ea6 \u5355\u5217\u7d22\u5f15&\u8054\u5408\u7d22\u5f15 \u5355\u5217\u7d22\u5f15\uff1a\u5373\u4e00\u4e2a\u7d22\u5f15\u53ea\u5305\u542b\u5355\u4e2a\u5217 \u8054\u5408\u7d22\u5f15\uff1a\u5373\u4e00\u4e2a\u7d22\u5f15\u5305\u542b\u4e86\u591a\u4e2a\u5217 \u5728\u4e1a\u52a1\u573a\u666f\u4e2d\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2a\u67e5\u8be2\u6761\u4ef6\uff0c\u8003\u8651\u9488\u5bf9\u4e8e\u67e5\u8be2\u5b57\u6bb5\u5efa\u7acb\u7d22\u5f15\u65f6\uff0c\u5efa\u8bae\u5efa\u7acb\u8054\u5408\u7d22\u5f15\uff0c\u800c\u975e\u5355\u5217\u7d22\u5f15\u3002 \u5355\u5217\u7d22\u5f15\u60c5\u51b5\uff1a explain select id, phone, name from tb_user where phone = '17799990010' and name = '\u97e9\u4fe1'; \u8fd9\u53e5\u53ea\u4f1a\u7528\u5230phone\u7d22\u5f15\u5b57\u6bb5 \u6ce8\u610f\u4e8b\u9879 \u591a\u6761\u4ef6\u8054\u5408\u67e5\u8be2\u65f6\uff0cMySQL\u4f18\u5316\u5668\u4f1a\u8bc4\u4f30\u54ea\u4e2a\u5b57\u6bb5\u7684\u7d22\u5f15\u6548\u7387\u66f4\u9ad8\uff0c\u4f1a\u9009\u62e9\u8be5\u7d22\u5f15\u5b8c\u6210\u672c\u6b21\u67e5\u8be2 \u8bbe\u8ba1\u539f\u5219 \u9488\u5bf9\u4e8e\u6570\u636e\u91cf\u8f83\u5927\uff0c\u4e14\u67e5\u8be2\u6bd4\u8f83\u9891\u7e41\u7684\u8868\u5efa\u7acb\u7d22\u5f15 \u9488\u5bf9\u4e8e\u5e38\u4f5c\u4e3a\u67e5\u8be2\u6761\u4ef6\uff08where\uff09\u3001\u6392\u5e8f\uff08order by\uff09\u3001\u5206\u7ec4\uff08group by\uff09\u64cd\u4f5c\u7684\u5b57\u6bb5\u5efa\u7acb\u7d22\u5f15 \u5c3d\u91cf\u9009\u62e9\u533a\u5206\u5ea6\u9ad8\u7684\u5217\u4f5c\u4e3a\u7d22\u5f15\uff0c\u5c3d\u91cf\u5efa\u7acb\u552f\u4e00\u7d22\u5f15\uff0c\u533a\u5206\u5ea6\u8d8a\u9ad8\uff0c\u4f7f\u7528\u7d22\u5f15\u7684\u6548\u7387\u8d8a\u9ad8 \u5982\u679c\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5b57\u6bb5\uff0c\u5b57\u6bb5\u957f\u5ea6\u8f83\u957f\uff0c\u53ef\u4ee5\u9488\u5bf9\u4e8e\u5b57\u6bb5\u7684\u7279\u70b9\uff0c\u5efa\u7acb\u524d\u7f00\u7d22\u5f15 \u5c3d\u91cf\u4f7f\u7528\u8054\u5408\u7d22\u5f15\uff0c\u51cf\u5c11\u5355\u5217\u7d22\u5f15\uff0c\u67e5\u8be2\u65f6\uff0c\u8054\u5408\u7d22\u5f15\u5f88\u591a\u65f6\u5019\u53ef\u4ee5\u8986\u76d6\u7d22\u5f15\uff0c\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\uff0c\u907f\u514d\u56de\u8868\uff0c\u63d0\u9ad8\u67e5\u8be2\u6548\u7387 \u8981\u63a7\u5236\u7d22\u5f15\u7684\u6570\u91cf\uff0c\u7d22\u5f15\u5e76\u4e0d\u662f\u591a\u591a\u76ca\u5584\uff0c\u7d22\u5f15\u8d8a\u591a\uff0c\u7ef4\u62a4\u7d22\u5f15\u7ed3\u6784\u7684\u4ee3\u4ef7\u5c31\u8d8a\u5927\uff0c\u4f1a\u5f71\u54cd\u589e\u5220\u6539\u7684\u6548\u7387 \u5982\u679c\u7d22\u5f15\u5217\u4e0d\u80fd\u5b58\u50a8NULL\u503c\uff0c\u8bf7\u5728\u521b\u5efa\u8868\u65f6\u4f7f\u7528NOT NULL\u7ea6\u675f\u5b83\u3002\u5f53\u4f18\u5316\u5668\u77e5\u9053\u6bcf\u5217\u662f\u5426\u5305\u542bNULL\u503c\u65f6\uff0c\u5b83\u53ef\u4ee5\u66f4\u597d\u5730\u786e\u5b9a\u54ea\u4e2a\u7d22\u5f15\u6700\u6709\u6548\u5730\u7528\u4e8e\u67e5\u8be2 SQL \u4f18\u5316 \u63d2\u5165\u6570\u636e \u666e\u901a\u63d2\u5165\uff1a \u91c7\u7528\u6279\u91cf\u63d2\u5165\uff08\u4e00\u6b21\u63d2\u5165\u7684\u6570\u636e\u4e0d\u5efa\u8bae\u8d85\u8fc71000\u6761\uff09 \u624b\u52a8\u63d0\u4ea4\u4e8b\u52a1 \u4e3b\u952e\u987a\u5e8f\u63d2\u5165 \u5927\u6279\u91cf\u63d2\u5165\uff1a \u5982\u679c\u4e00\u6b21\u6027\u9700\u8981\u63d2\u5165\u5927\u6279\u91cf\u6570\u636e\uff0c\u4f7f\u7528insert\u8bed\u53e5\u63d2\u5165\u6027\u80fd\u8f83\u4f4e\uff0c\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528MySQL\u6570\u636e\u5e93\u63d0\u4f9b\u7684load\u6307\u4ee4\u63d2\u5165\u3002 # \u5ba2\u6237\u7aef\u8fde\u63a5\u670d\u52a1\u7aef\u65f6\uff0c\u52a0\u4e0a\u53c2\u6570 --local-infile\uff08\u8fd9\u4e00\u884c\u5728bash/cmd\u754c\u9762\u8f93\u5165\uff09 mysql --local-infile -u root -p # \u8bbe\u7f6e\u5168\u5c40\u53c2\u6570local_infile\u4e3a1\uff0c\u5f00\u542f\u4ece\u672c\u5730\u52a0\u8f7d\u6587\u4ef6\u5bfc\u5165\u6570\u636e\u7684\u5f00\u5173 set global local_infile = 1; select @@local_infile; # \u6267\u884cload\u6307\u4ee4\u5c06\u51c6\u5907\u597d\u7684\u6570\u636e\uff0c\u52a0\u8f7d\u5230\u8868\u7ed3\u6784\u4e2d load data local infile '/root/sql1.log' into table 'tb_user' fields terminated by ',' lines terminated by '\\n'; \u4e3b\u952e\u4f18\u5316 \u6570\u636e\u7ec4\u7ec7\u65b9\u5f0f\uff1a\u5728InnoDB\u5b58\u50a8\u5f15\u64ce\u4e2d\uff0c\u8868\u6570\u636e\u90fd\u662f\u6839\u636e\u4e3b\u952e\u987a\u5e8f\u7ec4\u7ec7\u5b58\u653e\u7684\uff0c\u8fd9\u79cd\u5b58\u50a8\u65b9\u5f0f\u7684\u8868\u79f0\u4e3a\u7d22\u5f15\u7ec4\u7ec7\u8868\uff08Index organized table, IOT\uff09 \u9875\u5206\u88c2\uff1a\u9875\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u4e5f\u53ef\u4ee5\u586b\u5145\u4e00\u822c\uff0c\u4e5f\u53ef\u4ee5\u586b\u5145100%\uff0c\u6bcf\u4e2a\u9875\u5305\u542b\u4e862-N\u884c\u6570\u636e\uff08\u5982\u679c\u4e00\u884c\u6570\u636e\u8fc7\u5927\uff0c\u4f1a\u884c\u6ea2\u51fa\uff09\uff0c\u6839\u636e\u4e3b\u952e\u6392\u5217\u3002 \u9875\u5408\u5e76\uff1a\u5f53\u5220\u9664\u4e00\u884c\u8bb0\u5f55\u65f6\uff0c\u5b9e\u9645\u4e0a\u8bb0\u5f55\u5e76\u6ca1\u6709\u88ab\u7269\u7406\u5220\u9664\uff0c\u53ea\u662f\u8bb0\u5f55\u88ab\u6807\u8bb0\uff08flaged\uff09\u4e3a\u5220\u9664\u5e76\u4e14\u5b83\u7684\u7a7a\u95f4\u53d8\u5f97\u5141\u8bb8\u88ab\u5176\u4ed6\u8bb0\u5f55\u58f0\u660e\u4f7f\u7528\u3002\u5f53\u9875\u4e2d\u5220\u9664\u7684\u8bb0\u5f55\u5230\u8fbe MERGE_THRESHOLD\uff08\u9ed8\u8ba4\u4e3a\u9875\u768450%\uff09\uff0cInnoDB\u4f1a\u5f00\u59cb\u5bfb\u627e\u6700\u9760\u8fd1\u7684\u9875\uff08\u524d\u540e\uff09\u770b\u770b\u662f\u5426\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u9875\u5408\u5e76\u4ee5\u4f18\u5316\u7a7a\u95f4\u4f7f\u7528\u3002 MERGE_THRESHOLD\uff1a\u5408\u5e76\u9875\u7684\u9608\u503c\uff0c\u53ef\u4ee5\u81ea\u5df1\u8bbe\u7f6e\uff0c\u5728\u521b\u5efa\u8868\u6216\u521b\u5efa\u7d22\u5f15\u65f6\u6307\u5b9a \u6587\u5b57\u8bf4\u660e\u4e0d\u591f\u6e05\u6670\u660e\u4e86\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u89c6\u9891\u91cc\u7684PPT\u6f14\u793a\u8fc7\u7a0b\uff1ahttps://www.bilibili.com/video/BV1Kr4y1i7ru?p=90 \u4e3b\u952e\u8bbe\u8ba1\u539f\u5219\uff1a \u6ee1\u8db3\u4e1a\u52a1\u9700\u6c42\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u964d\u4f4e\u4e3b\u952e\u7684\u957f\u5ea6 \u63d2\u5165\u6570\u636e\u65f6\uff0c\u5c3d\u91cf\u9009\u62e9\u987a\u5e8f\u63d2\u5165\uff0c\u9009\u62e9\u4f7f\u7528 AUTO_INCREMENT \u81ea\u589e\u4e3b\u952e \u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528 UUID \u505a\u4e3b\u952e\u6216\u8005\u662f\u5176\u4ed6\u7684\u81ea\u7136\u4e3b\u952e\uff0c\u5982\u8eab\u4efd\u8bc1\u53f7 \u4e1a\u52a1\u64cd\u4f5c\u65f6\uff0c\u907f\u514d\u5bf9\u4e3b\u952e\u7684\u4fee\u6539 order by\u4f18\u5316 Using filesort\uff1a\u901a\u8fc7\u8868\u7684\u7d22\u5f15\u6216\u5168\u8868\u626b\u63cf\uff0c\u8bfb\u53d6\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u636e\u884c\uff0c\u7136\u540e\u5728\u6392\u5e8f\u7f13\u51b2\u533a sort buffer \u4e2d\u5b8c\u6210\u6392\u5e8f\u64cd\u4f5c\uff0c\u6240\u6709\u4e0d\u662f\u901a\u8fc7\u7d22\u5f15\u76f4\u63a5\u8fd4\u56de\u6392\u5e8f\u7ed3\u679c\u7684\u6392\u5e8f\u90fd\u53eb FileSort \u6392\u5e8f Using index\uff1a\u901a\u8fc7\u6709\u5e8f\u7d22\u5f15\u987a\u5e8f\u626b\u63cf\u76f4\u63a5\u8fd4\u56de\u6709\u5e8f\u6570\u636e\uff0c\u8fd9\u79cd\u60c5\u51b5\u5373\u4e3a using index\uff0c\u4e0d\u9700\u8981\u989d\u5916\u6392\u5e8f\uff0c\u64cd\u4f5c\u6548\u7387\u9ad8 \u5982\u679corder by\u5b57\u6bb5\u5168\u90e8\u4f7f\u7528\u5347\u5e8f\u6392\u5e8f\u6216\u8005\u964d\u5e8f\u6392\u5e8f\uff0c\u5219\u90fd\u4f1a\u8d70\u7d22\u5f15\uff0c\u4f46\u662f\u5982\u679c\u4e00\u4e2a\u5b57\u6bb5\u5347\u5e8f\u6392\u5e8f\uff0c\u53e6\u4e00\u4e2a\u5b57\u6bb5\u964d\u5e8f\u6392\u5e8f\uff0c\u5219\u4e0d\u4f1a\u8d70\u7d22\u5f15\uff0cexplain\u7684extra\u4fe1\u606f\u663e\u793a\u7684\u662f Using index, Using filesort \uff0c\u5982\u679c\u8981\u4f18\u5316\u6389Using filesort\uff0c\u5219\u9700\u8981\u53e6\u5916\u518d\u521b\u5efa\u4e00\u4e2a\u7d22\u5f15\uff0c\u5982\uff1a create index idx_user_age_phone_ad on tb_user(age asc, phone desc); \uff0c\u6b64\u65f6\u4f7f\u7528 select id, age, phone from tb_user order by age asc, phone desc; \u4f1a\u5168\u90e8\u8d70\u7d22\u5f15 \u603b\u7ed3\uff1a \u6839\u636e\u6392\u5e8f\u5b57\u6bb5\u5efa\u7acb\u5408\u9002\u7684\u7d22\u5f15\uff0c\u591a\u5b57\u6bb5\u6392\u5e8f\u65f6\uff0c\u4e5f\u9075\u5faa\u6700\u5de6\u524d\u7f00\u6cd5\u5219 \u5c3d\u91cf\u4f7f\u7528\u8986\u76d6\u7d22\u5f15 \u591a\u5b57\u6bb5\u6392\u5e8f\uff0c\u4e00\u4e2a\u5347\u5e8f\u4e00\u4e2a\u964d\u5e8f\uff0c\u6b64\u65f6\u9700\u8981\u6ce8\u610f\u8054\u5408\u7d22\u5f15\u5728\u521b\u5efa\u65f6\u7684\u89c4\u5219\uff08ASC/DESC\uff09 \u5982\u679c\u4e0d\u53ef\u907f\u514d\u51fa\u73b0filesort\uff0c\u5927\u6570\u636e\u91cf\u6392\u5e8f\u65f6\uff0c\u53ef\u4ee5\u9002\u5f53\u589e\u5927\u6392\u5e8f\u7f13\u51b2\u533a\u5927\u5c0f sort_buffer_size\uff08\u9ed8\u8ba4256k\uff09 group by\u4f18\u5316 \u5728\u5206\u7ec4\u64cd\u4f5c\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u6765\u63d0\u9ad8\u6548\u7387 \u5206\u7ec4\u64cd\u4f5c\u65f6\uff0c\u7d22\u5f15\u7684\u4f7f\u7528\u4e5f\u662f\u6ee1\u8db3\u6700\u5de6\u524d\u7f00\u6cd5\u5219\u7684 \u5982\u7d22\u5f15\u4e3a idx_user_pro_age_stat \uff0c\u5219\u53e5\u5f0f\u53ef\u4ee5\u662f select ... where profession order by age \uff0c\u8fd9\u6837\u4e5f\u7b26\u5408\u6700\u5de6\u524d\u7f00\u6cd5\u5219 limit\u4f18\u5316 \u5e38\u89c1\u7684\u95ee\u9898\u5982 limit 2000000, 10 \uff0c\u6b64\u65f6\u9700\u8981 MySQL \u6392\u5e8f\u524d2000000\u6761\u8bb0\u5f55\uff0c\u4f46\u4ec5\u4ec5\u8fd4\u56de2000000 - 2000010\u7684\u8bb0\u5f55\uff0c\u5176\u4ed6\u8bb0\u5f55\u4e22\u5f03\uff0c\u67e5\u8be2\u6392\u5e8f\u7684\u4ee3\u4ef7\u975e\u5e38\u5927\u3002 \u4f18\u5316\u65b9\u6848\uff1a\u4e00\u822c\u5206\u9875\u67e5\u8be2\u65f6\uff0c\u901a\u8fc7\u521b\u5efa\u8986\u76d6\u7d22\u5f15\u80fd\u591f\u6bd4\u8f83\u597d\u5730\u63d0\u9ad8\u6027\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u8986\u76d6\u7d22\u5f15\u52a0\u5b50\u67e5\u8be2\u5f62\u5f0f\u8fdb\u884c\u4f18\u5316 \u4f8b\u5982\uff1a -- \u6b64\u8bed\u53e5\u8017\u65f6\u5f88\u957f select * from tb_sku limit 9000000, 10; -- \u901a\u8fc7\u8986\u76d6\u7d22\u5f15\u52a0\u5feb\u901f\u5ea6\uff0c\u76f4\u63a5\u901a\u8fc7\u4e3b\u952e\u7d22\u5f15\u8fdb\u884c\u6392\u5e8f\u53ca\u67e5\u8be2 select id from tb_sku order by id limit 9000000, 10; -- \u4e0b\u9762\u7684\u8bed\u53e5\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a MySQL \u4e0d\u652f\u6301 in \u91cc\u9762\u4f7f\u7528 limit -- select * from tb_sku where id in (select id from tb_sku order by id limit 9000000, 10); -- \u901a\u8fc7\u8fde\u8868\u67e5\u8be2\u5373\u53ef\u5b9e\u73b0\u7b2c\u4e00\u53e5\u7684\u6548\u679c\uff0c\u5e76\u4e14\u80fd\u8fbe\u5230\u7b2c\u4e8c\u53e5\u7684\u901f\u5ea6 select * from tb_sku as s, (select id from tb_sku order by id limit 9000000, 10) as a where s.id = a.id; count\u4f18\u5316 MyISAM \u5f15\u64ce\u628a\u4e00\u4e2a\u8868\u7684\u603b\u884c\u6570\u5b58\u5728\u4e86\u78c1\u76d8\u4e0a\uff0c\u56e0\u6b64\u6267\u884c count(*) \u7684\u65f6\u5019\u4f1a\u76f4\u63a5\u8fd4\u56de\u8fd9\u4e2a\u6570\uff0c\u6548\u7387\u5f88\u9ad8\uff08\u524d\u63d0\u662f\u4e0d\u9002\u7528where\uff09\uff1b InnoDB \u5728\u6267\u884c count(*) \u65f6\uff0c\u9700\u8981\u628a\u6570\u636e\u4e00\u884c\u4e00\u884c\u5730\u4ece\u5f15\u64ce\u91cc\u9762\u8bfb\u51fa\u6765\uff0c\u7136\u540e\u7d2f\u8ba1\u8ba1\u6570\u3002 \u4f18\u5316\u65b9\u6848\uff1a\u81ea\u5df1\u8ba1\u6570\uff0c\u5982\u521b\u5efakey-value\u8868\u5b58\u50a8\u5728\u5185\u5b58\u6216\u786c\u76d8\uff0c\u6216\u8005\u662f\u7528redis count\u7684\u51e0\u79cd\u7528\u6cd5\uff1a \u5982\u679ccount\u51fd\u6570\u7684\u53c2\u6570\uff08count\u91cc\u9762\u5199\u7684\u90a3\u4e2a\u5b57\u6bb5\uff09\u4e0d\u662fNULL\uff08\u5b57\u6bb5\u503c\u4e0d\u4e3aNULL\uff09\uff0c\u7d2f\u8ba1\u503c\u5c31\u52a0\u4e00\uff0c\u6700\u540e\u8fd4\u56de\u7d2f\u8ba1\u503c \u7528\u6cd5\uff1acount(*)\u3001count(\u4e3b\u952e)\u3001count(\u5b57\u6bb5)\u3001count(1) count(\u4e3b\u952e)\u8ddfcount(*)\u4e00\u6837\uff0c\u56e0\u4e3a\u4e3b\u952e\u4e0d\u80fd\u4e3a\u7a7a\uff1bcount(\u5b57\u6bb5)\u53ea\u8ba1\u7b97\u5b57\u6bb5\u503c\u4e0d\u4e3aNULL\u7684\u884c\uff1bcount(1)\u5f15\u64ce\u4f1a\u4e3a\u6bcf\u884c\u6dfb\u52a0\u4e00\u4e2a1\uff0c\u7136\u540e\u5c31count\u8fd9\u4e2a1\uff0c\u8fd4\u56de\u7ed3\u679c\u4e5f\u8ddfcount(*)\u4e00\u6837\uff1bcount(null)\u8fd4\u56de0 \u5404\u79cd\u7528\u6cd5\u7684\u6027\u80fd\uff1a count(\u4e3b\u952e)\uff1aInnoDB\u5f15\u64ce\u4f1a\u904d\u5386\u6574\u5f20\u8868\uff0c\u628a\u6bcf\u884c\u7684\u4e3b\u952eid\u503c\u90fd\u53d6\u51fa\u6765\uff0c\u8fd4\u56de\u7ed9\u670d\u52a1\u5c42\uff0c\u670d\u52a1\u5c42\u62ff\u5230\u4e3b\u952e\u540e\uff0c\u76f4\u63a5\u6309\u884c\u8fdb\u884c\u7d2f\u52a0\uff08\u4e3b\u952e\u4e0d\u53ef\u80fd\u4e3a\u7a7a\uff09 count(\u5b57\u6bb5)\uff1a\u6ca1\u6709not null\u7ea6\u675f\u7684\u8bdd\uff0cInnoDB\u5f15\u64ce\u4f1a\u904d\u5386\u6574\u5f20\u8868\u628a\u6bcf\u4e00\u884c\u7684\u5b57\u6bb5\u503c\u90fd\u53d6\u51fa\u6765\uff0c\u8fd4\u56de\u7ed9\u670d\u52a1\u5c42\uff0c\u670d\u52a1\u5c42\u5224\u65ad\u662f\u5426\u4e3anull\uff0c\u4e0d\u4e3anull\uff0c\u8ba1\u6570\u7d2f\u52a0\uff1b\u6709not null\u7ea6\u675f\u7684\u8bdd\uff0cInnoDB\u5f15\u64ce\u4f1a\u904d\u5386\u6574\u5f20\u8868\u628a\u6bcf\u4e00\u884c\u7684\u5b57\u6bb5\u503c\u90fd\u53d6\u51fa\u6765\uff0c\u8fd4\u56de\u7ed9\u670d\u52a1\u5c42\uff0c\u76f4\u63a5\u6309\u884c\u8fdb\u884c\u7d2f\u52a0 count(1)\uff1aInnoDB \u5f15\u64ce\u904d\u5386\u6574\u5f20\u8868\uff0c\u4f46\u4e0d\u53d6\u503c\u3002\u670d\u52a1\u5c42\u5bf9\u4e8e\u8fd4\u56de\u7684\u6bcf\u4e00\u5c42\uff0c\u653e\u4e00\u4e2a\u6570\u5b57 1 \u8fdb\u53bb\uff0c\u76f4\u63a5\u6309\u884c\u8fdb\u884c\u7d2f\u52a0 count(*)\uff1aInnoDB \u5f15\u64ce\u5e76\u4e0d\u4f1a\u628a\u5168\u90e8\u5b57\u6bb5\u53d6\u51fa\u6765\uff0c\u800c\u662f\u4e13\u95e8\u505a\u4e86\u4f18\u5316\uff0c\u4e0d\u53d6\u503c\uff0c\u670d\u52a1\u5c42\u76f4\u63a5\u6309\u884c\u8fdb\u884c\u7d2f\u52a0 \u6309\u6548\u7387\u6392\u5e8f\uff1acount(\u5b57\u6bb5) < count(\u4e3b\u952e) < count(1) < count(*)\uff0c\u6240\u4ee5\u5c3d\u91cf\u4f7f\u7528 count(*) update\u4f18\u5316\uff08\u907f\u514d\u884c\u9501\u5347\u7ea7\u4e3a\u8868\u9501\uff09 InnoDB \u7684\u884c\u9501\u662f\u9488\u5bf9\u7d22\u5f15\u52a0\u7684\u9501\uff0c\u4e0d\u662f\u9488\u5bf9\u8bb0\u5f55\u52a0\u7684\u9501\uff0c\u5e76\u4e14\u8be5\u7d22\u5f15\u4e0d\u80fd\u5931\u6548\uff0c\u5426\u5219\u4f1a\u4ece\u884c\u9501\u5347\u7ea7\u4e3a\u8868\u9501\u3002 \u5982\u4ee5\u4e0b\u4e24\u6761\u8bed\u53e5\uff1a update student set no = '123' where id = 1; \uff0c\u8fd9\u53e5\u7531\u4e8eid\u6709\u4e3b\u952e\u7d22\u5f15\uff0c\u6240\u4ee5\u53ea\u4f1a\u9501\u8fd9\u4e00\u884c\uff1b update student set no = '123' where name = 'test'; \uff0c\u8fd9\u53e5\u7531\u4e8ename\u6ca1\u6709\u7d22\u5f15\uff0c\u6240\u4ee5\u4f1a\u628a\u6574\u5f20\u8868\u90fd\u9501\u4f4f\u8fdb\u884c\u6570\u636e\u66f4\u65b0\uff0c\u89e3\u51b3\u65b9\u6cd5\u662f\u7ed9name\u5b57\u6bb5\u6dfb\u52a0\u7d22\u5f15 \u6570\u636e\u7c7b\u578b \u6574\u578b \u7c7b\u578b\u540d\u79f0 \u53d6\u503c\u8303\u56f4 \u5927\u5c0f TINYINT -128\u301c127 1\u4e2a\u5b57\u8282 SMALLINT -32768\u301c32767 2\u4e2a\u5b87\u8282 MEDIUMINT -8388608\u301c8388607 3\u4e2a\u5b57\u8282 INT (INTEGHR) -2147483648\u301c2147483647 4\u4e2a\u5b57\u8282 BIGINT -9223372036854775808\u301c9223372036854775807 8\u4e2a\u5b57\u8282 \u65e0\u7b26\u53f7\u5728\u6570\u636e\u7c7b\u578b\u540e\u52a0 unsigned \u5173\u952e\u5b57\u3002 \u6d6e\u70b9\u578b \u7c7b\u578b\u540d\u79f0 \u8bf4\u660e \u5b58\u50a8\u9700\u6c42 FLOAT \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 4 \u4e2a\u5b57\u8282 DOUBLE \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570 8 \u4e2a\u5b57\u8282 DECIMAL (M, D)\uff0cDEC \u538b\u7f29\u7684\u201c\u4e25\u683c\u201d\u5b9a\u70b9\u6570 M+2 \u4e2a\u5b57\u8282 \u65e5\u671f\u548c\u65f6\u95f4 \u7c7b\u578b\u540d\u79f0 \u65e5\u671f\u683c\u5f0f \u65e5\u671f\u8303\u56f4 \u5b58\u50a8\u9700\u6c42 YEAR YYYY 1901 ~ 2155 1 \u4e2a\u5b57\u8282 TIME HH:MM:SS -838:59:59 ~ 838:59:59 3 \u4e2a\u5b57\u8282 DATE YYYY-MM-DD 1000-01-01 ~ 9999-12-3 3 \u4e2a\u5b57\u8282 DATETIME YYYY-MM-DD HH:MM:SS 1000-01-01 00:00:00 ~ 9999-12-31 23:59:59 8 \u4e2a\u5b57\u8282 TIMESTAMP YYYY-MM-DD HH:MM:SS 1980-01-01 00:00:01 UTC ~ 2040-01-19 03:14:07 UTC 4 \u4e2a\u5b57\u8282 \u5b57\u7b26\u4e32 \u7c7b\u578b\u540d\u79f0 \u8bf4\u660e \u5b58\u50a8\u9700\u6c42 CHAR(M) \u56fa\u5b9a\u957f\u5ea6\u975e\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 M \u5b57\u8282\uff0c1<=M<=255 VARCHAR(M) \u53d8\u957f\u975e\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 L+1\u5b57\u8282\uff0c\u5728\u6b64\uff0cL< = M\u548c 1<=M<=255 TINYTEXT \u975e\u5e38\u5c0f\u7684\u975e\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 L+1\u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^8 TEXT \u5c0f\u7684\u975e\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 L+2\u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^16 MEDIUMTEXT \u4e2d\u7b49\u5927\u5c0f\u7684\u975e\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 L+3\u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^24 LONGTEXT \u5927\u7684\u975e\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 L+4\u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^32 ENUM \u679a\u4e3e\u7c7b\u578b\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a\u679a\u4e3e\u5b57\u7b26\u4e32\u503c 1\u62162\u4e2a\u5b57\u8282\uff0c\u53d6\u51b3\u4e8e\u679a\u4e3e\u503c\u7684\u6570\u76ee (\u6700\u5927\u503c\u4e3a65535) SET \u4e00\u4e2a\u8bbe\u7f6e\uff0c\u5b57\u7b26\u4e32\u5bf9\u8c61\u53ef\u4ee5\u6709\u96f6\u4e2a\u6216 \u591a\u4e2aSET\u6210\u5458 1\u30012\u30013\u30014\u62168\u4e2a\u5b57\u8282\uff0c\u53d6\u51b3\u4e8e\u96c6\u5408 \u6210\u5458\u7684\u6570\u91cf\uff08\u6700\u591a64\u4e2a\u6210\u5458\uff09 \u4e8c\u8fdb\u5236\u7c7b\u578b \u7c7b\u578b\u540d\u79f0 \u8bf4\u660e \u5b58\u50a8\u9700\u6c42 BIT(M) \u4f4d\u5b57\u6bb5\u7c7b\u578b \u5927\u7ea6 (M+7)/8 \u5b57\u8282 BINARY(M) \u56fa\u5b9a\u957f\u5ea6\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 M \u5b57\u8282 VARBINARY (M) \u53ef\u53d8\u957f\u5ea6\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 M+1 \u5b57\u8282 TINYBLOB (M) \u975e\u5e38\u5c0f\u7684BLOB L+1 \u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^8 BLOB (M) \u5c0f BLOB L+2 \u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^16 MEDIUMBLOB (M) \u4e2d\u7b49\u5927\u5c0f\u7684BLOB L+3 \u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^24 LONGBLOB (M) \u975e\u5e38\u5927\u7684BLOB L+4 \u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^32 \u6743\u9650\u4e00\u89c8\u8868 \u5177\u4f53\u6743\u9650\u7684\u4f5c\u7528\u8be6\u89c1 \u5b98\u65b9\u6587\u6863 GRANT \u548c REVOKE \u5141\u8bb8\u7684\u9759\u6001\u6743\u9650 Privilege Grant Table Column Context ALL [PRIVILEGES] Synonym for \u201call privileges\u201d Server administration ALTER Alter_priv Tables ALTER ROUTINE Alter_routine_priv Stored routines CREATE Create_priv Databases, tables, or indexes CREATE ROLE Create_role_priv Server administration CREATE ROUTINE Create_routine_priv Stored routines CREATE TABLESPACE Create_tablespace_priv Server administration CREATE TEMPORARY TABLES Create_tmp_table_priv Tables CREATE USER Create_user_priv Server administration CREATE VIEW Create_view_priv Views DELETE Delete_priv Tables DROP Drop_priv Databases, tables, or views DROP ROLE Drop_role_priv Server administration EVENT Event_priv Databases EXECUTE Execute_priv Stored routines FILE File_priv File access on server host GRANT OPTION Grant_priv Databases, tables, or stored routines INDEX Index_priv Tables INSERT Insert_priv Tables or columns LOCK TABLES Lock_tables_priv Databases PROCESS Process_priv Server administration PROXY See proxies_priv table Server administration REFERENCES References_priv Databases or tables RELOAD Reload_priv Server administration REPLICATION CLIENT Repl_client_priv Server administration REPLICATION SLAVE Repl_slave_priv Server administration SELECT Select_priv Tables or columns SHOW DATABASES Show_db_priv Server administration SHOW VIEW Show_view_priv Views SHUTDOWN Shutdown_priv Server administration SUPER Super_priv Server administration TRIGGER Trigger_priv Tables UPDATE Update_priv Tables or columns USAGE Synonym for \u201cno privileges\u201d Server administration GRANT \u548c REVOKE \u5141\u8bb8\u7684\u52a8\u6001\u6743\u9650 Privilege Context APPLICATION_PASSWORD_ADMIN Dual password administration AUDIT_ABORT_EXEMPT Allow queries blocked by audit log filter AUDIT_ADMIN Audit log administration AUTHENTICATION_POLICY_ADMIN Authentication administration BACKUP_ADMIN Backup administration BINLOG_ADMIN Backup and Replication administration BINLOG_ENCRYPTION_ADMIN Backup and Replication administration CLONE_ADMIN Clone administration CONNECTION_ADMIN Server administration ENCRYPTION_KEY_ADMIN Server administration FIREWALL_ADMIN Firewall administration FIREWALL_EXEMPT Firewall administration FIREWALL_USER Firewall administration FLUSH_OPTIMIZER_COSTS Server administration FLUSH_STATUS Server administration FLUSH_TABLES Server administration FLUSH_USER_RESOURCES Server administration GROUP_REPLICATION_ADMIN Replication administration GROUP_REPLICATION_STREAM Replication administration INNODB_REDO_LOG_ARCHIVE Redo log archiving administration NDB_STORED_USER NDB Cluster PASSWORDLESS_USER_ADMIN Authentication administration PERSIST_RO_VARIABLES_ADMIN Server administration REPLICATION_APPLIER PRIVILEGE_CHECKS_USER for a replication channel REPLICATION_SLAVE_ADMIN Replication administration RESOURCE_GROUP_ADMIN Resource group administration RESOURCE_GROUP_USER Resource group administration ROLE_ADMIN Server administration SESSION_VARIABLES_ADMIN Server administration SET_USER_ID Server administration SHOW_ROUTINE Server administration SYSTEM_USER Server administration SYSTEM_VARIABLES_ADMIN Server administration TABLE_ENCRYPTION_ADMIN Server administration VERSION_TOKEN_ADMIN Server administration XA_RECOVER_ADMIN Server administration \u56fe\u5f62\u5316\u754c\u9762\u5de5\u5177 Workbench(\u514d\u8d39): http://dev.mysql.com/downloads/workbench/ navicat(\u6536\u8d39\uff0c\u8bd5\u7528\u724830\u5929): https://www.navicat.com/en/download/navicat-for-mysql Sequel Pro(\u5f00\u6e90\u514d\u8d39\uff0c\u4ec5\u652f\u6301Mac OS): http://www.sequelpro.com/ HeidiSQL(\u514d\u8d39): http://www.heidisql.com/ phpMyAdmin(\u514d\u8d39): https://www.phpmyadmin.net/ SQLyog: https://sqlyog.en.softonic.com/ \u5b89\u88c5 \u5c0f\u6280\u5de7 \u5728SQL\u8bed\u53e5\u4e4b\u540e\u52a0\u4e0a \\G \u4f1a\u5c06\u7ed3\u679c\u7684\u8868\u683c\u5f62\u5f0f\u8f6c\u6362\u6210\u884c\u6587\u672c\u5f62\u5f0f \u67e5\u770bMysql\u6570\u636e\u5e93\u5360\u7528\u7a7a\u95f4\uff1a SELECT table_schema \"Database Name\" , SUM(data_length + index_length) / (1024 * 1024) \"Database Size in MB\" FROM information_schema.TABLES GROUP BY table_schema; \u540e\u7eed\u5185\u5bb9 \u540e\u7eed\u5185\u5bb9\u56e0\u4e3a\u8ddf\u5f53\u524d\u5b66\u4e60\u3001\u5de5\u4f5c\u8ba1\u5212\u6709\u51b2\u7a81\uff0c\u6240\u4ee5\u540e\u7eed\u8bfe\u7a0b\u7684\u5b66\u4e60\u8ba1\u5212\u4f1a\u65e0\u9650\u671f\u63a8\u540e\u3002 \u76ee\u524d\u7684\u5de5\u4f5c\u91cd\u70b9\u653e\u5728\u91cd\u505a\u4e00\u4e2a\u5b66\u4e60\u7b14\u8bb0\u7f51\u7ad9\uff0c\u5f53\u7136\u8fd9\u662f\u8fb9\u505a\u8fb9\u5b66\u7684\uff0c\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u96be\u70b9\u548c\u77e5\u8bc6\u70b9\u6211\u4e5f\u4f1a\u8bb0\u5f55\u4e0b\u6765\u4f9b\u5927\u5bb6\u5b66\u4e60\u3002 \u5728\u6b64\u611f\u8c22B\u7ad9\u540c\u6837\u7231\u5b66\u4e60\u7684\u540c\u5b66 @\u5b88\u5fc3-\u4eba \u63d0\u4f9b\u7684\u540e\u7eed\u8bfe\u7a0b\u7b14\u8bb0\uff0c\u5927\u5bb6\u6709\u6761\u4ef6\u4e00\u5b9a\u8981\u53bb\u7ed9\u4e2astar\uff0c\u4f60\u7684\u6bcf\u4e00\u4e2astar\u548c\u70b9\u8d5e\u90fd\u662f\u6211\u4eec\u524d\u8fdb\u7684\u52a8\u529b https://github.com/Buildings-Lei/mysql_note/blob/main/README.md","title":"MySQL\u9ad8\u7ea7\u7bc7"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_1","text":"","title":"\u8fdb\u9636\u7bc7"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_2","text":"MySQL\u4f53\u7cfb\u7ed3\u6784\uff1a \u5b58\u50a8\u5f15\u64ce\u5c31\u662f\u5b58\u50a8\u6570\u636e\u3001\u5efa\u7acb\u7d22\u5f15\u3001\u66f4\u65b0/\u67e5\u8be2\u6570\u636e\u7b49\u6280\u672f\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u5b58\u50a8\u5f15\u64ce\u662f\u57fa\u4e8e\u8868\u800c\u4e0d\u662f\u57fa\u4e8e\u5e93\u7684\uff0c\u6240\u4ee5\u5b58\u50a8\u5f15\u64ce\u4e5f\u53ef\u4ee5\u88ab\u79f0\u4e3a\u8868\u5f15\u64ce\u3002 \u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce\u662fInnoDB\u3002 \u76f8\u5173\u64cd\u4f5c\uff1a -- \u67e5\u8be2\u5efa\u8868\u8bed\u53e5 show create table account; -- \u5efa\u8868\u65f6\u6307\u5b9a\u5b58\u50a8\u5f15\u64ce CREATE TABLE \u8868\u540d( ... ) ENGINE=INNODB; -- \u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93\u652f\u6301\u7684\u5b58\u50a8\u5f15\u64ce show engines;","title":"\u5b58\u50a8\u5f15\u64ce"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#innodb","text":"InnoDB \u662f\u4e00\u79cd\u517c\u987e\u9ad8\u53ef\u9760\u6027\u548c\u9ad8\u6027\u80fd\u7684\u901a\u7528\u5b58\u50a8\u5f15\u64ce\uff0c\u5728 MySQL 5.5 \u4e4b\u540e\uff0cInnoDB \u662f\u9ed8\u8ba4\u7684 MySQL \u5f15\u64ce\u3002 \u7279\u70b9\uff1a DML \u64cd\u4f5c\u9075\u5faa ACID \u6a21\u578b\uff0c\u652f\u6301 \u4e8b\u52a1 \u884c\u7ea7\u9501 \uff0c\u63d0\u9ad8\u5e76\u53d1\u8bbf\u95ee\u6027\u80fd \u652f\u6301 \u5916\u952e \u7ea6\u675f\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u5b8c\u6574\u6027\u548c\u6b63\u786e\u6027 \u6587\u4ef6\uff1a xxx.ibd: xxx\u4ee3\u8868\u8868\u540d\uff0cInnoDB \u5f15\u64ce\u7684\u6bcf\u5f20\u8868\u90fd\u4f1a\u5bf9\u5e94\u8fd9\u6837\u4e00\u4e2a\u8868\u7a7a\u95f4\u6587\u4ef6\uff0c\u5b58\u50a8\u8be5\u8868\u7684\u8868\u7ed3\u6784\uff08frm\u3001sdi\uff09\u3001\u6570\u636e\u548c\u7d22\u5f15\u3002 \u53c2\u6570\uff1ainnodb_file_per_table\uff0c\u51b3\u5b9a\u591a\u5f20\u8868\u5171\u4eab\u4e00\u4e2a\u8868\u7a7a\u95f4\u8fd8\u662f\u6bcf\u5f20\u8868\u5bf9\u5e94\u4e00\u4e2a\u8868\u7a7a\u95f4 \u77e5\u8bc6\u70b9\uff1a \u67e5\u770b Mysql \u53d8\u91cf\uff1a show variables like 'innodb_file_per_table'; \u4eceidb\u6587\u4ef6\u63d0\u53d6\u8868\u7ed3\u6784\u6570\u636e\uff1a \uff08\u5728cmd\u8fd0\u884c\uff09 ibd2sdi xxx.ibd InnoDB \u903b\u8f91\u5b58\u50a8\u7ed3\u6784\uff1a","title":"InnoDB"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#myisam","text":"MyISAM \u662f MySQL \u65e9\u671f\u7684\u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce\u3002 \u7279\u70b9\uff1a \u4e0d\u652f\u6301\u4e8b\u52a1\uff0c\u4e0d\u652f\u6301\u5916\u952e \u652f\u6301\u8868\u9501\uff0c\u4e0d\u652f\u6301\u884c\u9501 \u8bbf\u95ee\u901f\u5ea6\u5feb \u6587\u4ef6\uff1a xxx.sdi: \u5b58\u50a8\u8868\u7ed3\u6784\u4fe1\u606f xxx.MYD: \u5b58\u50a8\u6570\u636e xxx.MYI: \u5b58\u50a8\u7d22\u5f15","title":"MyISAM"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#memory","text":"Memory \u5f15\u64ce\u7684\u8868\u6570\u636e\u662f\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u7684\uff0c\u53d7\u786c\u4ef6\u95ee\u9898\u3001\u65ad\u7535\u95ee\u9898\u7684\u5f71\u54cd\uff0c\u53ea\u80fd\u5c06\u8fd9\u4e9b\u8868\u4f5c\u4e3a\u4e34\u65f6\u8868\u6216\u7f13\u5b58\u4f7f\u7528\u3002 \u7279\u70b9\uff1a \u5b58\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u901f\u5ea6\u5feb hash\u7d22\u5f15\uff08\u9ed8\u8ba4\uff09 \u6587\u4ef6\uff1a xxx.sdi: \u5b58\u50a8\u8868\u7ed3\u6784\u4fe1\u606f","title":"Memory"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_3","text":"\u7279\u70b9 InnoDB MyISAM Memory \u5b58\u50a8\u9650\u5236 64TB \u6709 \u6709 \u4e8b\u52a1\u5b89\u5168 \u652f\u6301 - - \u9501\u673a\u5236 \u884c\u9501 \u8868\u9501 \u8868\u9501 B+tree\u7d22\u5f15 \u652f\u6301 \u652f\u6301 \u652f\u6301 Hash\u7d22\u5f15 - - \u652f\u6301 \u5168\u6587\u7d22\u5f15 \u652f\u6301\uff085.6\u7248\u672c\u4e4b\u540e\uff09 \u652f\u6301 - \u7a7a\u95f4\u4f7f\u7528 \u9ad8 \u4f4e N/A \u5185\u5b58\u4f7f\u7528 \u9ad8 \u4f4e \u4e2d\u7b49 \u6279\u91cf\u63d2\u5165\u901f\u5ea6 \u4f4e \u9ad8 \u9ad8 \u652f\u6301\u5916\u952e \u652f\u6301 - -","title":"\u5b58\u50a8\u5f15\u64ce\u7279\u70b9"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_4","text":"\u5728\u9009\u62e9\u5b58\u50a8\u5f15\u64ce\u65f6\uff0c\u5e94\u8be5\u6839\u636e\u5e94\u7528\u7cfb\u7edf\u7684\u7279\u70b9\u9009\u62e9\u5408\u9002\u7684\u5b58\u50a8\u5f15\u64ce\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u5e94\u7528\u7cfb\u7edf\uff0c\u8fd8\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u591a\u79cd\u5b58\u50a8\u5f15\u64ce\u8fdb\u884c\u7ec4\u5408\u3002 InnoDB: \u5982\u679c\u5e94\u7528\u5bf9\u4e8b\u7269\u7684\u5b8c\u6574\u6027\u6709\u6bd4\u8f83\u9ad8\u7684\u8981\u6c42\uff0c\u5728\u5e76\u53d1\u6761\u4ef6\u4e0b\u8981\u6c42\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u6570\u636e\u64cd\u4f5c\u9664\u4e86\u63d2\u5165\u548c\u67e5\u8be2\u4e4b\u5916\uff0c\u8fd8\u5305\u542b\u5f88\u591a\u7684\u66f4\u65b0\u3001\u5220\u9664\u64cd\u4f5c\uff0c\u5219 InnoDB \u662f\u6bd4\u8f83\u5408\u9002\u7684\u9009\u62e9 MyISAM: \u5982\u679c\u5e94\u7528\u662f\u4ee5\u8bfb\u64cd\u4f5c\u548c\u63d2\u5165\u64cd\u4f5c\u4e3a\u4e3b\uff0c\u53ea\u6709\u5f88\u5c11\u7684\u66f4\u65b0\u548c\u5220\u9664\u64cd\u4f5c\uff0c\u5e76\u4e14\u5bf9\u4e8b\u52a1\u7684\u5b8c\u6574\u6027\u3001\u5e76\u53d1\u6027\u8981\u6c42\u4e0d\u9ad8\uff0c\u90a3\u8fd9\u4e2a\u5b58\u50a8\u5f15\u64ce\u662f\u975e\u5e38\u5408\u9002\u7684\u3002 Memory: \u5c06\u6240\u6709\u6570\u636e\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u8bbf\u95ee\u901f\u5ea6\u5feb\uff0c\u901a\u5e38\u7528\u4e8e\u4e34\u65f6\u8868\u53ca\u7f13\u5b58\u3002Memory \u7684\u7f3a\u9677\u662f\u5bf9\u8868\u7684\u5927\u5c0f\u6709\u9650\u5236\uff0c\u592a\u5927\u7684\u8868\u65e0\u6cd5\u7f13\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u800c\u4e14\u65e0\u6cd5\u4fdd\u969c\u6570\u636e\u7684\u5b89\u5168\u6027 \u7535\u5546\u4e2d\u7684\u8db3\u8ff9\u548c\u8bc4\u8bba\u9002\u5408\u4f7f\u7528 MyISAM \u5f15\u64ce\uff0c\u7f13\u5b58\u9002\u5408\u4f7f\u7528 Memory \u5f15\u64ce\u3002","title":"\u5b58\u50a8\u5f15\u64ce\u7684\u9009\u62e9"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_5","text":"","title":"\u6027\u80fd\u5206\u6790"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_6","text":"\u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93\u7684 INSERT, UPDATE, DELETE, SELECT \u8bbf\u95ee\u9891\u6b21\uff1a SHOW GLOBAL STATUS LIKE 'Com_______'; \u6216\u8005 SHOW SESSION STATUS LIKE 'Com_______'; \u4f8b\uff1a show global status like 'Com_______'","title":"\u67e5\u770b\u6267\u884c\u9891\u6b21"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_7","text":"\u6162\u67e5\u8be2\u65e5\u5fd7\u8bb0\u5f55\u4e86\u6240\u6709\u6267\u884c\u65f6\u95f4\u8d85\u8fc7\u6307\u5b9a\u53c2\u6570\uff08long_query_time\uff0c\u5355\u4f4d\uff1a\u79d2\uff0c\u9ed8\u8ba410\u79d2\uff09\u7684\u6240\u6709SQL\u8bed\u53e5\u7684\u65e5\u5fd7\u3002 MySQL\u7684\u6162\u67e5\u8be2\u65e5\u5fd7\u9ed8\u8ba4\u6ca1\u6709\u5f00\u542f\uff0c\u9700\u8981\u5728MySQL\u7684\u914d\u7f6e\u6587\u4ef6\uff08/etc/my.cnf\uff09\u4e2d\u914d\u7f6e\u5982\u4e0b\u4fe1\u606f\uff1a # \u5f00\u542f\u6162\u67e5\u8be2\u65e5\u5fd7\u5f00\u5173 slow_query_log=1 # \u8bbe\u7f6e\u6162\u67e5\u8be2\u65e5\u5fd7\u7684\u65f6\u95f4\u4e3a2\u79d2\uff0cSQL\u8bed\u53e5\u6267\u884c\u65f6\u95f4\u8d85\u8fc72\u79d2\uff0c\u5c31\u4f1a\u89c6\u4e3a\u6162\u67e5\u8be2\uff0c\u8bb0\u5f55\u6162\u67e5\u8be2\u65e5\u5fd7 long_query_time=2 \u66f4\u6539\u540e\u8bb0\u5f97\u91cd\u542fMySQL\u670d\u52a1\uff0c\u65e5\u5fd7\u6587\u4ef6\u4f4d\u7f6e\uff1a/var/lib/mysql/localhost-slow.log \u67e5\u770b\u6162\u67e5\u8be2\u65e5\u5fd7\u5f00\u5173\u72b6\u6001\uff1a show variables like 'slow_query_log';","title":"\u6162\u67e5\u8be2\u65e5\u5fd7"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#profile","text":"show profile \u80fd\u5728\u505aSQL\u4f18\u5316\u65f6\u5e2e\u6211\u4eec\u4e86\u89e3\u65f6\u95f4\u90fd\u8017\u8d39\u5728\u54ea\u91cc\u3002\u901a\u8fc7 have_profiling \u53c2\u6570\uff0c\u80fd\u770b\u5230\u5f53\u524d MySQL \u662f\u5426\u652f\u6301 profile \u64cd\u4f5c\uff1a SELECT @@have_profiling; profiling \u9ed8\u8ba4\u5173\u95ed\uff0c\u53ef\u4ee5\u901a\u8fc7set\u8bed\u53e5\u5728session/global\u7ea7\u522b\u5f00\u542f profiling\uff1a SET profiling = 1; \u67e5\u770b\u6240\u6709\u8bed\u53e5\u7684\u8017\u65f6\uff1a show profiles; \u67e5\u770b\u6307\u5b9aquery_id\u7684SQL\u8bed\u53e5\u5404\u4e2a\u9636\u6bb5\u7684\u8017\u65f6\uff1a show profile for query query_id; \u67e5\u770b\u6307\u5b9aquery_id\u7684SQL\u8bed\u53e5CPU\u7684\u4f7f\u7528\u60c5\u51b5 show profile cpu for query query_id;","title":"profile"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#explain","text":"EXPLAIN \u6216\u8005 DESC \u547d\u4ee4\u83b7\u53d6 MySQL \u5982\u4f55\u6267\u884c SELECT \u8bed\u53e5\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u5728 SELECT \u8bed\u53e5\u6267\u884c\u8fc7\u7a0b\u4e2d\u8868\u5982\u4f55\u8fde\u63a5\u548c\u8fde\u63a5\u7684\u987a\u5e8f\u3002 \u8bed\u6cd5\uff1a # \u76f4\u63a5\u5728select\u8bed\u53e5\u4e4b\u524d\u52a0\u4e0a\u5173\u952e\u5b57 explain / desc EXPLAIN SELECT \u5b57\u6bb5\u5217\u8868 FROM \u8868\u540d HWERE \u6761\u4ef6; EXPLAIN \u5404\u5b57\u6bb5\u542b\u4e49\uff1a id\uff1aselect \u67e5\u8be2\u7684\u5e8f\u5217\u53f7\uff0c\u8868\u793a\u67e5\u8be2\u4e2d\u6267\u884c select \u5b50\u53e5\u6216\u8005\u64cd\u4f5c\u8868\u7684\u987a\u5e8f\uff08id\u76f8\u540c\uff0c\u6267\u884c\u987a\u5e8f\u4ece\u4e0a\u5230\u4e0b\uff1bid\u4e0d\u540c\uff0c\u503c\u8d8a\u5927\u8d8a\u5148\u6267\u884c\uff09 select_type\uff1a\u8868\u793a SELECT \u7684\u7c7b\u578b\uff0c\u5e38\u89c1\u53d6\u503c\u6709 SIMPLE\uff08\u7b80\u5355\u8868\uff0c\u5373\u4e0d\u9002\u7528\u8868\u8fde\u63a5\u6216\u8005\u5b50\u67e5\u8be2\uff09\u3001PRIMARY\uff08\u4e3b\u67e5\u8be2\uff0c\u5373\u5916\u5c42\u7684\u67e5\u8be2\uff09\u3001UNION\uff08UNION\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u6216\u8005\u540e\u9762\u7684\u67e5\u8be2\u8bed\u53e5\uff09\u3001SUBQUERY\uff08SELECT/WHERE\u4e4b\u540e\u5305\u542b\u4e86\u5b50\u67e5\u8be2\uff09\u7b49 type\uff1a\u8868\u793a\u8fde\u63a5\u7c7b\u578b\uff0c\u6027\u80fd\u7531\u597d\u5230\u5dee\u7684\u8fde\u63a5\u7c7b\u578b\u4e3a NULL\u3001system\u3001const\u3001eq_ref\u3001ref\u3001range\u3001index\u3001all possible_key\uff1a\u53ef\u80fd\u5e94\u7528\u5728\u8fd9\u5f20\u8868\u4e0a\u7684\u7d22\u5f15\uff0c\u4e00\u4e2a\u6216\u591a\u4e2a Key\uff1a\u5b9e\u9645\u4f7f\u7528\u7684\u7d22\u5f15\uff0c\u5982\u679c\u4e3a NULL\uff0c\u5219\u6ca1\u6709\u4f7f\u7528\u7d22\u5f15 Key_len\uff1a\u8868\u793a\u7d22\u5f15\u4e2d\u4f7f\u7528\u7684\u5b57\u8282\u6570\uff0c\u8be5\u503c\u4e3a\u7d22\u5f15\u5b57\u6bb5\u6700\u5927\u53ef\u80fd\u957f\u5ea6\uff0c\u5e76\u975e\u5b9e\u9645\u4f7f\u7528\u957f\u5ea6\uff0c\u5728\u4e0d\u635f\u5931\u7cbe\u786e\u6027\u7684\u524d\u63d0\u4e0b\uff0c\u957f\u5ea6\u8d8a\u77ed\u8d8a\u597d rows\uff1aMySQL\u8ba4\u4e3a\u5fc5\u987b\u8981\u6267\u884c\u7684\u884c\u6570\uff0c\u5728InnoDB\u5f15\u64ce\u7684\u8868\u4e2d\uff0c\u662f\u4e00\u4e2a\u4f30\u8ba1\u503c\uff0c\u53ef\u80fd\u5e76\u4e0d\u603b\u662f\u51c6\u786e\u7684 filtered\uff1a\u8868\u793a\u8fd4\u56de\u7ed3\u679c\u7684\u884c\u6570\u5360\u9700\u8bfb\u53d6\u884c\u6570\u7684\u767e\u5206\u6bd4\uff0cfiltered\u7684\u503c\u8d8a\u5927\u8d8a\u597d","title":"explain"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_8","text":"\u7d22\u5f15\u662f\u5e2e\u52a9 MySQL \u9ad8\u6548\u83b7\u53d6\u6570\u636e \u7684 \u6570\u636e\u7ed3\u6784\uff08\u6709\u5e8f\uff09 \u3002\u5728\u6570\u636e\u4e4b\u5916\uff0c\u6570\u636e\u5e93\u7cfb\u7edf\u8fd8\u7ef4\u62a4\u7740\u6ee1\u8db3\u7279\u5b9a\u67e5\u627e\u7b97\u6cd5\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5f15\u7528\uff08\u6307\u5411\uff09\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u4e0a\u5b9e\u73b0\u9ad8\u7ea7\u67e5\u8be2\u7b97\u6cd5\uff0c\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u5c31\u662f\u7d22\u5f15\u3002 \u4f18\u7f3a\u70b9\uff1a \u4f18\u70b9\uff1a \u63d0\u9ad8\u6570\u636e\u68c0\u7d22\u6548\u7387\uff0c\u964d\u4f4e\u6570\u636e\u5e93\u7684IO\u6210\u672c \u901a\u8fc7\u7d22\u5f15\u5217\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u964d\u4f4e\u6570\u636e\u6392\u5e8f\u7684\u6210\u672c\uff0c\u964d\u4f4eCPU\u7684\u6d88\u8017 \u7f3a\u70b9\uff1a \u7d22\u5f15\u5217\u4e5f\u662f\u8981\u5360\u7528\u7a7a\u95f4\u7684 \u7d22\u5f15\u5927\u5927\u63d0\u9ad8\u4e86\u67e5\u8be2\u6548\u7387\uff0c\u4f46\u964d\u4f4e\u4e86\u66f4\u65b0\u7684\u901f\u5ea6\uff0c\u6bd4\u5982 INSERT\u3001UPDATE\u3001DELETE","title":"\u7d22\u5f15"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_9","text":"\u7d22\u5f15\u7ed3\u6784 \u63cf\u8ff0 B+Tree \u6700\u5e38\u89c1\u7684\u7d22\u5f15\u7c7b\u578b\uff0c\u5927\u90e8\u5206\u5f15\u64ce\u90fd\u652f\u6301B+\u6811\u7d22\u5f15 Hash \u5e95\u5c42\u6570\u636e\u7ed3\u6784\u662f\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u53ea\u6709\u7cbe\u786e\u5339\u914d\u7d22\u5f15\u5217\u7684\u67e5\u8be2\u624d\u6709\u6548\uff0c\u4e0d\u652f\u6301\u8303\u56f4\u67e5\u8be2 R-Tree(\u7a7a\u95f4\u7d22\u5f15) \u7a7a\u95f4\u7d22\u5f15\u662f MyISAM \u5f15\u64ce\u7684\u4e00\u4e2a\u7279\u6b8a\u7d22\u5f15\u7c7b\u578b\uff0c\u4e3b\u8981\u7528\u4e8e\u5730\u7406\u7a7a\u95f4\u6570\u636e\u7c7b\u578b\uff0c\u901a\u5e38\u4f7f\u7528\u8f83\u5c11 Full-Text(\u5168\u6587\u7d22\u5f15) \u662f\u4e00\u79cd\u901a\u8fc7\u5efa\u7acb\u5012\u6392\u7d22\u5f15\uff0c\u5feb\u901f\u5339\u914d\u6587\u6863\u7684\u65b9\u5f0f\uff0c\u7c7b\u4f3c\u4e8e Lucene, Solr, ES \u7d22\u5f15 InnoDB MyISAM Memory B+Tree\u7d22\u5f15 \u652f\u6301 \u652f\u6301 \u652f\u6301 Hash\u7d22\u5f15 \u4e0d\u652f\u6301 \u4e0d\u652f\u6301 \u652f\u6301 R-Tree\u7d22\u5f15 \u4e0d\u652f\u6301 \u652f\u6301 \u4e0d\u652f\u6301 Full-text 5.6\u7248\u672c\u540e\u652f\u6301 \u652f\u6301 \u4e0d\u652f\u6301","title":"\u7d22\u5f15\u7ed3\u6784"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#b-tree","text":"\u4e8c\u53c9\u6811\u7684\u7f3a\u70b9\u53ef\u4ee5\u7528\u7ea2\u9ed1\u6811\u6765\u89e3\u51b3\uff1a \u7ea2\u9ed1\u6811\u4e5f\u5b58\u5728\u5927\u6570\u636e\u91cf\u60c5\u51b5\u4e0b\uff0c\u5c42\u7ea7\u8f83\u6df1\uff0c\u68c0\u7d22\u901f\u5ea6\u6162\u7684\u95ee\u9898\u3002 \u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528 B-Tree \u7ed3\u6784\u3002 B-Tree (\u591a\u8def\u5e73\u8861\u67e5\u627e\u6811) \u4ee5\u4e00\u68f5\u6700\u5927\u5ea6\u6570\uff08max-degree\uff0c\u6307\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2a\u6570\uff09\u4e3a5\uff085\u9636\uff09\u7684 b-tree \u4e3a\u4f8b\uff08\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u5b58\u50a84\u4e2akey\uff0c5\u4e2a\u6307\u9488\uff09 B-Tree \u7684\u6570\u636e\u63d2\u5165\u8fc7\u7a0b\u52a8\u753b\u53c2\u7167\uff1ahttps://www.bilibili.com/video/BV1Kr4y1i7ru?p=68 \u6f14\u793a\u5730\u5740\uff1ahttps://www.cs.usfca.edu/~galles/visualization/BTree.html","title":"B-Tree"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#btree","text":"\u7ed3\u6784\u56fe\uff1a \u6f14\u793a\u5730\u5740\uff1ahttps://www.cs.usfca.edu/~galles/visualization/BPlusTree.html \u4e0e B-Tree \u7684\u533a\u522b\uff1a \u6240\u6709\u7684\u6570\u636e\u90fd\u4f1a\u51fa\u73b0\u5728\u53f6\u5b50\u8282\u70b9 \u53f6\u5b50\u8282\u70b9\u5f62\u6210\u4e00\u4e2a\u5355\u5411\u94fe\u8868 MySQL \u7d22\u5f15\u6570\u636e\u7ed3\u6784\u5bf9\u7ecf\u5178\u7684 B+Tree \u8fdb\u884c\u4e86\u4f18\u5316\u3002\u5728\u539f B+Tree \u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e00\u4e2a\u6307\u5411\u76f8\u90bb\u53f6\u5b50\u8282\u70b9\u7684\u94fe\u8868\u6307\u9488\uff0c\u5c31\u5f62\u6210\u4e86\u5e26\u6709\u987a\u5e8f\u6307\u9488\u7684 B+Tree\uff0c\u63d0\u9ad8\u533a\u95f4\u8bbf\u95ee\u7684\u6027\u80fd\u3002","title":"B+Tree"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#hash","text":"\u54c8\u5e0c\u7d22\u5f15\u5c31\u662f\u91c7\u7528\u4e00\u5b9a\u7684hash\u7b97\u6cd5\uff0c\u5c06\u952e\u503c\u6362\u7b97\u6210\u65b0\u7684hash\u503c\uff0c\u6620\u5c04\u5230\u5bf9\u5e94\u7684\u69fd\u4f4d\u4e0a\uff0c\u7136\u540e\u5b58\u50a8\u5728hash\u8868\u4e2d\u3002 \u5982\u679c\u4e24\u4e2a\uff08\u6216\u591a\u4e2a\uff09\u952e\u503c\uff0c\u6620\u5c04\u5230\u4e00\u4e2a\u76f8\u540c\u7684\u69fd\u4f4d\u4e0a\uff0c\u4ed6\u4eec\u5c31\u4ea7\u751f\u4e86hash\u51b2\u7a81\uff08\u4e5f\u79f0\u4e3ahash\u78b0\u649e\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u94fe\u8868\u6765\u89e3\u51b3\u3002 \u7279\u70b9\uff1a Hash\u7d22\u5f15\u53ea\u80fd\u7528\u4e8e\u5bf9\u7b49\u6bd4\u8f83\uff08=\u3001in\uff09\uff0c\u4e0d\u652f\u6301\u8303\u56f4\u67e5\u8be2\uff08betwwn\u3001>\u3001<\u3001...\uff09 \u65e0\u6cd5\u5229\u7528\u7d22\u5f15\u5b8c\u6210\u6392\u5e8f\u64cd\u4f5c \u67e5\u8be2\u6548\u7387\u9ad8\uff0c\u901a\u5e38\u53ea\u9700\u8981\u4e00\u6b21\u68c0\u7d22\u5c31\u53ef\u4ee5\u4e86\uff0c\u6548\u7387\u901a\u5e38\u8981\u9ad8\u4e8e B+Tree \u7d22\u5f15 \u5b58\u50a8\u5f15\u64ce\u652f\u6301\uff1a Memory InnoDB: \u5177\u6709\u81ea\u9002\u5e94hash\u529f\u80fd\uff0chash\u7d22\u5f15\u662f\u5b58\u50a8\u5f15\u64ce\u6839\u636e B+Tree \u7d22\u5f15\u5728\u6307\u5b9a\u6761\u4ef6\u4e0b\u81ea\u52a8\u6784\u5efa\u7684","title":"Hash"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_10","text":"\u4e3a\u4ec0\u4e48 InnoDB \u5b58\u50a8\u5f15\u64ce\u9009\u62e9\u4f7f\u7528 B+Tree \u7d22\u5f15\u7ed3\u6784\uff1f \u76f8\u5bf9\u4e8e\u4e8c\u53c9\u6811\uff0c\u5c42\u7ea7\u66f4\u5c11\uff0c\u641c\u7d22\u6548\u7387\u9ad8 \u5bf9\u4e8e B-Tree\uff0c\u65e0\u8bba\u662f\u53f6\u5b50\u8282\u70b9\u8fd8\u662f\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u90fd\u4f1a\u4fdd\u5b58\u6570\u636e\uff0c\u8fd9\u6837\u5bfc\u81f4\u4e00\u9875\u4e2d\u5b58\u50a8\u7684\u952e\u503c\u51cf\u5c11\uff0c\u6307\u9488\u4e5f\u8ddf\u7740\u51cf\u5c11\uff0c\u8981\u540c\u6837\u4fdd\u5b58\u5927\u91cf\u6570\u636e\uff0c\u53ea\u80fd\u589e\u52a0\u6811\u7684\u9ad8\u5ea6\uff0c\u5bfc\u81f4\u6027\u80fd\u964d\u4f4e \u76f8\u5bf9\u4e8e Hash \u7d22\u5f15\uff0cB+Tree \u652f\u6301\u8303\u56f4\u5339\u914d\u53ca\u6392\u5e8f\u64cd\u4f5c","title":"\u9762\u8bd5\u9898"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_11","text":"\u5206\u7c7b \u542b\u4e49 \u7279\u70b9 \u5173\u952e\u5b57 \u4e3b\u952e\u7d22\u5f15 \u9488\u5bf9\u4e8e\u8868\u4e2d\u4e3b\u952e\u521b\u5efa\u7684\u7d22\u5f15 \u9ed8\u8ba4\u81ea\u52a8\u521b\u5efa\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a PRIMARY \u552f\u4e00\u7d22\u5f15 \u907f\u514d\u540c\u4e00\u4e2a\u8868\u4e2d\u67d0\u6570\u636e\u5217\u4e2d\u7684\u503c\u91cd\u590d \u53ef\u4ee5\u6709\u591a\u4e2a UNIQUE \u5e38\u89c4\u7d22\u5f15 \u5feb\u901f\u5b9a\u4f4d\u7279\u5b9a\u6570\u636e \u53ef\u4ee5\u6709\u591a\u4e2a \u5168\u6587\u7d22\u5f15 \u5168\u6587\u7d22\u5f15\u67e5\u627e\u7684\u662f\u6587\u672c\u4e2d\u7684\u5173\u952e\u8bcd\uff0c\u800c\u4e0d\u662f\u6bd4\u8f83\u7d22\u5f15\u4e2d\u7684\u503c \u53ef\u4ee5\u6709\u591a\u4e2a FULLTEXT \u5728 InnoDB \u5b58\u50a8\u5f15\u64ce\u4e2d\uff0c\u6839\u636e\u7d22\u5f15\u7684\u5b58\u50a8\u5f62\u5f0f\uff0c\u53c8\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\uff1a \u5206\u7c7b \u542b\u4e49 \u7279\u70b9 \u805a\u96c6\u7d22\u5f15(Clustered Index) \u5c06\u6570\u636e\u5b58\u50a8\u4e0e\u7d22\u5f15\u653e\u4e00\u5757\uff0c\u7d22\u5f15\u7ed3\u6784\u7684\u53f6\u5b50\u8282\u70b9\u4fdd\u5b58\u4e86\u884c\u6570\u636e \u5fc5\u987b\u6709\uff0c\u800c\u4e14\u53ea\u6709\u4e00\u4e2a \u4e8c\u7ea7\u7d22\u5f15(Secondary Index) \u5c06\u6570\u636e\u4e0e\u7d22\u5f15\u5206\u5f00\u5b58\u50a8\uff0c\u7d22\u5f15\u7ed3\u6784\u7684\u53f6\u5b50\u8282\u70b9\u5173\u8054\u7684\u662f\u5bf9\u5e94\u7684\u4e3b\u952e \u53ef\u4ee5\u5b58\u5728\u591a\u4e2a \u6f14\u793a\u56fe\uff1a \u805a\u96c6\u7d22\u5f15\u9009\u53d6\u89c4\u5219\uff1a \u5982\u679c\u5b58\u5728\u4e3b\u952e\uff0c\u4e3b\u952e\u7d22\u5f15\u5c31\u662f\u805a\u96c6\u7d22\u5f15 \u5982\u679c\u4e0d\u5b58\u5728\u4e3b\u952e\uff0c\u5c06\u4f7f\u7528\u7b2c\u4e00\u4e2a\u552f\u4e00(UNIQUE)\u7d22\u5f15\u4f5c\u4e3a\u805a\u96c6\u7d22\u5f15 \u5982\u679c\u8868\u6ca1\u6709\u4e3b\u952e\u6216\u6ca1\u6709\u5408\u9002\u7684\u552f\u4e00\u7d22\u5f15\uff0c\u5219 InnoDB \u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a rowid \u4f5c\u4e3a\u9690\u85cf\u7684\u805a\u96c6\u7d22\u5f15","title":"\u7d22\u5f15\u5206\u7c7b"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_12","text":"1. \u4ee5\u4e0b SQL \u8bed\u53e5\uff0c\u54ea\u4e2a\u6267\u884c\u6548\u7387\u9ad8\uff1f\u4e3a\u4ec0\u4e48\uff1f select * from user where id = 10; select * from user where name = 'Arm'; -- \u5907\u6ce8\uff1aid\u4e3a\u4e3b\u952e\uff0cname\u5b57\u6bb5\u521b\u5efa\u7684\u6709\u7d22\u5f15 \u7b54\uff1a\u7b2c\u4e00\u6761\u8bed\u53e5\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u6761\u9700\u8981\u56de\u8868\u67e5\u8be2\uff0c\u76f8\u5f53\u4e8e\u4e24\u4e2a\u6b65\u9aa4\u3002 2. InnoDB \u4e3b\u952e\u7d22\u5f15\u7684 B+Tree \u9ad8\u5ea6\u4e3a\u591a\u5c11\uff1f \u7b54\uff1a\u5047\u8bbe\u4e00\u884c\u6570\u636e\u5927\u5c0f\u4e3a1k\uff0c\u4e00\u9875\u4e2d\u53ef\u4ee5\u5b58\u50a816\u884c\u8fd9\u6837\u7684\u6570\u636e\u3002InnoDB \u7684\u6307\u9488\u5360\u75286\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0c\u4e3b\u952e\u5047\u8bbe\u4e3abigint\uff0c\u5360\u7528\u5b57\u8282\u6570\u4e3a8. \u53ef\u5f97\u516c\u5f0f\uff1a n * 8 + (n + 1) * 6 = 16 * 1024 \uff0c\u5176\u4e2d 8 \u8868\u793a bigint \u5360\u7528\u7684\u5b57\u8282\u6570\uff0cn \u8868\u793a\u5f53\u524d\u8282\u70b9\u5b58\u50a8\u7684key\u7684\u6570\u91cf\uff0c(n + 1) \u8868\u793a\u6307\u9488\u6570\u91cf\uff08\u6bd4key\u591a\u4e00\u4e2a\uff09\u3002\u7b97\u51fan\u7ea6\u4e3a1170\u3002 \u5982\u679c\u6811\u7684\u9ad8\u5ea6\u4e3a2\uff0c\u90a3\u4e48\u4ed6\u80fd\u5b58\u50a8\u7684\u6570\u636e\u91cf\u5927\u6982\u4e3a\uff1a 1171 * 16 = 18736 \uff1b \u5982\u679c\u6811\u7684\u9ad8\u5ea6\u4e3a3\uff0c\u90a3\u4e48\u4ed6\u80fd\u5b58\u50a8\u7684\u6570\u636e\u91cf\u5927\u6982\u4e3a\uff1a 1171 * 1171 * 16 = 21939856 \u3002 \u53e6\u5916\uff0c\u5982\u679c\u6709\u6210\u5343\u4e0a\u4e07\u7684\u6570\u636e\uff0c\u90a3\u4e48\u5c31\u8981\u8003\u8651\u5206\u8868\uff0c\u6d89\u53ca\u8fd0\u7ef4\u7bc7\u77e5\u8bc6\u3002","title":"\u601d\u8003\u9898"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_13","text":"\u521b\u5efa\u7d22\u5f15\uff1a CREATE [ UNIQUE | FULLTEXT ] INDEX index_name ON table_name (index_col_name, ...); \u5982\u679c\u4e0d\u52a0 CREATE \u540e\u9762\u4e0d\u52a0\u7d22\u5f15\u7c7b\u578b\u53c2\u6570\uff0c\u5219\u521b\u5efa\u7684\u662f\u5e38\u89c4\u7d22\u5f15 \u67e5\u770b\u7d22\u5f15\uff1a SHOW INDEX FROM table_name; \u5220\u9664\u7d22\u5f15\uff1a DROP INDEX index_name ON table_name; \u6848\u4f8b\uff1a -- name\u5b57\u6bb5\u4e3a\u59d3\u540d\u5b57\u6bb5\uff0c\u8be5\u5b57\u6bb5\u7684\u503c\u53ef\u80fd\u4f1a\u91cd\u590d\uff0c\u4e3a\u8be5\u5b57\u6bb5\u521b\u5efa\u7d22\u5f15 create index idx_user_name on tb_user(name); -- phone\u624b\u673a\u53f7\u5b57\u6bb5\u7684\u503c\u975e\u7a7a\uff0c\u4e14\u552f\u4e00\uff0c\u4e3a\u8be5\u5b57\u6bb5\u521b\u5efa\u552f\u4e00\u7d22\u5f15 create unique index idx_user_phone on tb_user (phone); -- \u4e3aprofession, age, status\u521b\u5efa\u8054\u5408\u7d22\u5f15 create index idx_user_pro_age_stat on tb_user(profession, age, status); -- \u4e3aemail\u5efa\u7acb\u5408\u9002\u7684\u7d22\u5f15\u6765\u63d0\u5347\u67e5\u8be2\u6548\u7387 create index idx_user_email on tb_user(email); -- \u5220\u9664\u7d22\u5f15 drop index idx_user_email on tb_user;","title":"\u8bed\u6cd5"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_14","text":"","title":"\u4f7f\u7528\u89c4\u5219"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_15","text":"\u5982\u679c\u7d22\u5f15\u5173\u8054\u4e86\u591a\u5217\uff08\u8054\u5408\u7d22\u5f15\uff09\uff0c\u8981\u9075\u5b88\u6700\u5de6\u524d\u7f00\u6cd5\u5219\uff0c\u6700\u5de6\u524d\u7f00\u6cd5\u5219\u6307\u7684\u662f\u67e5\u8be2\u4ece\u7d22\u5f15\u7684\u6700\u5de6\u5217\u5f00\u59cb\uff0c\u5e76\u4e14\u4e0d\u8df3\u8fc7\u7d22\u5f15\u4e2d\u7684\u5217\u3002 \u5982\u679c\u8df3\u8dc3\u67d0\u4e00\u5217\uff0c\u7d22\u5f15\u5c06\u90e8\u5206\u5931\u6548\uff08\u540e\u9762\u7684\u5b57\u6bb5\u7d22\u5f15\u5931\u6548\uff09\u3002 \u8054\u5408\u7d22\u5f15\u4e2d\uff0c\u51fa\u73b0\u8303\u56f4\u67e5\u8be2\uff08<, >\uff09\uff0c\u8303\u56f4\u67e5\u8be2\u53f3\u4fa7\u7684\u5217\u7d22\u5f15\u5931\u6548\u3002\u53ef\u4ee5\u7528>=\u6216\u8005<=\u6765\u89c4\u907f\u7d22\u5f15\u5931\u6548\u95ee\u9898\u3002","title":"\u6700\u5de6\u524d\u7f00\u6cd5\u5219"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_16","text":"\u5728\u7d22\u5f15\u5217\u4e0a\u8fdb\u884c\u8fd0\u7b97\u64cd\u4f5c\uff0c\u7d22\u5f15\u5c06\u5931\u6548\u3002\u5982\uff1a explain select * from tb_user where substring(phone, 10, 2) = '15'; \u5b57\u7b26\u4e32\u7c7b\u578b\u5b57\u6bb5\u4f7f\u7528\u65f6\uff0c\u4e0d\u52a0\u5f15\u53f7\uff0c\u7d22\u5f15\u5c06\u5931\u6548\u3002\u5982\uff1a explain select * from tb_user where phone = 17799990015; \uff0c\u6b64\u5904phone\u7684\u503c\u6ca1\u6709\u52a0\u5f15\u53f7 \u6a21\u7cca\u67e5\u8be2\u4e2d\uff0c\u5982\u679c\u4ec5\u4ec5\u662f\u5c3e\u90e8\u6a21\u7cca\u5339\u914d\uff0c\u7d22\u5f15\u4e0d\u4f1a\u662f\u5931\u6548\uff1b\u5982\u679c\u662f\u5934\u90e8\u6a21\u7cca\u5339\u914d\uff0c\u7d22\u5f15\u5931\u6548\u3002\u5982\uff1a explain select * from tb_user where profession like '%\u5de5\u7a0b'; \uff0c\u524d\u540e\u90fd\u6709 % \u4e5f\u4f1a\u5931\u6548\u3002 \u7528 or \u5206\u5272\u5f00\u7684\u6761\u4ef6\uff0c\u5982\u679c or \u5176\u4e2d\u4e00\u4e2a\u6761\u4ef6\u7684\u5217\u6ca1\u6709\u7d22\u5f15\uff0c\u90a3\u4e48\u6d89\u53ca\u7684\u7d22\u5f15\u90fd\u4e0d\u4f1a\u88ab\u7528\u5230\u3002 \u5982\u679c MySQL \u8bc4\u4f30\u4f7f\u7528\u7d22\u5f15\u6bd4\u5168\u8868\u66f4\u6162\uff0c\u5219\u4e0d\u4f7f\u7528\u7d22\u5f15\u3002","title":"\u7d22\u5f15\u5931\u6548\u60c5\u51b5"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#sql","text":"\u662f\u4f18\u5316\u6570\u636e\u5e93\u7684\u4e00\u4e2a\u91cd\u8981\u624b\u6bb5\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5728SQL\u8bed\u53e5\u4e2d\u52a0\u5165\u4e00\u4e9b\u4eba\u4e3a\u7684\u63d0\u793a\u6765\u8fbe\u5230\u4f18\u5316\u64cd\u4f5c\u7684\u76ee\u7684\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528\u7d22\u5f15\uff1a explain select * from tb_user use index(idx_user_pro) where profession=\"\u8f6f\u4ef6\u5de5\u7a0b\"; \u4e0d\u4f7f\u7528\u54ea\u4e2a\u7d22\u5f15\uff1a explain select * from tb_user ignore index(idx_user_pro) where profession=\"\u8f6f\u4ef6\u5de5\u7a0b\"; \u5fc5\u987b\u4f7f\u7528\u54ea\u4e2a\u7d22\u5f15\uff1a explain select * from tb_user force index(idx_user_pro) where profession=\"\u8f6f\u4ef6\u5de5\u7a0b\"; use \u662f\u5efa\u8bae\uff0c\u5b9e\u9645\u4f7f\u7528\u54ea\u4e2a\u7d22\u5f15 MySQL \u8fd8\u4f1a\u81ea\u5df1\u6743\u8861\u8fd0\u884c\u901f\u5ea6\u53bb\u66f4\u6539\uff0cforce\u5c31\u662f\u65e0\u8bba\u5982\u4f55\u90fd\u5f3a\u5236\u4f7f\u7528\u8be5\u7d22\u5f15\u3002","title":"SQL \u63d0\u793a"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_17","text":"\u5c3d\u91cf\u4f7f\u7528\u8986\u76d6\u7d22\u5f15\uff08\u67e5\u8be2\u4f7f\u7528\u4e86\u7d22\u5f15\uff0c\u5e76\u4e14\u9700\u8981\u8fd4\u56de\u7684\u5217\uff0c\u5728\u8be5\u7d22\u5f15\u4e2d\u5df2\u7ecf\u5168\u90e8\u80fd\u627e\u5230\uff09\uff0c\u51cf\u5c11 select *\u3002 explain \u4e2d extra \u5b57\u6bb5\u542b\u4e49\uff1a using index condition \uff1a\u67e5\u627e\u4f7f\u7528\u4e86\u7d22\u5f15\uff0c\u4f46\u662f\u9700\u8981\u56de\u8868\u67e5\u8be2\u6570\u636e using where; using index; \uff1a\u67e5\u627e\u4f7f\u7528\u4e86\u7d22\u5f15\uff0c\u4f46\u662f\u9700\u8981\u7684\u6570\u636e\u90fd\u5728\u7d22\u5f15\u5217\u4e2d\u80fd\u627e\u5230\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u56de\u8868\u67e5\u8be2 \u5982\u679c\u5728\u805a\u96c6\u7d22\u5f15\u4e2d\u76f4\u63a5\u80fd\u627e\u5230\u5bf9\u5e94\u7684\u884c\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u884c\u6570\u636e\uff0c\u53ea\u9700\u8981\u4e00\u6b21\u67e5\u8be2\uff0c\u54ea\u6015\u662fselect *\uff1b\u5982\u679c\u5728\u8f85\u52a9\u7d22\u5f15\u4e2d\u627e\u805a\u96c6\u7d22\u5f15\uff0c\u5982 select id, name from xxx where name='xxx'; \uff0c\u4e5f\u53ea\u9700\u8981\u901a\u8fc7\u8f85\u52a9\u7d22\u5f15(name)\u67e5\u627e\u5230\u5bf9\u5e94\u7684id\uff0c\u8fd4\u56dename\u548cname\u7d22\u5f15\u5bf9\u5e94\u7684id\u5373\u53ef\uff0c\u53ea\u9700\u8981\u4e00\u6b21\u67e5\u8be2\uff1b\u5982\u679c\u662f\u901a\u8fc7\u8f85\u52a9\u7d22\u5f15\u67e5\u627e\u5176\u4ed6\u5b57\u6bb5\uff0c\u5219\u9700\u8981\u56de\u8868\u67e5\u8be2\uff0c\u5982 select id, name, gender from xxx where name='xxx'; \u6240\u4ee5\u5c3d\u91cf\u4e0d\u8981\u7528 select * \uff0c\u5bb9\u6613\u51fa\u73b0\u56de\u8868\u67e5\u8be2\uff0c\u964d\u4f4e\u6548\u7387\uff0c\u9664\u975e\u6709\u8054\u5408\u7d22\u5f15\u5305\u542b\u4e86\u6240\u6709\u5b57\u6bb5 \u9762\u8bd5\u9898\uff1a\u4e00\u5f20\u8868\uff0c\u6709\u56db\u4e2a\u5b57\u6bb5\uff08id, username, password, status\uff09\uff0c\u7531\u4e8e\u6570\u636e\u91cf\u5927\uff0c\u9700\u8981\u5bf9\u4ee5\u4e0bSQL\u8bed\u53e5\u8fdb\u884c\u4f18\u5316\uff0c\u8be5\u5982\u4f55\u8fdb\u884c\u624d\u662f\u6700\u4f18\u65b9\u6848\uff1a select id, username, password from tb_user where username='itcast'; \u89e3\uff1a\u7ed9username\u548cpassword\u5b57\u6bb5\u5efa\u7acb\u8054\u5408\u7d22\u5f15\uff0c\u5219\u4e0d\u9700\u8981\u56de\u8868\u67e5\u8be2\uff0c\u76f4\u63a5\u8986\u76d6\u7d22\u5f15","title":"\u8986\u76d6\u7d22\u5f15&amp;\u56de\u8868\u67e5\u8be2"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_18","text":"\u5f53\u5b57\u6bb5\u7c7b\u578b\u4e3a\u5b57\u7b26\u4e32\uff08varchar, text\u7b49\uff09\u65f6\uff0c\u6709\u65f6\u5019\u9700\u8981\u7d22\u5f15\u5f88\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u8fd9\u4f1a\u8ba9\u7d22\u5f15\u53d8\u5f97\u5f88\u5927\uff0c\u67e5\u8be2\u65f6\uff0c\u6d6a\u8d39\u5927\u91cf\u7684\u78c1\u76d8IO\uff0c\u5f71\u54cd\u67e5\u8be2\u6548\u7387\uff0c\u6b64\u65f6\u53ef\u4ee5\u53ea\u964d\u5b57\u7b26\u4e32\u7684\u4e00\u90e8\u5206\u524d\u7f00\uff0c\u5efa\u7acb\u7d22\u5f15\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u8282\u7ea6\u7d22\u5f15\u7a7a\u95f4\uff0c\u4ece\u800c\u63d0\u9ad8\u7d22\u5f15\u6548\u7387\u3002 \u8bed\u6cd5\uff1a create index idx_xxxx on table_name(columnn(n)); \u524d\u7f00\u957f\u5ea6\uff1a\u53ef\u4ee5\u6839\u636e\u7d22\u5f15\u7684\u9009\u62e9\u6027\u6765\u51b3\u5b9a\uff0c\u800c\u9009\u62e9\u6027\u662f\u6307\u4e0d\u91cd\u590d\u7684\u7d22\u5f15\u503c\uff08\u57fa\u6570\uff09\u548c\u6570\u636e\u8868\u7684\u8bb0\u5f55\u603b\u6570\u7684\u6bd4\u503c\uff0c\u7d22\u5f15\u9009\u62e9\u6027\u8d8a\u9ad8\u5219\u67e5\u8be2\u6548\u7387\u8d8a\u9ad8\uff0c\u552f\u4e00\u7d22\u5f15\u7684\u9009\u62e9\u6027\u662f1\uff0c\u8fd9\u662f\u6700\u597d\u7684\u7d22\u5f15\u9009\u62e9\u6027\uff0c\u6027\u80fd\u4e5f\u662f\u6700\u597d\u7684\u3002 \u6c42\u9009\u62e9\u6027\u516c\u5f0f\uff1a select count(distinct email) / count(*) from tb_user; select count(distinct substring(email, 1, 5)) / count(*) from tb_user; show index \u91cc\u9762\u7684sub_part\u53ef\u4ee5\u770b\u5230\u63a5\u53d6\u7684\u957f\u5ea6","title":"\u524d\u7f00\u7d22\u5f15"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_19","text":"\u5355\u5217\u7d22\u5f15\uff1a\u5373\u4e00\u4e2a\u7d22\u5f15\u53ea\u5305\u542b\u5355\u4e2a\u5217 \u8054\u5408\u7d22\u5f15\uff1a\u5373\u4e00\u4e2a\u7d22\u5f15\u5305\u542b\u4e86\u591a\u4e2a\u5217 \u5728\u4e1a\u52a1\u573a\u666f\u4e2d\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2a\u67e5\u8be2\u6761\u4ef6\uff0c\u8003\u8651\u9488\u5bf9\u4e8e\u67e5\u8be2\u5b57\u6bb5\u5efa\u7acb\u7d22\u5f15\u65f6\uff0c\u5efa\u8bae\u5efa\u7acb\u8054\u5408\u7d22\u5f15\uff0c\u800c\u975e\u5355\u5217\u7d22\u5f15\u3002 \u5355\u5217\u7d22\u5f15\u60c5\u51b5\uff1a explain select id, phone, name from tb_user where phone = '17799990010' and name = '\u97e9\u4fe1'; \u8fd9\u53e5\u53ea\u4f1a\u7528\u5230phone\u7d22\u5f15\u5b57\u6bb5","title":"\u5355\u5217\u7d22\u5f15&amp;\u8054\u5408\u7d22\u5f15"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_20","text":"\u591a\u6761\u4ef6\u8054\u5408\u67e5\u8be2\u65f6\uff0cMySQL\u4f18\u5316\u5668\u4f1a\u8bc4\u4f30\u54ea\u4e2a\u5b57\u6bb5\u7684\u7d22\u5f15\u6548\u7387\u66f4\u9ad8\uff0c\u4f1a\u9009\u62e9\u8be5\u7d22\u5f15\u5b8c\u6210\u672c\u6b21\u67e5\u8be2","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_21","text":"\u9488\u5bf9\u4e8e\u6570\u636e\u91cf\u8f83\u5927\uff0c\u4e14\u67e5\u8be2\u6bd4\u8f83\u9891\u7e41\u7684\u8868\u5efa\u7acb\u7d22\u5f15 \u9488\u5bf9\u4e8e\u5e38\u4f5c\u4e3a\u67e5\u8be2\u6761\u4ef6\uff08where\uff09\u3001\u6392\u5e8f\uff08order by\uff09\u3001\u5206\u7ec4\uff08group by\uff09\u64cd\u4f5c\u7684\u5b57\u6bb5\u5efa\u7acb\u7d22\u5f15 \u5c3d\u91cf\u9009\u62e9\u533a\u5206\u5ea6\u9ad8\u7684\u5217\u4f5c\u4e3a\u7d22\u5f15\uff0c\u5c3d\u91cf\u5efa\u7acb\u552f\u4e00\u7d22\u5f15\uff0c\u533a\u5206\u5ea6\u8d8a\u9ad8\uff0c\u4f7f\u7528\u7d22\u5f15\u7684\u6548\u7387\u8d8a\u9ad8 \u5982\u679c\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5b57\u6bb5\uff0c\u5b57\u6bb5\u957f\u5ea6\u8f83\u957f\uff0c\u53ef\u4ee5\u9488\u5bf9\u4e8e\u5b57\u6bb5\u7684\u7279\u70b9\uff0c\u5efa\u7acb\u524d\u7f00\u7d22\u5f15 \u5c3d\u91cf\u4f7f\u7528\u8054\u5408\u7d22\u5f15\uff0c\u51cf\u5c11\u5355\u5217\u7d22\u5f15\uff0c\u67e5\u8be2\u65f6\uff0c\u8054\u5408\u7d22\u5f15\u5f88\u591a\u65f6\u5019\u53ef\u4ee5\u8986\u76d6\u7d22\u5f15\uff0c\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\uff0c\u907f\u514d\u56de\u8868\uff0c\u63d0\u9ad8\u67e5\u8be2\u6548\u7387 \u8981\u63a7\u5236\u7d22\u5f15\u7684\u6570\u91cf\uff0c\u7d22\u5f15\u5e76\u4e0d\u662f\u591a\u591a\u76ca\u5584\uff0c\u7d22\u5f15\u8d8a\u591a\uff0c\u7ef4\u62a4\u7d22\u5f15\u7ed3\u6784\u7684\u4ee3\u4ef7\u5c31\u8d8a\u5927\uff0c\u4f1a\u5f71\u54cd\u589e\u5220\u6539\u7684\u6548\u7387 \u5982\u679c\u7d22\u5f15\u5217\u4e0d\u80fd\u5b58\u50a8NULL\u503c\uff0c\u8bf7\u5728\u521b\u5efa\u8868\u65f6\u4f7f\u7528NOT NULL\u7ea6\u675f\u5b83\u3002\u5f53\u4f18\u5316\u5668\u77e5\u9053\u6bcf\u5217\u662f\u5426\u5305\u542bNULL\u503c\u65f6\uff0c\u5b83\u53ef\u4ee5\u66f4\u597d\u5730\u786e\u5b9a\u54ea\u4e2a\u7d22\u5f15\u6700\u6709\u6548\u5730\u7528\u4e8e\u67e5\u8be2","title":"\u8bbe\u8ba1\u539f\u5219"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#sql_1","text":"","title":"SQL \u4f18\u5316"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_22","text":"\u666e\u901a\u63d2\u5165\uff1a \u91c7\u7528\u6279\u91cf\u63d2\u5165\uff08\u4e00\u6b21\u63d2\u5165\u7684\u6570\u636e\u4e0d\u5efa\u8bae\u8d85\u8fc71000\u6761\uff09 \u624b\u52a8\u63d0\u4ea4\u4e8b\u52a1 \u4e3b\u952e\u987a\u5e8f\u63d2\u5165 \u5927\u6279\u91cf\u63d2\u5165\uff1a \u5982\u679c\u4e00\u6b21\u6027\u9700\u8981\u63d2\u5165\u5927\u6279\u91cf\u6570\u636e\uff0c\u4f7f\u7528insert\u8bed\u53e5\u63d2\u5165\u6027\u80fd\u8f83\u4f4e\uff0c\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528MySQL\u6570\u636e\u5e93\u63d0\u4f9b\u7684load\u6307\u4ee4\u63d2\u5165\u3002 # \u5ba2\u6237\u7aef\u8fde\u63a5\u670d\u52a1\u7aef\u65f6\uff0c\u52a0\u4e0a\u53c2\u6570 --local-infile\uff08\u8fd9\u4e00\u884c\u5728bash/cmd\u754c\u9762\u8f93\u5165\uff09 mysql --local-infile -u root -p # \u8bbe\u7f6e\u5168\u5c40\u53c2\u6570local_infile\u4e3a1\uff0c\u5f00\u542f\u4ece\u672c\u5730\u52a0\u8f7d\u6587\u4ef6\u5bfc\u5165\u6570\u636e\u7684\u5f00\u5173 set global local_infile = 1; select @@local_infile; # \u6267\u884cload\u6307\u4ee4\u5c06\u51c6\u5907\u597d\u7684\u6570\u636e\uff0c\u52a0\u8f7d\u5230\u8868\u7ed3\u6784\u4e2d load data local infile '/root/sql1.log' into table 'tb_user' fields terminated by ',' lines terminated by '\\n';","title":"\u63d2\u5165\u6570\u636e"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_23","text":"\u6570\u636e\u7ec4\u7ec7\u65b9\u5f0f\uff1a\u5728InnoDB\u5b58\u50a8\u5f15\u64ce\u4e2d\uff0c\u8868\u6570\u636e\u90fd\u662f\u6839\u636e\u4e3b\u952e\u987a\u5e8f\u7ec4\u7ec7\u5b58\u653e\u7684\uff0c\u8fd9\u79cd\u5b58\u50a8\u65b9\u5f0f\u7684\u8868\u79f0\u4e3a\u7d22\u5f15\u7ec4\u7ec7\u8868\uff08Index organized table, IOT\uff09 \u9875\u5206\u88c2\uff1a\u9875\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u4e5f\u53ef\u4ee5\u586b\u5145\u4e00\u822c\uff0c\u4e5f\u53ef\u4ee5\u586b\u5145100%\uff0c\u6bcf\u4e2a\u9875\u5305\u542b\u4e862-N\u884c\u6570\u636e\uff08\u5982\u679c\u4e00\u884c\u6570\u636e\u8fc7\u5927\uff0c\u4f1a\u884c\u6ea2\u51fa\uff09\uff0c\u6839\u636e\u4e3b\u952e\u6392\u5217\u3002 \u9875\u5408\u5e76\uff1a\u5f53\u5220\u9664\u4e00\u884c\u8bb0\u5f55\u65f6\uff0c\u5b9e\u9645\u4e0a\u8bb0\u5f55\u5e76\u6ca1\u6709\u88ab\u7269\u7406\u5220\u9664\uff0c\u53ea\u662f\u8bb0\u5f55\u88ab\u6807\u8bb0\uff08flaged\uff09\u4e3a\u5220\u9664\u5e76\u4e14\u5b83\u7684\u7a7a\u95f4\u53d8\u5f97\u5141\u8bb8\u88ab\u5176\u4ed6\u8bb0\u5f55\u58f0\u660e\u4f7f\u7528\u3002\u5f53\u9875\u4e2d\u5220\u9664\u7684\u8bb0\u5f55\u5230\u8fbe MERGE_THRESHOLD\uff08\u9ed8\u8ba4\u4e3a\u9875\u768450%\uff09\uff0cInnoDB\u4f1a\u5f00\u59cb\u5bfb\u627e\u6700\u9760\u8fd1\u7684\u9875\uff08\u524d\u540e\uff09\u770b\u770b\u662f\u5426\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u9875\u5408\u5e76\u4ee5\u4f18\u5316\u7a7a\u95f4\u4f7f\u7528\u3002 MERGE_THRESHOLD\uff1a\u5408\u5e76\u9875\u7684\u9608\u503c\uff0c\u53ef\u4ee5\u81ea\u5df1\u8bbe\u7f6e\uff0c\u5728\u521b\u5efa\u8868\u6216\u521b\u5efa\u7d22\u5f15\u65f6\u6307\u5b9a \u6587\u5b57\u8bf4\u660e\u4e0d\u591f\u6e05\u6670\u660e\u4e86\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u89c6\u9891\u91cc\u7684PPT\u6f14\u793a\u8fc7\u7a0b\uff1ahttps://www.bilibili.com/video/BV1Kr4y1i7ru?p=90 \u4e3b\u952e\u8bbe\u8ba1\u539f\u5219\uff1a \u6ee1\u8db3\u4e1a\u52a1\u9700\u6c42\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u964d\u4f4e\u4e3b\u952e\u7684\u957f\u5ea6 \u63d2\u5165\u6570\u636e\u65f6\uff0c\u5c3d\u91cf\u9009\u62e9\u987a\u5e8f\u63d2\u5165\uff0c\u9009\u62e9\u4f7f\u7528 AUTO_INCREMENT \u81ea\u589e\u4e3b\u952e \u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528 UUID \u505a\u4e3b\u952e\u6216\u8005\u662f\u5176\u4ed6\u7684\u81ea\u7136\u4e3b\u952e\uff0c\u5982\u8eab\u4efd\u8bc1\u53f7 \u4e1a\u52a1\u64cd\u4f5c\u65f6\uff0c\u907f\u514d\u5bf9\u4e3b\u952e\u7684\u4fee\u6539","title":"\u4e3b\u952e\u4f18\u5316"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#order-by","text":"Using filesort\uff1a\u901a\u8fc7\u8868\u7684\u7d22\u5f15\u6216\u5168\u8868\u626b\u63cf\uff0c\u8bfb\u53d6\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u636e\u884c\uff0c\u7136\u540e\u5728\u6392\u5e8f\u7f13\u51b2\u533a sort buffer \u4e2d\u5b8c\u6210\u6392\u5e8f\u64cd\u4f5c\uff0c\u6240\u6709\u4e0d\u662f\u901a\u8fc7\u7d22\u5f15\u76f4\u63a5\u8fd4\u56de\u6392\u5e8f\u7ed3\u679c\u7684\u6392\u5e8f\u90fd\u53eb FileSort \u6392\u5e8f Using index\uff1a\u901a\u8fc7\u6709\u5e8f\u7d22\u5f15\u987a\u5e8f\u626b\u63cf\u76f4\u63a5\u8fd4\u56de\u6709\u5e8f\u6570\u636e\uff0c\u8fd9\u79cd\u60c5\u51b5\u5373\u4e3a using index\uff0c\u4e0d\u9700\u8981\u989d\u5916\u6392\u5e8f\uff0c\u64cd\u4f5c\u6548\u7387\u9ad8 \u5982\u679corder by\u5b57\u6bb5\u5168\u90e8\u4f7f\u7528\u5347\u5e8f\u6392\u5e8f\u6216\u8005\u964d\u5e8f\u6392\u5e8f\uff0c\u5219\u90fd\u4f1a\u8d70\u7d22\u5f15\uff0c\u4f46\u662f\u5982\u679c\u4e00\u4e2a\u5b57\u6bb5\u5347\u5e8f\u6392\u5e8f\uff0c\u53e6\u4e00\u4e2a\u5b57\u6bb5\u964d\u5e8f\u6392\u5e8f\uff0c\u5219\u4e0d\u4f1a\u8d70\u7d22\u5f15\uff0cexplain\u7684extra\u4fe1\u606f\u663e\u793a\u7684\u662f Using index, Using filesort \uff0c\u5982\u679c\u8981\u4f18\u5316\u6389Using filesort\uff0c\u5219\u9700\u8981\u53e6\u5916\u518d\u521b\u5efa\u4e00\u4e2a\u7d22\u5f15\uff0c\u5982\uff1a create index idx_user_age_phone_ad on tb_user(age asc, phone desc); \uff0c\u6b64\u65f6\u4f7f\u7528 select id, age, phone from tb_user order by age asc, phone desc; \u4f1a\u5168\u90e8\u8d70\u7d22\u5f15 \u603b\u7ed3\uff1a \u6839\u636e\u6392\u5e8f\u5b57\u6bb5\u5efa\u7acb\u5408\u9002\u7684\u7d22\u5f15\uff0c\u591a\u5b57\u6bb5\u6392\u5e8f\u65f6\uff0c\u4e5f\u9075\u5faa\u6700\u5de6\u524d\u7f00\u6cd5\u5219 \u5c3d\u91cf\u4f7f\u7528\u8986\u76d6\u7d22\u5f15 \u591a\u5b57\u6bb5\u6392\u5e8f\uff0c\u4e00\u4e2a\u5347\u5e8f\u4e00\u4e2a\u964d\u5e8f\uff0c\u6b64\u65f6\u9700\u8981\u6ce8\u610f\u8054\u5408\u7d22\u5f15\u5728\u521b\u5efa\u65f6\u7684\u89c4\u5219\uff08ASC/DESC\uff09 \u5982\u679c\u4e0d\u53ef\u907f\u514d\u51fa\u73b0filesort\uff0c\u5927\u6570\u636e\u91cf\u6392\u5e8f\u65f6\uff0c\u53ef\u4ee5\u9002\u5f53\u589e\u5927\u6392\u5e8f\u7f13\u51b2\u533a\u5927\u5c0f sort_buffer_size\uff08\u9ed8\u8ba4256k\uff09","title":"order by\u4f18\u5316"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#group-by","text":"\u5728\u5206\u7ec4\u64cd\u4f5c\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u6765\u63d0\u9ad8\u6548\u7387 \u5206\u7ec4\u64cd\u4f5c\u65f6\uff0c\u7d22\u5f15\u7684\u4f7f\u7528\u4e5f\u662f\u6ee1\u8db3\u6700\u5de6\u524d\u7f00\u6cd5\u5219\u7684 \u5982\u7d22\u5f15\u4e3a idx_user_pro_age_stat \uff0c\u5219\u53e5\u5f0f\u53ef\u4ee5\u662f select ... where profession order by age \uff0c\u8fd9\u6837\u4e5f\u7b26\u5408\u6700\u5de6\u524d\u7f00\u6cd5\u5219","title":"group by\u4f18\u5316"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#limit","text":"\u5e38\u89c1\u7684\u95ee\u9898\u5982 limit 2000000, 10 \uff0c\u6b64\u65f6\u9700\u8981 MySQL \u6392\u5e8f\u524d2000000\u6761\u8bb0\u5f55\uff0c\u4f46\u4ec5\u4ec5\u8fd4\u56de2000000 - 2000010\u7684\u8bb0\u5f55\uff0c\u5176\u4ed6\u8bb0\u5f55\u4e22\u5f03\uff0c\u67e5\u8be2\u6392\u5e8f\u7684\u4ee3\u4ef7\u975e\u5e38\u5927\u3002 \u4f18\u5316\u65b9\u6848\uff1a\u4e00\u822c\u5206\u9875\u67e5\u8be2\u65f6\uff0c\u901a\u8fc7\u521b\u5efa\u8986\u76d6\u7d22\u5f15\u80fd\u591f\u6bd4\u8f83\u597d\u5730\u63d0\u9ad8\u6027\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u8986\u76d6\u7d22\u5f15\u52a0\u5b50\u67e5\u8be2\u5f62\u5f0f\u8fdb\u884c\u4f18\u5316 \u4f8b\u5982\uff1a -- \u6b64\u8bed\u53e5\u8017\u65f6\u5f88\u957f select * from tb_sku limit 9000000, 10; -- \u901a\u8fc7\u8986\u76d6\u7d22\u5f15\u52a0\u5feb\u901f\u5ea6\uff0c\u76f4\u63a5\u901a\u8fc7\u4e3b\u952e\u7d22\u5f15\u8fdb\u884c\u6392\u5e8f\u53ca\u67e5\u8be2 select id from tb_sku order by id limit 9000000, 10; -- \u4e0b\u9762\u7684\u8bed\u53e5\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a MySQL \u4e0d\u652f\u6301 in \u91cc\u9762\u4f7f\u7528 limit -- select * from tb_sku where id in (select id from tb_sku order by id limit 9000000, 10); -- \u901a\u8fc7\u8fde\u8868\u67e5\u8be2\u5373\u53ef\u5b9e\u73b0\u7b2c\u4e00\u53e5\u7684\u6548\u679c\uff0c\u5e76\u4e14\u80fd\u8fbe\u5230\u7b2c\u4e8c\u53e5\u7684\u901f\u5ea6 select * from tb_sku as s, (select id from tb_sku order by id limit 9000000, 10) as a where s.id = a.id;","title":"limit\u4f18\u5316"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#count","text":"MyISAM \u5f15\u64ce\u628a\u4e00\u4e2a\u8868\u7684\u603b\u884c\u6570\u5b58\u5728\u4e86\u78c1\u76d8\u4e0a\uff0c\u56e0\u6b64\u6267\u884c count(*) \u7684\u65f6\u5019\u4f1a\u76f4\u63a5\u8fd4\u56de\u8fd9\u4e2a\u6570\uff0c\u6548\u7387\u5f88\u9ad8\uff08\u524d\u63d0\u662f\u4e0d\u9002\u7528where\uff09\uff1b InnoDB \u5728\u6267\u884c count(*) \u65f6\uff0c\u9700\u8981\u628a\u6570\u636e\u4e00\u884c\u4e00\u884c\u5730\u4ece\u5f15\u64ce\u91cc\u9762\u8bfb\u51fa\u6765\uff0c\u7136\u540e\u7d2f\u8ba1\u8ba1\u6570\u3002 \u4f18\u5316\u65b9\u6848\uff1a\u81ea\u5df1\u8ba1\u6570\uff0c\u5982\u521b\u5efakey-value\u8868\u5b58\u50a8\u5728\u5185\u5b58\u6216\u786c\u76d8\uff0c\u6216\u8005\u662f\u7528redis count\u7684\u51e0\u79cd\u7528\u6cd5\uff1a \u5982\u679ccount\u51fd\u6570\u7684\u53c2\u6570\uff08count\u91cc\u9762\u5199\u7684\u90a3\u4e2a\u5b57\u6bb5\uff09\u4e0d\u662fNULL\uff08\u5b57\u6bb5\u503c\u4e0d\u4e3aNULL\uff09\uff0c\u7d2f\u8ba1\u503c\u5c31\u52a0\u4e00\uff0c\u6700\u540e\u8fd4\u56de\u7d2f\u8ba1\u503c \u7528\u6cd5\uff1acount(*)\u3001count(\u4e3b\u952e)\u3001count(\u5b57\u6bb5)\u3001count(1) count(\u4e3b\u952e)\u8ddfcount(*)\u4e00\u6837\uff0c\u56e0\u4e3a\u4e3b\u952e\u4e0d\u80fd\u4e3a\u7a7a\uff1bcount(\u5b57\u6bb5)\u53ea\u8ba1\u7b97\u5b57\u6bb5\u503c\u4e0d\u4e3aNULL\u7684\u884c\uff1bcount(1)\u5f15\u64ce\u4f1a\u4e3a\u6bcf\u884c\u6dfb\u52a0\u4e00\u4e2a1\uff0c\u7136\u540e\u5c31count\u8fd9\u4e2a1\uff0c\u8fd4\u56de\u7ed3\u679c\u4e5f\u8ddfcount(*)\u4e00\u6837\uff1bcount(null)\u8fd4\u56de0 \u5404\u79cd\u7528\u6cd5\u7684\u6027\u80fd\uff1a count(\u4e3b\u952e)\uff1aInnoDB\u5f15\u64ce\u4f1a\u904d\u5386\u6574\u5f20\u8868\uff0c\u628a\u6bcf\u884c\u7684\u4e3b\u952eid\u503c\u90fd\u53d6\u51fa\u6765\uff0c\u8fd4\u56de\u7ed9\u670d\u52a1\u5c42\uff0c\u670d\u52a1\u5c42\u62ff\u5230\u4e3b\u952e\u540e\uff0c\u76f4\u63a5\u6309\u884c\u8fdb\u884c\u7d2f\u52a0\uff08\u4e3b\u952e\u4e0d\u53ef\u80fd\u4e3a\u7a7a\uff09 count(\u5b57\u6bb5)\uff1a\u6ca1\u6709not null\u7ea6\u675f\u7684\u8bdd\uff0cInnoDB\u5f15\u64ce\u4f1a\u904d\u5386\u6574\u5f20\u8868\u628a\u6bcf\u4e00\u884c\u7684\u5b57\u6bb5\u503c\u90fd\u53d6\u51fa\u6765\uff0c\u8fd4\u56de\u7ed9\u670d\u52a1\u5c42\uff0c\u670d\u52a1\u5c42\u5224\u65ad\u662f\u5426\u4e3anull\uff0c\u4e0d\u4e3anull\uff0c\u8ba1\u6570\u7d2f\u52a0\uff1b\u6709not null\u7ea6\u675f\u7684\u8bdd\uff0cInnoDB\u5f15\u64ce\u4f1a\u904d\u5386\u6574\u5f20\u8868\u628a\u6bcf\u4e00\u884c\u7684\u5b57\u6bb5\u503c\u90fd\u53d6\u51fa\u6765\uff0c\u8fd4\u56de\u7ed9\u670d\u52a1\u5c42\uff0c\u76f4\u63a5\u6309\u884c\u8fdb\u884c\u7d2f\u52a0 count(1)\uff1aInnoDB \u5f15\u64ce\u904d\u5386\u6574\u5f20\u8868\uff0c\u4f46\u4e0d\u53d6\u503c\u3002\u670d\u52a1\u5c42\u5bf9\u4e8e\u8fd4\u56de\u7684\u6bcf\u4e00\u5c42\uff0c\u653e\u4e00\u4e2a\u6570\u5b57 1 \u8fdb\u53bb\uff0c\u76f4\u63a5\u6309\u884c\u8fdb\u884c\u7d2f\u52a0 count(*)\uff1aInnoDB \u5f15\u64ce\u5e76\u4e0d\u4f1a\u628a\u5168\u90e8\u5b57\u6bb5\u53d6\u51fa\u6765\uff0c\u800c\u662f\u4e13\u95e8\u505a\u4e86\u4f18\u5316\uff0c\u4e0d\u53d6\u503c\uff0c\u670d\u52a1\u5c42\u76f4\u63a5\u6309\u884c\u8fdb\u884c\u7d2f\u52a0 \u6309\u6548\u7387\u6392\u5e8f\uff1acount(\u5b57\u6bb5) < count(\u4e3b\u952e) < count(1) < count(*)\uff0c\u6240\u4ee5\u5c3d\u91cf\u4f7f\u7528 count(*)","title":"count\u4f18\u5316"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#update","text":"InnoDB \u7684\u884c\u9501\u662f\u9488\u5bf9\u7d22\u5f15\u52a0\u7684\u9501\uff0c\u4e0d\u662f\u9488\u5bf9\u8bb0\u5f55\u52a0\u7684\u9501\uff0c\u5e76\u4e14\u8be5\u7d22\u5f15\u4e0d\u80fd\u5931\u6548\uff0c\u5426\u5219\u4f1a\u4ece\u884c\u9501\u5347\u7ea7\u4e3a\u8868\u9501\u3002 \u5982\u4ee5\u4e0b\u4e24\u6761\u8bed\u53e5\uff1a update student set no = '123' where id = 1; \uff0c\u8fd9\u53e5\u7531\u4e8eid\u6709\u4e3b\u952e\u7d22\u5f15\uff0c\u6240\u4ee5\u53ea\u4f1a\u9501\u8fd9\u4e00\u884c\uff1b update student set no = '123' where name = 'test'; \uff0c\u8fd9\u53e5\u7531\u4e8ename\u6ca1\u6709\u7d22\u5f15\uff0c\u6240\u4ee5\u4f1a\u628a\u6574\u5f20\u8868\u90fd\u9501\u4f4f\u8fdb\u884c\u6570\u636e\u66f4\u65b0\uff0c\u89e3\u51b3\u65b9\u6cd5\u662f\u7ed9name\u5b57\u6bb5\u6dfb\u52a0\u7d22\u5f15","title":"update\u4f18\u5316\uff08\u907f\u514d\u884c\u9501\u5347\u7ea7\u4e3a\u8868\u9501\uff09"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_24","text":"","title":"\u6570\u636e\u7c7b\u578b"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_25","text":"\u7c7b\u578b\u540d\u79f0 \u53d6\u503c\u8303\u56f4 \u5927\u5c0f TINYINT -128\u301c127 1\u4e2a\u5b57\u8282 SMALLINT -32768\u301c32767 2\u4e2a\u5b87\u8282 MEDIUMINT -8388608\u301c8388607 3\u4e2a\u5b57\u8282 INT (INTEGHR) -2147483648\u301c2147483647 4\u4e2a\u5b57\u8282 BIGINT -9223372036854775808\u301c9223372036854775807 8\u4e2a\u5b57\u8282 \u65e0\u7b26\u53f7\u5728\u6570\u636e\u7c7b\u578b\u540e\u52a0 unsigned \u5173\u952e\u5b57\u3002","title":"\u6574\u578b"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_26","text":"\u7c7b\u578b\u540d\u79f0 \u8bf4\u660e \u5b58\u50a8\u9700\u6c42 FLOAT \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570 4 \u4e2a\u5b57\u8282 DOUBLE \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570 8 \u4e2a\u5b57\u8282 DECIMAL (M, D)\uff0cDEC \u538b\u7f29\u7684\u201c\u4e25\u683c\u201d\u5b9a\u70b9\u6570 M+2 \u4e2a\u5b57\u8282","title":"\u6d6e\u70b9\u578b"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_27","text":"\u7c7b\u578b\u540d\u79f0 \u65e5\u671f\u683c\u5f0f \u65e5\u671f\u8303\u56f4 \u5b58\u50a8\u9700\u6c42 YEAR YYYY 1901 ~ 2155 1 \u4e2a\u5b57\u8282 TIME HH:MM:SS -838:59:59 ~ 838:59:59 3 \u4e2a\u5b57\u8282 DATE YYYY-MM-DD 1000-01-01 ~ 9999-12-3 3 \u4e2a\u5b57\u8282 DATETIME YYYY-MM-DD HH:MM:SS 1000-01-01 00:00:00 ~ 9999-12-31 23:59:59 8 \u4e2a\u5b57\u8282 TIMESTAMP YYYY-MM-DD HH:MM:SS 1980-01-01 00:00:01 UTC ~ 2040-01-19 03:14:07 UTC 4 \u4e2a\u5b57\u8282","title":"\u65e5\u671f\u548c\u65f6\u95f4"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_28","text":"\u7c7b\u578b\u540d\u79f0 \u8bf4\u660e \u5b58\u50a8\u9700\u6c42 CHAR(M) \u56fa\u5b9a\u957f\u5ea6\u975e\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 M \u5b57\u8282\uff0c1<=M<=255 VARCHAR(M) \u53d8\u957f\u975e\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 L+1\u5b57\u8282\uff0c\u5728\u6b64\uff0cL< = M\u548c 1<=M<=255 TINYTEXT \u975e\u5e38\u5c0f\u7684\u975e\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 L+1\u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^8 TEXT \u5c0f\u7684\u975e\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 L+2\u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^16 MEDIUMTEXT \u4e2d\u7b49\u5927\u5c0f\u7684\u975e\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 L+3\u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^24 LONGTEXT \u5927\u7684\u975e\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 L+4\u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^32 ENUM \u679a\u4e3e\u7c7b\u578b\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a\u679a\u4e3e\u5b57\u7b26\u4e32\u503c 1\u62162\u4e2a\u5b57\u8282\uff0c\u53d6\u51b3\u4e8e\u679a\u4e3e\u503c\u7684\u6570\u76ee (\u6700\u5927\u503c\u4e3a65535) SET \u4e00\u4e2a\u8bbe\u7f6e\uff0c\u5b57\u7b26\u4e32\u5bf9\u8c61\u53ef\u4ee5\u6709\u96f6\u4e2a\u6216 \u591a\u4e2aSET\u6210\u5458 1\u30012\u30013\u30014\u62168\u4e2a\u5b57\u8282\uff0c\u53d6\u51b3\u4e8e\u96c6\u5408 \u6210\u5458\u7684\u6570\u91cf\uff08\u6700\u591a64\u4e2a\u6210\u5458\uff09","title":"\u5b57\u7b26\u4e32"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_29","text":"\u7c7b\u578b\u540d\u79f0 \u8bf4\u660e \u5b58\u50a8\u9700\u6c42 BIT(M) \u4f4d\u5b57\u6bb5\u7c7b\u578b \u5927\u7ea6 (M+7)/8 \u5b57\u8282 BINARY(M) \u56fa\u5b9a\u957f\u5ea6\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 M \u5b57\u8282 VARBINARY (M) \u53ef\u53d8\u957f\u5ea6\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 M+1 \u5b57\u8282 TINYBLOB (M) \u975e\u5e38\u5c0f\u7684BLOB L+1 \u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^8 BLOB (M) \u5c0f BLOB L+2 \u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^16 MEDIUMBLOB (M) \u4e2d\u7b49\u5927\u5c0f\u7684BLOB L+3 \u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^24 LONGBLOB (M) \u975e\u5e38\u5927\u7684BLOB L+4 \u5b57\u8282\uff0c\u5728\u6b64\uff0cL<2^32","title":"\u4e8c\u8fdb\u5236\u7c7b\u578b"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_30","text":"\u5177\u4f53\u6743\u9650\u7684\u4f5c\u7528\u8be6\u89c1 \u5b98\u65b9\u6587\u6863 GRANT \u548c REVOKE \u5141\u8bb8\u7684\u9759\u6001\u6743\u9650 Privilege Grant Table Column Context ALL [PRIVILEGES] Synonym for \u201call privileges\u201d Server administration ALTER Alter_priv Tables ALTER ROUTINE Alter_routine_priv Stored routines CREATE Create_priv Databases, tables, or indexes CREATE ROLE Create_role_priv Server administration CREATE ROUTINE Create_routine_priv Stored routines CREATE TABLESPACE Create_tablespace_priv Server administration CREATE TEMPORARY TABLES Create_tmp_table_priv Tables CREATE USER Create_user_priv Server administration CREATE VIEW Create_view_priv Views DELETE Delete_priv Tables DROP Drop_priv Databases, tables, or views DROP ROLE Drop_role_priv Server administration EVENT Event_priv Databases EXECUTE Execute_priv Stored routines FILE File_priv File access on server host GRANT OPTION Grant_priv Databases, tables, or stored routines INDEX Index_priv Tables INSERT Insert_priv Tables or columns LOCK TABLES Lock_tables_priv Databases PROCESS Process_priv Server administration PROXY See proxies_priv table Server administration REFERENCES References_priv Databases or tables RELOAD Reload_priv Server administration REPLICATION CLIENT Repl_client_priv Server administration REPLICATION SLAVE Repl_slave_priv Server administration SELECT Select_priv Tables or columns SHOW DATABASES Show_db_priv Server administration SHOW VIEW Show_view_priv Views SHUTDOWN Shutdown_priv Server administration SUPER Super_priv Server administration TRIGGER Trigger_priv Tables UPDATE Update_priv Tables or columns USAGE Synonym for \u201cno privileges\u201d Server administration GRANT \u548c REVOKE \u5141\u8bb8\u7684\u52a8\u6001\u6743\u9650 Privilege Context APPLICATION_PASSWORD_ADMIN Dual password administration AUDIT_ABORT_EXEMPT Allow queries blocked by audit log filter AUDIT_ADMIN Audit log administration AUTHENTICATION_POLICY_ADMIN Authentication administration BACKUP_ADMIN Backup administration BINLOG_ADMIN Backup and Replication administration BINLOG_ENCRYPTION_ADMIN Backup and Replication administration CLONE_ADMIN Clone administration CONNECTION_ADMIN Server administration ENCRYPTION_KEY_ADMIN Server administration FIREWALL_ADMIN Firewall administration FIREWALL_EXEMPT Firewall administration FIREWALL_USER Firewall administration FLUSH_OPTIMIZER_COSTS Server administration FLUSH_STATUS Server administration FLUSH_TABLES Server administration FLUSH_USER_RESOURCES Server administration GROUP_REPLICATION_ADMIN Replication administration GROUP_REPLICATION_STREAM Replication administration INNODB_REDO_LOG_ARCHIVE Redo log archiving administration NDB_STORED_USER NDB Cluster PASSWORDLESS_USER_ADMIN Authentication administration PERSIST_RO_VARIABLES_ADMIN Server administration REPLICATION_APPLIER PRIVILEGE_CHECKS_USER for a replication channel REPLICATION_SLAVE_ADMIN Replication administration RESOURCE_GROUP_ADMIN Resource group administration RESOURCE_GROUP_USER Resource group administration ROLE_ADMIN Server administration SESSION_VARIABLES_ADMIN Server administration SET_USER_ID Server administration SHOW_ROUTINE Server administration SYSTEM_USER Server administration SYSTEM_VARIABLES_ADMIN Server administration TABLE_ENCRYPTION_ADMIN Server administration VERSION_TOKEN_ADMIN Server administration XA_RECOVER_ADMIN Server administration","title":"\u6743\u9650\u4e00\u89c8\u8868"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_31","text":"Workbench(\u514d\u8d39): http://dev.mysql.com/downloads/workbench/ navicat(\u6536\u8d39\uff0c\u8bd5\u7528\u724830\u5929): https://www.navicat.com/en/download/navicat-for-mysql Sequel Pro(\u5f00\u6e90\u514d\u8d39\uff0c\u4ec5\u652f\u6301Mac OS): http://www.sequelpro.com/ HeidiSQL(\u514d\u8d39): http://www.heidisql.com/ phpMyAdmin(\u514d\u8d39): https://www.phpmyadmin.net/ SQLyog: https://sqlyog.en.softonic.com/","title":"\u56fe\u5f62\u5316\u754c\u9762\u5de5\u5177"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_32","text":"","title":"\u5b89\u88c5"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_33","text":"\u5728SQL\u8bed\u53e5\u4e4b\u540e\u52a0\u4e0a \\G \u4f1a\u5c06\u7ed3\u679c\u7684\u8868\u683c\u5f62\u5f0f\u8f6c\u6362\u6210\u884c\u6587\u672c\u5f62\u5f0f \u67e5\u770bMysql\u6570\u636e\u5e93\u5360\u7528\u7a7a\u95f4\uff1a SELECT table_schema \"Database Name\" , SUM(data_length + index_length) / (1024 * 1024) \"Database Size in MB\" FROM information_schema.TABLES GROUP BY table_schema;","title":"\u5c0f\u6280\u5de7"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/SQL%E8%BF%9B%E9%98%B6/#_34","text":"\u540e\u7eed\u5185\u5bb9\u56e0\u4e3a\u8ddf\u5f53\u524d\u5b66\u4e60\u3001\u5de5\u4f5c\u8ba1\u5212\u6709\u51b2\u7a81\uff0c\u6240\u4ee5\u540e\u7eed\u8bfe\u7a0b\u7684\u5b66\u4e60\u8ba1\u5212\u4f1a\u65e0\u9650\u671f\u63a8\u540e\u3002 \u76ee\u524d\u7684\u5de5\u4f5c\u91cd\u70b9\u653e\u5728\u91cd\u505a\u4e00\u4e2a\u5b66\u4e60\u7b14\u8bb0\u7f51\u7ad9\uff0c\u5f53\u7136\u8fd9\u662f\u8fb9\u505a\u8fb9\u5b66\u7684\uff0c\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u96be\u70b9\u548c\u77e5\u8bc6\u70b9\u6211\u4e5f\u4f1a\u8bb0\u5f55\u4e0b\u6765\u4f9b\u5927\u5bb6\u5b66\u4e60\u3002 \u5728\u6b64\u611f\u8c22B\u7ad9\u540c\u6837\u7231\u5b66\u4e60\u7684\u540c\u5b66 @\u5b88\u5fc3-\u4eba \u63d0\u4f9b\u7684\u540e\u7eed\u8bfe\u7a0b\u7b14\u8bb0\uff0c\u5927\u5bb6\u6709\u6761\u4ef6\u4e00\u5b9a\u8981\u53bb\u7ed9\u4e2astar\uff0c\u4f60\u7684\u6bcf\u4e00\u4e2astar\u548c\u70b9\u8d5e\u90fd\u662f\u6211\u4eec\u524d\u8fdb\u7684\u52a8\u529b https://github.com/Buildings-Lei/mysql_note/blob/main/README.md","title":"\u540e\u7eed\u5185\u5bb9"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Spark/","text":"","title":"Spark"},{"location":"%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E6%95%B0%E4%BB%93%E7%90%86%E8%AE%BA/","text":"","title":"\u6570\u4ed3\u7406\u8bba"}]}